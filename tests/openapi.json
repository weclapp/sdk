{
    "openapi": "3.0.1",
    "info": {
        "title": "weclapp API",
        "contact": {
            "name": "weclapp",
            "url": "https://www.weclapp.com",
            "email": "support@weclapp.com"
        },
        "version": "1"
    },
    "servers": [
        {
            "url": "{protocol}://{host}:{port}/webapp/api/v1",
            "variables": {
                "protocol": {
                    "enum": ["http", "https"],
                    "default": "https"
                },
                "host": {
                    "default": "localhost"
                },
                "port": {
                    "default": "80"
                }
            }
        }
    ],
    "security": [
        {
            "api-token": []
        }
    ],
    "paths": {
        "/_app_crmCallCategory": {
            "get": {
                "tags": ["_app_crmCallCategory"],
                "description": "query _app_crmCallCategory",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "_app_crmCallCategory response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["_app_crmCallCategory"],
                "description": "create a _app_crmCallCategory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "_app_crmCallCategory create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/_app_crmCallCategory/count": {
            "get": {
                "tags": ["_app_crmCallCategory"],
                "description": "count _app_crmCallCategory",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/_app_crmCallCategory/id/{id}": {
            "get": {
                "tags": ["_app_crmCallCategory"],
                "description": "query _app_crmCallCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["_app_crmCallCategory"],
                "description": "update _app_crmCallCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "_app_crmCallCategory update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["_app_crmCallCategory"],
                "description": "delete a _app_crmCallCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "_app_crmCallCategory delete response"
                    }
                }
            }
        },
        "/_app_crmCallLog": {
            "get": {
                "tags": ["_app_crmCallLog"],
                "description": "query _app_crmCallLog",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "_app_crmCallLog response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/crmCallLogForApp"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["_app_crmCallLog"],
                "description": "create a _app_crmCallLog",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/crmCallLogForApp"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "_app_crmCallLog create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/crmCallLogForApp"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/_app_crmCallLog/count": {
            "get": {
                "tags": ["_app_crmCallLog"],
                "description": "count _app_crmCallLog",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/_app_crmCallLog/id/{id}": {
            "get": {
                "tags": ["_app_crmCallLog"],
                "description": "query _app_crmCallLog",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/crmCallLogForApp"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/_app_crmEventCategory": {
            "get": {
                "tags": ["_app_crmEventCategory"],
                "description": "query _app_crmEventCategory",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "_app_crmEventCategory response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["_app_crmEventCategory"],
                "description": "create a _app_crmEventCategory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "_app_crmEventCategory create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/_app_crmEventCategory/count": {
            "get": {
                "tags": ["_app_crmEventCategory"],
                "description": "count _app_crmEventCategory",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/_app_crmEventCategory/id/{id}": {
            "get": {
                "tags": ["_app_crmEventCategory"],
                "description": "query _app_crmEventCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["_app_crmEventCategory"],
                "description": "update _app_crmEventCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "_app_crmEventCategory update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["_app_crmEventCategory"],
                "description": "delete a _app_crmEventCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "_app_crmEventCategory delete response"
                    }
                }
            }
        },
        "/_app_mapbox/optimizedRouteMapbox": {
            "get": {
                "tags": ["_app_mapbox"],
                "parameters": [
                    {
                        "name": "customerIds",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "optimizedRouteMapbox response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accountingTransaction": {
            "get": {
                "tags": ["accountingTransaction"],
                "description": "query accountingTransaction",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "accountingTransaction response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/accountingTransaction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accountingTransaction/count": {
            "get": {
                "tags": ["accountingTransaction"],
                "description": "count accountingTransaction",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accountingTransaction/bookIncomingPayment": {
            "post": {
                "tags": ["accountingTransaction"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["moneyTransactionIds"],
                                "type": "object",
                                "properties": {
                                    "moneyTransactionIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer",
                                            "format": "int32"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "bookIncomingPayment response"
                    }
                }
            }
        },
        "/accountingTransaction/id/{id}": {
            "get": {
                "tags": ["accountingTransaction"],
                "description": "query accountingTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/accountingTransaction"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/activityFeedEntry/lastEntries": {
            "get": {
                "tags": ["activityFeedEntry"],
                "parameters": [
                    {
                        "name": "count",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "lastEntries response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/activityFeedEntry"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/appSettings": {
            "get": {
                "tags": ["appSettings"],
                "description": "query appSettings",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "appSettings response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/appSettings"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["appSettings"],
                "description": "create a appSettings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/appSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "appSettings create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appSettings"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/appSettings/count": {
            "get": {
                "tags": ["appSettings"],
                "description": "count appSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/appSettings/id/{id}": {
            "get": {
                "tags": ["appSettings"],
                "description": "query appSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appSettings"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["appSettings"],
                "description": "update appSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/appSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "appSettings update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appSettings"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["appSettings"],
                "description": "delete a appSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "appSettings delete response"
                    }
                }
            }
        },
        "/appUserSettings": {
            "get": {
                "tags": ["appUserSettings"],
                "description": "query appUserSettings",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "appUserSettings response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/appUserSettings"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["appUserSettings"],
                "description": "create a appUserSettings",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/appUserSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "appUserSettings create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appUserSettings"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/appUserSettings/count": {
            "get": {
                "tags": ["appUserSettings"],
                "description": "count appUserSettings",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/appUserSettings/id/{id}": {
            "get": {
                "tags": ["appUserSettings"],
                "description": "query appUserSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appUserSettings"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["appUserSettings"],
                "description": "update appUserSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/appUserSettings"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "appUserSettings update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/appUserSettings"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["appUserSettings"],
                "description": "delete a appUserSettings",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "appUserSettings delete response"
                    }
                }
            }
        },
        "/archivedEmail": {
            "get": {
                "tags": ["archivedEmail"],
                "description": "query archivedEmail",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "archivedEmail response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/archivedEmail"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/archivedEmail/count": {
            "get": {
                "tags": ["archivedEmail"],
                "description": "count archivedEmail",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/archivedEmail/create": {
            "post": {
                "tags": ["archivedEmail"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["archivedEmailWithAttachments", "entityId", "entityName"],
                                "type": "object",
                                "properties": {
                                    "entityName": {
                                        "type": "string"
                                    },
                                    "entityId": {
                                        "type": "string"
                                    },
                                    "archivedEmailWithAttachments": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "version": {
                                                "type": "string"
                                            },
                                            "attachments": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/archivedEmailAttachment"
                                                }
                                            },
                                            "bccAddresses": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "body": {
                                                "type": "string"
                                            },
                                            "ccAddresses": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "createdDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "fromAddress": {
                                                "type": "string"
                                            },
                                            "lastModifiedDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "messageIdentifier": {
                                                "type": "string"
                                            },
                                            "receivedDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "replyToAddress": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "subject": {
                                                "type": "string"
                                            },
                                            "toAddresses": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/archivedEmail"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/archivedEmail/id/{id}": {
            "get": {
                "tags": ["archivedEmail"],
                "description": "query archivedEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/archivedEmail"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["archivedEmail"],
                "description": "delete a archivedEmail",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "archivedEmail delete response"
                    }
                }
            }
        },
        "/article": {
            "get": {
                "tags": ["article"],
                "description": "query article",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "article response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/article"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["article"],
                "description": "create a article",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/article"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "article create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/article"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/article/count": {
            "get": {
                "tags": ["article"],
                "description": "count article",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/article/createItScopeArticle": {
            "get": {
                "tags": ["article"],
                "parameters": [
                    {
                        "name": "articleId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createItScopeArticle response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/article/id/{id}": {
            "get": {
                "tags": ["article"],
                "description": "query article",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/article"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["article"],
                "description": "update article",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/article"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "article update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/article"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["article"],
                "description": "delete a article",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "article delete response"
                    }
                }
            }
        },
        "/article/id/{id}/downloadArticleImage": {
            "get": {
                "tags": ["article"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "articleImageId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "preview",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadArticleImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/article/id/{id}/downloadMainArticleImage": {
            "get": {
                "tags": ["article"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "preview",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadMainArticleImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/article/id/{id}/extraInfoForApp": {
            "get": {
                "tags": ["article"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "extraInfoForApp response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/articleExtraInformation"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/article/id/{id}/uploadArticleImage": {
            "post": {
                "tags": ["article"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "mainImage",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "uploadArticleImage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleAccountingCode": {
            "get": {
                "tags": ["articleAccountingCode"],
                "description": "query articleAccountingCode",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "articleAccountingCode response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["articleAccountingCode"],
                "description": "create a articleAccountingCode",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "articleAccountingCode create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleAccountingCode/count": {
            "get": {
                "tags": ["articleAccountingCode"],
                "description": "count articleAccountingCode",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleAccountingCode/id/{id}": {
            "get": {
                "tags": ["articleAccountingCode"],
                "description": "query articleAccountingCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["articleAccountingCode"],
                "description": "update articleAccountingCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "articleAccountingCode update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["articleAccountingCode"],
                "description": "delete a articleAccountingCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "articleAccountingCode delete response"
                    }
                }
            }
        },
        "/articleCategory": {
            "get": {
                "tags": ["articleCategory"],
                "description": "query articleCategory",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "articleCategory response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/articleCategory"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["articleCategory"],
                "description": "create a articleCategory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/articleCategory"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "articleCategory create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/articleCategory"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleCategory/count": {
            "get": {
                "tags": ["articleCategory"],
                "description": "count articleCategory",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleCategory/id/{id}": {
            "get": {
                "tags": ["articleCategory"],
                "description": "query articleCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/articleCategory"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["articleCategory"],
                "description": "update articleCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/articleCategory"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "articleCategory update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/articleCategory"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["articleCategory"],
                "description": "delete a articleCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "articleCategory delete response"
                    }
                }
            }
        },
        "/articleCategory/id/{id}/downloadImage": {
            "get": {
                "tags": ["articleCategory"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "imageId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleCategory/id/{id}/uploadImage": {
            "post": {
                "tags": ["articleCategory"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "uploadImage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articlePrice": {
            "get": {
                "tags": ["articlePrice"],
                "description": "query articlePrice",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "articlePrice response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/articlePrice"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articlePrice/count": {
            "get": {
                "tags": ["articlePrice"],
                "description": "count articlePrice",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articlePrice/id/{id}": {
            "get": {
                "tags": ["articlePrice"],
                "description": "query articlePrice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/articlePrice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleRating": {
            "get": {
                "tags": ["articleRating"],
                "description": "query articleRating",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "articleRating response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["articleRating"],
                "description": "create a articleRating",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "articleRating create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleRating/count": {
            "get": {
                "tags": ["articleRating"],
                "description": "count articleRating",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleRating/id/{id}": {
            "get": {
                "tags": ["articleRating"],
                "description": "query articleRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["articleRating"],
                "description": "update articleRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "articleRating update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["articleRating"],
                "description": "delete a articleRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "articleRating delete response"
                    }
                }
            }
        },
        "/articleSupplySource": {
            "get": {
                "tags": ["articleSupplySource"],
                "description": "query articleSupplySource",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "articleSupplySource response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/articleSupplySource"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["articleSupplySource"],
                "description": "create a articleSupplySource",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/articleSupplySource"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "articleSupplySource create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/articleSupplySource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleSupplySource/count": {
            "get": {
                "tags": ["articleSupplySource"],
                "description": "count articleSupplySource",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/articleSupplySource/id/{id}": {
            "get": {
                "tags": ["articleSupplySource"],
                "description": "query articleSupplySource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/articleSupplySource"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["articleSupplySource"],
                "description": "update articleSupplySource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/articleSupplySource"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "articleSupplySource update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/articleSupplySource"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bankAccount": {
            "get": {
                "tags": ["bankAccount"],
                "description": "query bankAccount",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "bankAccount response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/bankAccount"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["bankAccount"],
                "description": "create a bankAccount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bankAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "bankAccount create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bankAccount"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bankAccount/count": {
            "get": {
                "tags": ["bankAccount"],
                "description": "count bankAccount",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bankAccount/id/{id}": {
            "get": {
                "tags": ["bankAccount"],
                "description": "query bankAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bankAccount"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["bankAccount"],
                "description": "update bankAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/bankAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "bankAccount update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/bankAccount"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["bankAccount"],
                "description": "delete a bankAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "bankAccount delete response"
                    }
                }
            }
        },
        "/batchNumber": {
            "get": {
                "tags": ["batchNumber"],
                "description": "query batchNumber",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "batchNumber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/batchNumber"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/batchNumber/count": {
            "get": {
                "tags": ["batchNumber"],
                "description": "count batchNumber",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/batchNumber/id/{id}": {
            "get": {
                "tags": ["batchNumber"],
                "description": "query batchNumber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/batchNumber"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blanketPurchaseOrder": {
            "get": {
                "tags": ["blanketPurchaseOrder"],
                "description": "query blanketPurchaseOrder",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "blanketPurchaseOrder response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/blanketPurchaseOrder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["blanketPurchaseOrder"],
                "description": "create a blanketPurchaseOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/blanketPurchaseOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "blanketPurchaseOrder create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/blanketPurchaseOrder"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blanketPurchaseOrder/count": {
            "get": {
                "tags": ["blanketPurchaseOrder"],
                "description": "count blanketPurchaseOrder",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blanketPurchaseOrder/id/{id}": {
            "get": {
                "tags": ["blanketPurchaseOrder"],
                "description": "query blanketPurchaseOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/blanketPurchaseOrder"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["blanketPurchaseOrder"],
                "description": "update blanketPurchaseOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/blanketPurchaseOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "blanketPurchaseOrder update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/blanketPurchaseOrder"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["blanketPurchaseOrder"],
                "description": "delete a blanketPurchaseOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "blanketPurchaseOrder delete response"
                    }
                }
            }
        },
        "/blanketPurchaseOrder/id/{id}/downloadLatestBlanketPurchaseOrderPdf": {
            "get": {
                "tags": ["blanketPurchaseOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestBlanketPurchaseOrderPdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blanketPurchaseOrder/id/{id}/generateReleases": {
            "post": {
                "tags": ["blanketPurchaseOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["firstScheduledDeliveryDate", "fixReleasedQuantity", "repeatInterval", "repeatType"],
                                "type": "object",
                                "properties": {
                                    "firstScheduledDeliveryDate": {
                                        "type": "integer",
                                        "format": "timestamp"
                                    },
                                    "repeatInterval": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "repeatType": {
                                        "type": "string",
                                        "enum": ["DAY", "MONTH", "WEEK", "YEAR"]
                                    },
                                    "fixReleasedQuantity": {
                                        "type": "boolean"
                                    },
                                    "releasedQuantity": {
                                        "type": "string",
                                        "format": "number"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "generateReleases response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/blanketPurchaseOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendar": {
            "get": {
                "tags": ["calendar"],
                "description": "query calendar",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "calendar response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/calendar"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["calendar"],
                "description": "create a calendar",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/calendar"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "calendar create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/calendar"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendar/count": {
            "get": {
                "tags": ["calendar"],
                "description": "count calendar",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendar/id/{id}": {
            "get": {
                "tags": ["calendar"],
                "description": "query calendar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/calendar"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["calendar"],
                "description": "update calendar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/calendar"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "calendar update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/calendar"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["calendar"],
                "description": "delete a calendar",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "calendar delete response"
                    }
                }
            }
        },
        "/calendar/id/{id}/deleteCalendarAndMoveEvents": {
            "post": {
                "tags": ["calendar"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["replacementCalendarId"],
                                "type": "object",
                                "properties": {
                                    "replacementCalendarId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "deleteCalendarAndMoveEvents response"
                    }
                }
            }
        },
        "/calendar/id/{id}/importiCal": {
            "post": {
                "tags": ["calendar"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "importiCal response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendarEvent": {
            "get": {
                "tags": ["calendarEvent"],
                "description": "query calendarEvent",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "calendarEvent response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/calendarEvent"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["calendarEvent"],
                "description": "create a calendarEvent",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/calendarEvent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "calendarEvent create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/calendarEvent"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendarEvent/count": {
            "get": {
                "tags": ["calendarEvent"],
                "description": "count calendarEvent",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/calendarEvent/id/{id}": {
            "get": {
                "tags": ["calendarEvent"],
                "description": "query calendarEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/calendarEvent"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["calendarEvent"],
                "description": "update calendarEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/calendarEvent"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "calendarEvent update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/calendarEvent"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["calendarEvent"],
                "description": "delete a calendarEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "calendarEvent delete response"
                    }
                }
            }
        },
        "/campaign": {
            "get": {
                "tags": ["campaign"],
                "description": "query campaign",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "campaign response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/campaign"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["campaign"],
                "description": "create a campaign",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/campaign"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "campaign create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/campaign"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaign/count": {
            "get": {
                "tags": ["campaign"],
                "description": "count campaign",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaign/id/{id}": {
            "get": {
                "tags": ["campaign"],
                "description": "query campaign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/campaign"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["campaign"],
                "description": "update campaign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/campaign"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "campaign update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/campaign"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["campaign"],
                "description": "delete a campaign",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "campaign delete response"
                    }
                }
            }
        },
        "/campaignParticipant": {
            "get": {
                "tags": ["campaignParticipant"],
                "description": "query campaignParticipant",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "campaignParticipant response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/campaignParticipant"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["campaignParticipant"],
                "description": "create a campaignParticipant",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/campaignParticipant"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "campaignParticipant create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/campaignParticipant"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaignParticipant/count": {
            "get": {
                "tags": ["campaignParticipant"],
                "description": "count campaignParticipant",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/campaignParticipant/id/{id}": {
            "get": {
                "tags": ["campaignParticipant"],
                "description": "query campaignParticipant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/campaignParticipant"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["campaignParticipant"],
                "description": "update campaignParticipant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/campaignParticipant"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "campaignParticipant update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/campaignParticipant"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["campaignParticipant"],
                "description": "delete a campaignParticipant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "campaignParticipant delete response"
                    }
                }
            }
        },
        "/cashAccount": {
            "get": {
                "tags": ["cashAccount"],
                "description": "query cashAccount",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cashAccount response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/cashAccount"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cashAccount/count": {
            "get": {
                "tags": ["cashAccount"],
                "description": "count cashAccount",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cashAccount/id/{id}": {
            "get": {
                "tags": ["cashAccount"],
                "description": "query cashAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cashAccount"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cashAccountSheet": {
            "get": {
                "tags": ["cashAccountSheet"],
                "description": "query cashAccountSheet",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cashAccountSheet response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/cashAccountSheet"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["cashAccountSheet"],
                "description": "create a cashAccountSheet",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/cashAccountSheet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "cashAccountSheet create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cashAccountSheet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cashAccountSheet/count": {
            "get": {
                "tags": ["cashAccountSheet"],
                "description": "count cashAccountSheet",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/cashAccountSheet/id/{id}": {
            "get": {
                "tags": ["cashAccountSheet"],
                "description": "query cashAccountSheet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cashAccountSheet"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["cashAccountSheet"],
                "description": "update cashAccountSheet",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/cashAccountSheet"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "cashAccountSheet update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/cashAccountSheet"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comment": {
            "get": {
                "tags": ["comment"],
                "description": "query comment",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "comment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/comment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["comment"],
                "description": "create a comment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/comment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "comment create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/comment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comment/count": {
            "get": {
                "tags": ["comment"],
                "description": "count comment",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/comment/id/{id}": {
            "get": {
                "tags": ["comment"],
                "description": "query comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/comment"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["comment"],
                "description": "update comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/comment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "comment update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/comment"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["comment"],
                "description": "delete a comment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "comment delete response"
                    }
                }
            }
        },
        "/commercialLanguage": {
            "get": {
                "tags": ["commercialLanguage"],
                "description": "query commercialLanguage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "commercialLanguage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/commercialLanguage"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commercialLanguage/count": {
            "get": {
                "tags": ["commercialLanguage"],
                "description": "count commercialLanguage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/commercialLanguage/id/{id}": {
            "get": {
                "tags": ["commercialLanguage"],
                "description": "query commercialLanguage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/commercialLanguage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companySize": {
            "get": {
                "tags": ["companySize"],
                "description": "query companySize",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "companySize response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["companySize"],
                "description": "create a companySize",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "companySize create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companySize/count": {
            "get": {
                "tags": ["companySize"],
                "description": "count companySize",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/companySize/id/{id}": {
            "get": {
                "tags": ["companySize"],
                "description": "query companySize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["companySize"],
                "description": "update companySize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "companySize update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["companySize"],
                "description": "delete a companySize",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "companySize delete response"
                    }
                }
            }
        },
        "/contact": {
            "get": {
                "tags": ["contact"],
                "description": "query contact",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contact response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/contact"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["contact"],
                "description": "create a contact",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/contact"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "contact create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contact"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contact/count": {
            "get": {
                "tags": ["contact"],
                "description": "count contact",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contact/id/{id}": {
            "get": {
                "tags": ["contact"],
                "description": "query contact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contact"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["contact"],
                "description": "update contact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/contact"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "contact update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contact"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["contact"],
                "description": "delete a contact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "contact delete response"
                    }
                }
            }
        },
        "/contact/id/{id}/downloadImage": {
            "get": {
                "tags": ["contact"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contact/id/{id}/uploadImage": {
            "post": {
                "tags": ["contact"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "uploadImage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contract": {
            "get": {
                "tags": ["contract"],
                "description": "query contract",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contract response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/contract"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["contract"],
                "description": "create a contract",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/contract"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "contract create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contract"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contract/count": {
            "get": {
                "tags": ["contract"],
                "description": "count contract",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contract/id/{id}": {
            "get": {
                "tags": ["contract"],
                "description": "query contract",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contract"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["contract"],
                "description": "update contract",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/contract"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "contract update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contract"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["contract"],
                "description": "delete a contract",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "contract delete response"
                    }
                }
            }
        },
        "/contractAuthorizationUnit": {
            "get": {
                "tags": ["contractAuthorizationUnit"],
                "description": "query contractAuthorizationUnit",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contractAuthorizationUnit response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/contractAuthorizationUnit"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractAuthorizationUnit/count": {
            "get": {
                "tags": ["contractAuthorizationUnit"],
                "description": "count contractAuthorizationUnit",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractAuthorizationUnit/id/{id}": {
            "get": {
                "tags": ["contractAuthorizationUnit"],
                "description": "query contractAuthorizationUnit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/contractAuthorizationUnit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractBillingGroup": {
            "get": {
                "tags": ["contractBillingGroup"],
                "description": "query contractBillingGroup",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contractBillingGroup response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["contractBillingGroup"],
                "description": "create a contractBillingGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "contractBillingGroup create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractBillingGroup/count": {
            "get": {
                "tags": ["contractBillingGroup"],
                "description": "count contractBillingGroup",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractBillingGroup/id/{id}": {
            "get": {
                "tags": ["contractBillingGroup"],
                "description": "query contractBillingGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["contractBillingGroup"],
                "description": "update contractBillingGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "contractBillingGroup update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["contractBillingGroup"],
                "description": "delete a contractBillingGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "contractBillingGroup delete response"
                    }
                }
            }
        },
        "/contractTerminationReason": {
            "get": {
                "tags": ["contractTerminationReason"],
                "description": "query contractTerminationReason",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contractTerminationReason response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["contractTerminationReason"],
                "description": "create a contractTerminationReason",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "contractTerminationReason create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractTerminationReason/count": {
            "get": {
                "tags": ["contractTerminationReason"],
                "description": "count contractTerminationReason",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractTerminationReason/id/{id}": {
            "get": {
                "tags": ["contractTerminationReason"],
                "description": "query contractTerminationReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["contractTerminationReason"],
                "description": "update contractTerminationReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "contractTerminationReason update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["contractTerminationReason"],
                "description": "delete a contractTerminationReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "contractTerminationReason delete response"
                    }
                }
            }
        },
        "/contractType": {
            "get": {
                "tags": ["contractType"],
                "description": "query contractType",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contractType response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["contractType"],
                "description": "create a contractType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "contractType create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractType/count": {
            "get": {
                "tags": ["contractType"],
                "description": "count contractType",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/contractType/id/{id}": {
            "get": {
                "tags": ["contractType"],
                "description": "query contractType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["contractType"],
                "description": "update contractType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "contractType update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["contractType"],
                "description": "delete a contractType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "contractType delete response"
                    }
                }
            }
        },
        "/costCenter": {
            "get": {
                "tags": ["costCenter"],
                "description": "query costCenter",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "costCenter response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/costCenter"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/costCenter/count": {
            "get": {
                "tags": ["costCenter"],
                "description": "count costCenter",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/costCenter/id/{id}": {
            "get": {
                "tags": ["costCenter"],
                "description": "query costCenter",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/costCenter"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/costCenterGroup": {
            "get": {
                "tags": ["costCenterGroup"],
                "description": "query costCenterGroup",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "costCenterGroup response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["costCenterGroup"],
                "description": "create a costCenterGroup",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "costCenterGroup create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/costCenterGroup/count": {
            "get": {
                "tags": ["costCenterGroup"],
                "description": "count costCenterGroup",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/costCenterGroup/id/{id}": {
            "get": {
                "tags": ["costCenterGroup"],
                "description": "query costCenterGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["costCenterGroup"],
                "description": "update costCenterGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "costCenterGroup update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["costCenterGroup"],
                "description": "delete a costCenterGroup",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "costCenterGroup delete response"
                    }
                }
            }
        },
        "/costType": {
            "get": {
                "tags": ["costType"],
                "description": "query costType",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "costType response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/costType"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["costType"],
                "description": "create a costType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/costType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "costType create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/costType"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/costType/count": {
            "get": {
                "tags": ["costType"],
                "description": "count costType",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/costType/id/{id}": {
            "get": {
                "tags": ["costType"],
                "description": "query costType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/costType"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["costType"],
                "description": "update costType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/costType"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "costType update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/costType"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["costType"],
                "description": "delete a costType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "costType delete response"
                    }
                }
            }
        },
        "/currency": {
            "get": {
                "tags": ["currency"],
                "description": "query currency",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "currency response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/currency"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/currency/count": {
            "get": {
                "tags": ["currency"],
                "description": "count currency",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/currency/companyCurrency": {
            "get": {
                "tags": ["currency"],
                "responses": {
                    "200": {
                        "description": "companyCurrency response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/currency"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/currency/id/{id}": {
            "get": {
                "tags": ["currency"],
                "description": "query currency",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/currency"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/currency/id/{id}/historicalRatesForChart": {
            "get": {
                "tags": ["currency"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "historicalRatesForChart response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "array",
                                                "items": {
                                                    "type": "number",
                                                    "format": "double"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customAttributeDefinition": {
            "get": {
                "tags": ["customAttributeDefinition"],
                "description": "query customAttributeDefinition",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customAttributeDefinition response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customAttributeDefinition"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customAttributeDefinition/count": {
            "get": {
                "tags": ["customAttributeDefinition"],
                "description": "count customAttributeDefinition",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customAttributeDefinition/id/{id}": {
            "get": {
                "tags": ["customAttributeDefinition"],
                "description": "query customAttributeDefinition",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customAttributeDefinition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer": {
            "get": {
                "tags": ["customer"],
                "description": "query customer",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customer response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customer"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["customer"],
                "description": "create a customer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "customer create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customer"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/count": {
            "get": {
                "tags": ["customer"],
                "description": "count customer",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/id/{id}": {
            "get": {
                "tags": ["customer"],
                "description": "query customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customer"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["customer"],
                "description": "update customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customer"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "customer update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customer"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["customer"],
                "description": "delete a customer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "customer delete response"
                    }
                }
            }
        },
        "/customer/id/{id}/downloadImage": {
            "get": {
                "tags": ["customer"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/id/{id}/operationalFigures": {
            "get": {
                "tags": ["customer"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "operationalFigures response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/customerOperationalFigures"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customer/id/{id}/uploadImage": {
            "post": {
                "tags": ["customer"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "uploadImage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customerCategory": {
            "get": {
                "tags": ["customerCategory"],
                "description": "query customerCategory",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customerCategory response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["customerCategory"],
                "description": "create a customerCategory",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "customerCategory create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customerCategory/count": {
            "get": {
                "tags": ["customerCategory"],
                "description": "count customerCategory",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customerCategory/id/{id}": {
            "get": {
                "tags": ["customerCategory"],
                "description": "query customerCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["customerCategory"],
                "description": "update customerCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "customerCategory update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["customerCategory"],
                "description": "delete a customerCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "customerCategory delete response"
                    }
                }
            }
        },
        "/customerLeadLossReason": {
            "get": {
                "tags": ["customerLeadLossReason"],
                "description": "query customerLeadLossReason",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customerLeadLossReason response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["customerLeadLossReason"],
                "description": "create a customerLeadLossReason",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "customerLeadLossReason create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customerLeadLossReason/count": {
            "get": {
                "tags": ["customerLeadLossReason"],
                "description": "count customerLeadLossReason",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customerLeadLossReason/id/{id}": {
            "get": {
                "tags": ["customerLeadLossReason"],
                "description": "query customerLeadLossReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["customerLeadLossReason"],
                "description": "update customerLeadLossReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "customerLeadLossReason update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["customerLeadLossReason"],
                "description": "delete a customerLeadLossReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "customerLeadLossReason delete response"
                    }
                }
            }
        },
        "/customerTopic": {
            "get": {
                "tags": ["customerTopic"],
                "description": "query customerTopic",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customerTopic response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["customerTopic"],
                "description": "create a customerTopic",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "customerTopic create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customerTopic/count": {
            "get": {
                "tags": ["customerTopic"],
                "description": "count customerTopic",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customerTopic/id/{id}": {
            "get": {
                "tags": ["customerTopic"],
                "description": "query customerTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["customerTopic"],
                "description": "update customerTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "customerTopic update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["customerTopic"],
                "description": "delete a customerTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "customerTopic delete response"
                    }
                }
            }
        },
        "/customsTariffNumber": {
            "get": {
                "tags": ["customsTariffNumber"],
                "description": "query customsTariffNumber",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "customsTariffNumber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["customsTariffNumber"],
                "description": "create a customsTariffNumber",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "customsTariffNumber create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customsTariffNumber/count": {
            "get": {
                "tags": ["customsTariffNumber"],
                "description": "count customsTariffNumber",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/customsTariffNumber/id/{id}": {
            "get": {
                "tags": ["customsTariffNumber"],
                "description": "query customsTariffNumber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["customsTariffNumber"],
                "description": "update customsTariffNumber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "customsTariffNumber update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["customsTariffNumber"],
                "description": "delete a customsTariffNumber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "customsTariffNumber delete response"
                    }
                }
            }
        },
        "/document": {
            "get": {
                "tags": ["document"],
                "description": "query document",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "document response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/document"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/document/count": {
            "get": {
                "tags": ["document"],
                "description": "count document",
                "parameters": [
                    {
                        "name": "entityId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/document/upload": {
            "post": {
                "tags": ["document"],
                "parameters": [
                    {
                        "name": "entityName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "entityId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "upload response"
                    }
                }
            }
        },
        "/document/id/{id}": {
            "get": {
                "tags": ["document"],
                "description": "query document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/document"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["document"],
                "description": "update document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/document"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "document update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/document"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["document"],
                "description": "delete a document",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "document delete response"
                    }
                }
            }
        },
        "/document/id/{id}/download": {
            "get": {
                "tags": ["document"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "download response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/document/id/{id}/downloadDocumentVersion": {
            "get": {
                "tags": ["document"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "id",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadDocumentVersion response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/document/id/{id}/upload": {
            "post": {
                "tags": ["document"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "comment",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "upload response"
                    }
                }
            }
        },
        "/externalConnection": {
            "get": {
                "tags": ["externalConnection"],
                "description": "query externalConnection",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "externalConnection response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/externalConnection"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/externalConnection/count": {
            "get": {
                "tags": ["externalConnection"],
                "description": "count externalConnection",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/externalConnection/id/{id}": {
            "get": {
                "tags": ["externalConnection"],
                "description": "query externalConnection",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/externalConnection"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fulfillmentProvider": {
            "get": {
                "tags": ["fulfillmentProvider"],
                "description": "query fulfillmentProvider",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "fulfillmentProvider response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/fulfillmentProvider"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fulfillmentProvider/count": {
            "get": {
                "tags": ["fulfillmentProvider"],
                "description": "count fulfillmentProvider",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/fulfillmentProvider/id/{id}": {
            "get": {
                "tags": ["fulfillmentProvider"],
                "description": "query fulfillmentProvider",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/fulfillmentProvider"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/groupwareContact": {
            "get": {
                "tags": ["groupwareContact"],
                "description": "query groupwareContact",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "groupwareContact response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/groupwareContact"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["groupwareContact"],
                "description": "create a groupwareContact",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/groupwareContact"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "groupwareContact create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupwareContact"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/groupwareContact/count": {
            "get": {
                "tags": ["groupwareContact"],
                "description": "count groupwareContact",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/groupwareContact/id/{id}": {
            "get": {
                "tags": ["groupwareContact"],
                "description": "query groupwareContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupwareContact"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["groupwareContact"],
                "description": "update groupwareContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/groupwareContact"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "groupwareContact update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/groupwareContact"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["groupwareContact"],
                "description": "delete a groupwareContact",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "groupwareContact delete response"
                    }
                }
            }
        },
        "/incomingGoods": {
            "get": {
                "tags": ["incomingGoods"],
                "description": "query incomingGoods",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "incomingGoods response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/incomingGoods"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["incomingGoods"],
                "description": "create a incomingGoods",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/incomingGoods"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "incomingGoods create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/incomingGoods"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/count": {
            "get": {
                "tags": ["incomingGoods"],
                "description": "count incomingGoods",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/id/{id}": {
            "get": {
                "tags": ["incomingGoods"],
                "description": "query incomingGoods",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/incomingGoods"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["incomingGoods"],
                "description": "update incomingGoods",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/incomingGoods"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "incomingGoods update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/incomingGoods"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/id/{id}/addPurchaseOrders": {
            "post": {
                "tags": ["incomingGoods"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["ids"],
                                "type": "object",
                                "properties": {
                                    "ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "addPurchaseOrders response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/incomingGoods"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/id/{id}/createCompensationShipment": {
            "post": {
                "tags": ["incomingGoods"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCompensationShipment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/shipment"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/id/{id}/createCreditNote": {
            "post": {
                "tags": ["incomingGoods"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCreditNote response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesInvoice"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/id/{id}/createLabel": {
            "post": {
                "tags": ["incomingGoods"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createLabel response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/id/{id}/createSupplierReturn": {
            "post": {
                "tags": ["incomingGoods"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["supplierId"],
                                "type": "object",
                                "properties": {
                                    "supplierId": {
                                        "type": "string"
                                    },
                                    "purchaseOrderId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createSupplierReturn response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/shipment"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/id/{id}/incomingBookings": {
            "get": {
                "tags": ["incomingGoods"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "incomingBookings response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/incomingBooking"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/incomingGoods/id/{id}/updateIncomingBookings": {
            "post": {
                "tags": ["incomingGoods"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["incomingBookings"],
                                "type": "object",
                                "properties": {
                                    "incomingBookings": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "id": {
                                                    "type": "string"
                                                },
                                                "version": {
                                                    "type": "string"
                                                },
                                                "articleValuationPrice": {
                                                    "type": "string",
                                                    "format": "number"
                                                },
                                                "batchNumber": {
                                                    "type": "string"
                                                },
                                                "confirmedByUserId": {
                                                    "type": "string",
                                                    "x-weclapp": {
                                                        "entity": "user",
                                                        "service": "user"
                                                    }
                                                },
                                                "confirmedDate": {
                                                    "type": "integer",
                                                    "format": "timestamp"
                                                },
                                                "confirmedQuantity": {
                                                    "type": "string",
                                                    "format": "number"
                                                },
                                                "createdDate": {
                                                    "type": "integer",
                                                    "format": "timestamp"
                                                },
                                                "expirationDate": {
                                                    "type": "integer",
                                                    "format": "timestamp"
                                                },
                                                "incomingGoodsItemId": {
                                                    "type": "string"
                                                },
                                                "lastModifiedDate": {
                                                    "type": "integer",
                                                    "format": "timestamp"
                                                },
                                                "levelId": {
                                                    "type": "string",
                                                    "x-weclapp": {
                                                        "entity": "warehouseLevel",
                                                        "service": "warehouseLevel"
                                                    }
                                                },
                                                "quantity": {
                                                    "type": "string",
                                                    "format": "number"
                                                },
                                                "serialNumbers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "updateIncomingBookings response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/incomingBooking"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lead": {
            "get": {
                "tags": ["lead"],
                "description": "query lead",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "lead response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/lead"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["lead"],
                "description": "create a lead",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/lead"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "lead create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/lead"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lead/count": {
            "get": {
                "tags": ["lead"],
                "description": "count lead",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lead/id/{id}": {
            "get": {
                "tags": ["lead"],
                "description": "query lead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/lead"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["lead"],
                "description": "update lead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/lead"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "lead update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/lead"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["lead"],
                "description": "delete a lead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "lead delete response"
                    }
                }
            }
        },
        "/lead/id/{id}/convertLeadToCustomer": {
            "get": {
                "tags": ["lead"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "convertLeadToCustomer response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/customer"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lead/id/{id}/downloadImage": {
            "get": {
                "tags": ["lead"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/lead/id/{id}/uploadImage": {
            "post": {
                "tags": ["lead"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "uploadImage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/leadRating": {
            "get": {
                "tags": ["leadRating"],
                "description": "query leadRating",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "leadRating response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["leadRating"],
                "description": "create a leadRating",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "leadRating create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/leadRating/count": {
            "get": {
                "tags": ["leadRating"],
                "description": "count leadRating",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/leadRating/id/{id}": {
            "get": {
                "tags": ["leadRating"],
                "description": "query leadRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["leadRating"],
                "description": "update leadRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "leadRating update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["leadRating"],
                "description": "delete a leadRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "leadRating delete response"
                    }
                }
            }
        },
        "/leadSource": {
            "get": {
                "tags": ["leadSource"],
                "description": "query leadSource",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "leadSource response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["leadSource"],
                "description": "create a leadSource",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "leadSource create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/leadSource/count": {
            "get": {
                "tags": ["leadSource"],
                "description": "count leadSource",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/leadSource/id/{id}": {
            "get": {
                "tags": ["leadSource"],
                "description": "query leadSource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["leadSource"],
                "description": "update leadSource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "leadSource update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["leadSource"],
                "description": "delete a leadSource",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "leadSource delete response"
                    }
                }
            }
        },
        "/ledgerAccount": {
            "get": {
                "tags": ["ledgerAccount"],
                "description": "query ledgerAccount",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ledgerAccount response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ledgerAccount"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ledgerAccount"],
                "description": "create a ledgerAccount",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ledgerAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "ledgerAccount create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ledgerAccount"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ledgerAccount/count": {
            "get": {
                "tags": ["ledgerAccount"],
                "description": "count ledgerAccount",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ledgerAccount/id/{id}": {
            "get": {
                "tags": ["ledgerAccount"],
                "description": "query ledgerAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ledgerAccount"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["ledgerAccount"],
                "description": "update ledgerAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ledgerAccount"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "ledgerAccount update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ledgerAccount"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ledgerAccount"],
                "description": "delete a ledgerAccount",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ledgerAccount delete response"
                    }
                }
            }
        },
        "/legalForm": {
            "get": {
                "tags": ["legalForm"],
                "description": "query legalForm",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "legalForm response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["legalForm"],
                "description": "create a legalForm",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "legalForm create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/legalForm/count": {
            "get": {
                "tags": ["legalForm"],
                "description": "count legalForm",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/legalForm/id/{id}": {
            "get": {
                "tags": ["legalForm"],
                "description": "query legalForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["legalForm"],
                "description": "update legalForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "legalForm update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["legalForm"],
                "description": "delete a legalForm",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "legalForm delete response"
                    }
                }
            }
        },
        "/manufacturer": {
            "get": {
                "tags": ["manufacturer"],
                "description": "query manufacturer",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "manufacturer response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["manufacturer"],
                "description": "create a manufacturer",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "manufacturer create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manufacturer/count": {
            "get": {
                "tags": ["manufacturer"],
                "description": "count manufacturer",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/manufacturer/id/{id}": {
            "get": {
                "tags": ["manufacturer"],
                "description": "query manufacturer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["manufacturer"],
                "description": "update manufacturer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "manufacturer update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["manufacturer"],
                "description": "delete a manufacturer",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "manufacturer delete response"
                    }
                }
            }
        },
        "/meta/openapi.json": {
            "get": {
                "tags": ["meta"],
                "parameters": [
                    {
                        "name": "includeHidden",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "openapi.json response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/meta/queryFilterProperties": {
            "get": {
                "tags": ["meta"],
                "parameters": [
                    {
                        "name": "resource",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "queryFilterProperties response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/meta/querySortProperties": {
            "get": {
                "tags": ["meta"],
                "parameters": [
                    {
                        "name": "resource",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "querySortProperties response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/meta/resources": {
            "get": {
                "tags": ["meta"],
                "responses": {
                    "200": {
                        "description": "resources response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/meta/resourcesIncludingHidden": {
            "get": {
                "tags": ["meta"],
                "responses": {
                    "200": {
                        "description": "resourcesIncludingHidden response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/meta/swagger.json": {
            "get": {
                "tags": ["meta"],
                "parameters": [
                    {
                        "name": "includeHidden",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "swagger.json response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/moneyTransaction": {
            "get": {
                "tags": ["moneyTransaction"],
                "description": "query moneyTransaction",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "moneyTransaction response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/moneyTransaction"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["moneyTransaction"],
                "description": "create a moneyTransaction",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/moneyTransaction"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "moneyTransaction create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/moneyTransaction"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/moneyTransaction/count": {
            "get": {
                "tags": ["moneyTransaction"],
                "description": "count moneyTransaction",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/moneyTransaction/id/{id}": {
            "get": {
                "tags": ["moneyTransaction"],
                "description": "query moneyTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/moneyTransaction"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["moneyTransaction"],
                "description": "delete a moneyTransaction",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "moneyTransaction delete response"
                    }
                }
            }
        },
        "/moneyTransaction/id/{id}/getOrCreateReceipt": {
            "get": {
                "tags": ["moneyTransaction"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getOrCreateReceipt response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notification": {
            "get": {
                "tags": ["notification"],
                "description": "query notification",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "notification response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/notification"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notification/count": {
            "get": {
                "tags": ["notification"],
                "description": "count notification",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notification/id/{id}": {
            "get": {
                "tags": ["notification"],
                "description": "query notification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/notification"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notification/id/{id}/markRead": {
            "post": {
                "tags": ["notification"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "markRead response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/notification"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openItem": {
            "get": {
                "tags": ["openItem"],
                "description": "query openItem",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "openItem response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/openItem"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openItem/count": {
            "get": {
                "tags": ["openItem"],
                "description": "count openItem",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openItem/id/{id}": {
            "get": {
                "tags": ["openItem"],
                "description": "query openItem",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/openItem"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openItem/id/{id}/createPaymentApplication": {
            "post": {
                "tags": ["openItem"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["moneyTransactionId"],
                                "type": "object",
                                "properties": {
                                    "moneyTransactionId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createPaymentApplication response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/openItem"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/openItem/id/{id}/markAsPaid": {
            "post": {
                "tags": ["openItem"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["datePaid"],
                                "type": "object",
                                "properties": {
                                    "datePaid": {
                                        "type": "integer",
                                        "format": "timestamp"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "markAsPaid response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/openItem"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunity": {
            "get": {
                "tags": ["opportunity"],
                "description": "query opportunity",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "opportunity response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/opportunity"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["opportunity"],
                "description": "create a opportunity",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/opportunity"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "opportunity create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunity/count": {
            "get": {
                "tags": ["opportunity"],
                "description": "count opportunity",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunity/id/{id}": {
            "get": {
                "tags": ["opportunity"],
                "description": "query opportunity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["opportunity"],
                "description": "update opportunity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/opportunity"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "opportunity update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/opportunity"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["opportunity"],
                "description": "delete a opportunity",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "opportunity delete response"
                    }
                }
            }
        },
        "/opportunityTopic": {
            "get": {
                "tags": ["opportunityTopic"],
                "description": "query opportunityTopic",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "opportunityTopic response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["opportunityTopic"],
                "description": "create a opportunityTopic",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "opportunityTopic create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunityTopic/count": {
            "get": {
                "tags": ["opportunityTopic"],
                "description": "count opportunityTopic",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunityTopic/id/{id}": {
            "get": {
                "tags": ["opportunityTopic"],
                "description": "query opportunityTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["opportunityTopic"],
                "description": "update opportunityTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "opportunityTopic update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["opportunityTopic"],
                "description": "delete a opportunityTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "opportunityTopic delete response"
                    }
                }
            }
        },
        "/opportunityWinLossReason": {
            "get": {
                "tags": ["opportunityWinLossReason"],
                "description": "query opportunityWinLossReason",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "opportunityWinLossReason response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["opportunityWinLossReason"],
                "description": "create a opportunityWinLossReason",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "opportunityWinLossReason create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunityWinLossReason/count": {
            "get": {
                "tags": ["opportunityWinLossReason"],
                "description": "count opportunityWinLossReason",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/opportunityWinLossReason/id/{id}": {
            "get": {
                "tags": ["opportunityWinLossReason"],
                "description": "query opportunityWinLossReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["opportunityWinLossReason"],
                "description": "update opportunityWinLossReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "opportunityWinLossReason update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["opportunityWinLossReason"],
                "description": "delete a opportunityWinLossReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "opportunityWinLossReason delete response"
                    }
                }
            }
        },
        "/party": {
            "get": {
                "tags": ["party"],
                "description": "query party",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "party response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/party"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["party"],
                "description": "create a party",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/party"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "party create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/party/count": {
            "get": {
                "tags": ["party"],
                "description": "count party",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/party/id/{id}": {
            "get": {
                "tags": ["party"],
                "description": "query party",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["party"],
                "description": "update party",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/party"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "party update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/party"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["party"],
                "description": "delete a party",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "party delete response"
                    }
                }
            }
        },
        "/party/id/{id}/downloadImage": {
            "get": {
                "tags": ["party"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "imageId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/party/id/{id}/uploadImage": {
            "post": {
                "tags": ["party"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "uploadImage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/partyRating": {
            "get": {
                "tags": ["partyRating"],
                "description": "query partyRating",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "partyRating response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["partyRating"],
                "description": "create a partyRating",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "partyRating create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/partyRating/count": {
            "get": {
                "tags": ["partyRating"],
                "description": "count partyRating",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/partyRating/id/{id}": {
            "get": {
                "tags": ["partyRating"],
                "description": "query partyRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["partyRating"],
                "description": "update partyRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "partyRating update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["partyRating"],
                "description": "delete a partyRating",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "partyRating delete response"
                    }
                }
            }
        },
        "/paymentMethod": {
            "get": {
                "tags": ["paymentMethod"],
                "description": "query paymentMethod",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "paymentMethod response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/paymentMethod"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["paymentMethod"],
                "description": "create a paymentMethod",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/paymentMethod"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "paymentMethod create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentMethod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paymentMethod/count": {
            "get": {
                "tags": ["paymentMethod"],
                "description": "count paymentMethod",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/paymentMethod/id/{id}": {
            "get": {
                "tags": ["paymentMethod"],
                "description": "query paymentMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentMethod"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["paymentMethod"],
                "description": "update paymentMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/paymentMethod"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "paymentMethod update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/paymentMethod"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["paymentMethod"],
                "description": "delete a paymentMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "paymentMethod delete response"
                    }
                }
            }
        },
        "/performanceRecord": {
            "get": {
                "tags": ["performanceRecord"],
                "description": "query performanceRecord",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "performanceRecord response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/performanceRecord"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["performanceRecord"],
                "description": "create a performanceRecord",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/performanceRecord"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "performanceRecord create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/performanceRecord"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/performanceRecord/count": {
            "get": {
                "tags": ["performanceRecord"],
                "description": "count performanceRecord",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/performanceRecord/id/{id}": {
            "get": {
                "tags": ["performanceRecord"],
                "description": "query performanceRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/performanceRecord"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["performanceRecord"],
                "description": "update performanceRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/performanceRecord"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "performanceRecord update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/performanceRecord"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["performanceRecord"],
                "description": "delete a performanceRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "performanceRecord delete response"
                    }
                }
            }
        },
        "/performanceRecord/id/{id}/downloadLatestPerformanceRecordPdf": {
            "get": {
                "tags": ["performanceRecord"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestPerformanceRecordPdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/performanceRecord/id/{id}/downloadSignature": {
            "get": {
                "tags": ["performanceRecord"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "customerSignature",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadSignature response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/performanceRecord/id/{id}/removeSignature": {
            "post": {
                "tags": ["performanceRecord"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["customerSignature"],
                                "type": "object",
                                "properties": {
                                    "customerSignature": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "removeSignature response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/performanceRecord/id/{id}/uploadSignature": {
            "post": {
                "tags": ["performanceRecord"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "customerSignature",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "uploadSignature response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/personalAccountingCode": {
            "get": {
                "tags": ["personalAccountingCode"],
                "description": "query personalAccountingCode",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "personalAccountingCode response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["personalAccountingCode"],
                "description": "create a personalAccountingCode",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "personalAccountingCode create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/personalAccountingCode/count": {
            "get": {
                "tags": ["personalAccountingCode"],
                "description": "count personalAccountingCode",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/personalAccountingCode/id/{id}": {
            "get": {
                "tags": ["personalAccountingCode"],
                "description": "query personalAccountingCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["personalAccountingCode"],
                "description": "update personalAccountingCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "personalAccountingCode update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["personalAccountingCode"],
                "description": "delete a personalAccountingCode",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "personalAccountingCode delete response"
                    }
                }
            }
        },
        "/placeOfService": {
            "get": {
                "tags": ["placeOfService"],
                "description": "query placeOfService",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "placeOfService response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["placeOfService"],
                "description": "create a placeOfService",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "placeOfService create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/placeOfService/count": {
            "get": {
                "tags": ["placeOfService"],
                "description": "count placeOfService",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/placeOfService/id/{id}": {
            "get": {
                "tags": ["placeOfService"],
                "description": "query placeOfService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["placeOfService"],
                "description": "update placeOfService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "placeOfService update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["placeOfService"],
                "description": "delete a placeOfService",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "placeOfService delete response"
                    }
                }
            }
        },
        "/productionOrder": {
            "get": {
                "tags": ["productionOrder"],
                "description": "query productionOrder",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "productionOrder response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/productionOrder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["productionOrder"],
                "description": "create a productionOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/productionOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "productionOrder create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/productionOrder"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/productionOrder/count": {
            "get": {
                "tags": ["productionOrder"],
                "description": "count productionOrder",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/productionOrder/fastProductionBooking": {
            "post": {
                "tags": ["productionOrder"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["productionOrderNumber", "quantity"],
                                "type": "object",
                                "properties": {
                                    "quantity": {
                                        "type": "string",
                                        "format": "number"
                                    },
                                    "productionOrderNumber": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "fastProductionBooking response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/fastProductionBookingResult"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/productionOrder/id/{id}": {
            "get": {
                "tags": ["productionOrder"],
                "description": "query productionOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/productionOrder"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["productionOrder"],
                "description": "update productionOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/productionOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "productionOrder update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/productionOrder"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["productionOrder"],
                "description": "delete a productionOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "productionOrder delete response"
                    }
                }
            }
        },
        "/productionOrder/id/{id}/downloadLatestProductionOrderPdf": {
            "get": {
                "tags": ["productionOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestProductionOrderPdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/productionOrder/id/{id}/updateWithdrawals": {
            "post": {
                "tags": ["productionOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["removeUnconfirmed", "updateShipQuantity", "withdrawals"],
                                "type": "object",
                                "properties": {
                                    "withdrawals": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "batchNumber": {
                                                    "type": "string"
                                                },
                                                "bookedDate": {
                                                    "type": "integer",
                                                    "format": "timestamp"
                                                },
                                                "confirmedDate": {
                                                    "type": "integer",
                                                    "format": "timestamp"
                                                },
                                                "confirmedQuantity": {
                                                    "type": "string",
                                                    "format": "number"
                                                },
                                                "levelId": {
                                                    "type": "string",
                                                    "x-weclapp": {
                                                        "entity": "warehouseLevel",
                                                        "service": "warehouseLevel"
                                                    }
                                                },
                                                "pickingUserId": {
                                                    "type": "string",
                                                    "x-weclapp": {
                                                        "entity": "user",
                                                        "service": "user"
                                                    }
                                                },
                                                "productionOrderItemId": {
                                                    "type": "string"
                                                },
                                                "serialNumbers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "shipmentItemId": {
                                                    "type": "string"
                                                },
                                                "withdrawalQuantity": {
                                                    "type": "string",
                                                    "format": "number"
                                                }
                                            }
                                        }
                                    },
                                    "updateShipQuantity": {
                                        "type": "boolean"
                                    },
                                    "removeUnconfirmed": {
                                        "type": "boolean"
                                    },
                                    "useReservedSerialNumbersFromOtherShipments": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "updateWithdrawals response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/withdrawal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/productionOrder/id/{id}/withdrawals": {
            "get": {
                "tags": ["productionOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "withdrawals response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/withdrawal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project": {
            "get": {
                "tags": ["project"],
                "description": "query project",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "project response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/project"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["project"],
                "description": "create a project",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/project"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "project create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/project"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/count": {
            "get": {
                "tags": ["project"],
                "description": "count project",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/id/{id}": {
            "get": {
                "tags": ["project"],
                "description": "query project",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/project"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["project"],
                "description": "update project",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/project"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "project update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/project"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/project/id/{id}/extraInfoForApp": {
            "get": {
                "tags": ["project"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "userId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "extraInfoForApp response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/pmProjectExtraInformation"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projectTask": {
            "get": {
                "tags": ["projectTask"],
                "description": "query projectTask",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "projectTask response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/projectTask"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["projectTask"],
                "description": "create a projectTask",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/projectTask"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "projectTask create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/projectTask"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projectTask/count": {
            "get": {
                "tags": ["projectTask"],
                "description": "count projectTask",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/projectTask/id/{id}": {
            "get": {
                "tags": ["projectTask"],
                "description": "query projectTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/projectTask"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["projectTask"],
                "description": "update projectTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/projectTask"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "projectTask update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/projectTask"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["projectTask"],
                "description": "delete a projectTask",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "projectTask delete response"
                    }
                }
            }
        },
        "/purchaseInvoice": {
            "get": {
                "tags": ["purchaseInvoice"],
                "description": "query purchaseInvoice",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "purchaseInvoice response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/purchaseInvoice"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["purchaseInvoice"],
                "description": "create a purchaseInvoice",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/purchaseInvoice"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "purchaseInvoice create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseInvoice/count": {
            "get": {
                "tags": ["purchaseInvoice"],
                "description": "count purchaseInvoice",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseInvoice/id/{id}": {
            "get": {
                "tags": ["purchaseInvoice"],
                "description": "query purchaseInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoice"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["purchaseInvoice"],
                "description": "update purchaseInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/purchaseInvoice"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "purchaseInvoice update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseInvoice"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["purchaseInvoice"],
                "description": "delete a purchaseInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "purchaseInvoice delete response"
                    }
                }
            }
        },
        "/purchaseOrder": {
            "get": {
                "tags": ["purchaseOrder"],
                "description": "query purchaseOrder",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "purchaseOrder response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/purchaseOrder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["purchaseOrder"],
                "description": "create a purchaseOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/purchaseOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "purchaseOrder create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseOrder"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrder/count": {
            "get": {
                "tags": ["purchaseOrder"],
                "description": "count purchaseOrder",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrder/id/{id}": {
            "get": {
                "tags": ["purchaseOrder"],
                "description": "query purchaseOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseOrder"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["purchaseOrder"],
                "description": "update purchaseOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/purchaseOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "purchaseOrder update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseOrder"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["purchaseOrder"],
                "description": "delete a purchaseOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "purchaseOrder delete response"
                    }
                }
            }
        },
        "/purchaseOrder/id/{id}/createIncomingGoods": {
            "post": {
                "tags": ["purchaseOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "additionalPurchaseOrderIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createIncomingGoods response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/incomingGoods"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrder/id/{id}/createPurchaseInvoice": {
            "post": {
                "tags": ["purchaseOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createPurchaseInvoice response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/purchaseInvoice"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrder/id/{id}/createSupplierReturn": {
            "post": {
                "tags": ["purchaseOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createSupplierReturn response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/shipment"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrder/id/{id}/processDropshipping": {
            "post": {
                "tags": ["purchaseOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "processDropshipping response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/purchaseOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrderRequest": {
            "get": {
                "tags": ["purchaseOrderRequest"],
                "description": "query purchaseOrderRequest",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "purchaseOrderRequest response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/purchaseOrderRequest"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["purchaseOrderRequest"],
                "description": "create a purchaseOrderRequest",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/purchaseOrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "purchaseOrderRequest create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseOrderRequest"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrderRequest/count": {
            "get": {
                "tags": ["purchaseOrderRequest"],
                "description": "count purchaseOrderRequest",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrderRequest/id/{id}": {
            "get": {
                "tags": ["purchaseOrderRequest"],
                "description": "query purchaseOrderRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseOrderRequest"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["purchaseOrderRequest"],
                "description": "update purchaseOrderRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/purchaseOrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "purchaseOrderRequest update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/purchaseOrderRequest"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["purchaseOrderRequest"],
                "description": "delete a purchaseOrderRequest",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "purchaseOrderRequest delete response"
                    }
                }
            }
        },
        "/purchaseOrderRequest/id/{id}/createBlanketPurchaseOrder": {
            "post": {
                "tags": ["purchaseOrderRequest"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["offerItemId", "orderedQuantity"],
                                "type": "object",
                                "properties": {
                                    "offerItemId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "orderedQuantity": {
                                        "type": "string",
                                        "format": "number"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createBlanketPurchaseOrder response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/purchaseOrderRequest/id/{id}/createPurchaseOrder": {
            "post": {
                "tags": ["purchaseOrderRequest"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["offerId", "offerItemToUpdateSupplierInformation"],
                                "type": "object",
                                "properties": {
                                    "offerId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "salesOrderId": {
                                        "type": "integer",
                                        "format": "int32"
                                    },
                                    "offerItemToUpdateSupplierInformation": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "offerItemId": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "quantity": {
                                                    "type": "string",
                                                    "format": "number"
                                                },
                                                "salesOrderItemId": {
                                                    "type": "integer",
                                                    "format": "int32"
                                                },
                                                "updateInformation": {
                                                    "type": "boolean"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createPurchaseOrder response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/purchaseOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quotation": {
            "get": {
                "tags": ["quotation"],
                "description": "query quotation",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "quotation response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/quotation"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["quotation"],
                "description": "create a quotation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/quotation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "quotation create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/quotation"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quotation/count": {
            "get": {
                "tags": ["quotation"],
                "description": "count quotation",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quotation/createItScopeQuote": {
            "get": {
                "tags": ["quotation"],
                "parameters": [
                    {
                        "name": "quoteId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createItScopeQuote response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "boolean"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quotation/id/{id}": {
            "get": {
                "tags": ["quotation"],
                "description": "query quotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/quotation"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["quotation"],
                "description": "update quotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/quotation"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "quotation update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/quotation"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["quotation"],
                "description": "delete a quotation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "quotation delete response"
                    }
                }
            }
        },
        "/quotation/id/{id}/createNewVersion": {
            "post": {
                "tags": ["quotation"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createNewVersion response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/quotation"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quotation/id/{id}/createQuotationPdf": {
            "post": {
                "tags": ["quotation"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createQuotationPdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/quotation/id/{id}/downloadLatestQuotationPdf": {
            "get": {
                "tags": ["quotation"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestQuotationPdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reasonOfAbsence": {
            "get": {
                "tags": ["reasonOfAbsence"],
                "description": "query reasonOfAbsence",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "reasonOfAbsence response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/reasonOfAbsence"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["reasonOfAbsence"],
                "description": "create a reasonOfAbsence",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/reasonOfAbsence"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "reasonOfAbsence create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reasonOfAbsence"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reasonOfAbsence/count": {
            "get": {
                "tags": ["reasonOfAbsence"],
                "description": "count reasonOfAbsence",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reasonOfAbsence/id/{id}": {
            "get": {
                "tags": ["reasonOfAbsence"],
                "description": "query reasonOfAbsence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reasonOfAbsence"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["reasonOfAbsence"],
                "description": "update reasonOfAbsence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/reasonOfAbsence"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "reasonOfAbsence update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/reasonOfAbsence"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["reasonOfAbsence"],
                "description": "delete a reasonOfAbsence",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "reasonOfAbsence delete response"
                    }
                }
            }
        },
        "/remotePrintJob": {
            "get": {
                "tags": ["remotePrintJob"],
                "description": "query remotePrintJob",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "remotePrintJob response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/remotePrintJob"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["remotePrintJob"],
                "description": "create a remotePrintJob",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/remotePrintJob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "remotePrintJob create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/remotePrintJob"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remotePrintJob/count": {
            "get": {
                "tags": ["remotePrintJob"],
                "description": "count remotePrintJob",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remotePrintJob/createPrintJobWithDocument": {
            "post": {
                "tags": ["remotePrintJob"],
                "parameters": [
                    {
                        "name": "weclappOsId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "printerName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "quantity",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "documentName",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "documentDescription",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createPrintJobWithDocument response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/remotePrintJob"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/remotePrintJob/id/{id}": {
            "get": {
                "tags": ["remotePrintJob"],
                "description": "query remotePrintJob",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/remotePrintJob"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["remotePrintJob"],
                "description": "update remotePrintJob",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/remotePrintJob"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "remotePrintJob update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/remotePrintJob"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["remotePrintJob"],
                "description": "delete a remotePrintJob",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "remotePrintJob delete response"
                    }
                }
            }
        },
        "/salesChannel/activeSalesChannels": {
            "get": {
                "tags": ["salesChannel"],
                "responses": {
                    "200": {
                        "description": "activeSalesChannels response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesChannel"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesInvoice": {
            "get": {
                "tags": ["salesInvoice"],
                "description": "query salesInvoice",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "salesInvoice response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesInvoice"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["salesInvoice"],
                "description": "create a salesInvoice",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/salesInvoice"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "salesInvoice create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoice"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesInvoice/count": {
            "get": {
                "tags": ["salesInvoice"],
                "description": "count salesInvoice",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesInvoice/id/{id}": {
            "get": {
                "tags": ["salesInvoice"],
                "description": "query salesInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoice"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["salesInvoice"],
                "description": "update salesInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/salesInvoice"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "salesInvoice update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesInvoice"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["salesInvoice"],
                "description": "delete a salesInvoice",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "salesInvoice delete response"
                    }
                }
            }
        },
        "/salesInvoice/id/{id}/createCreditNote": {
            "post": {
                "tags": ["salesInvoice"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "itemIds": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createCreditNote response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesInvoice"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesInvoice/id/{id}/downloadLatestSalesInvoicePdf": {
            "get": {
                "tags": ["salesInvoice"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestSalesInvoicePdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesInvoice/id/{id}/taxGroups": {
            "get": {
                "tags": ["salesInvoice"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "taxGroups response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/taxGroup"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder": {
            "get": {
                "tags": ["salesOrder"],
                "description": "query salesOrder",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "salesOrder response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesOrder"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["salesOrder"],
                "description": "create a salesOrder",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/salesOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "salesOrder create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrder"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/count": {
            "get": {
                "tags": ["salesOrder"],
                "description": "count salesOrder",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/calculateSalesOrder": {
            "post": {
                "tags": ["salesOrder"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["salesOrder"],
                                "type": "object",
                                "properties": {
                                    "salesOrder": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "version": {
                                                "type": "string"
                                            },
                                            "advancePaymentStatus": {
                                                "$ref": "#/components/schemas/advancePaymentStatus"
                                            },
                                            "cashAccountId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "cashAccount",
                                                    "service": "cashAccount"
                                                }
                                            },
                                            "commercialLanguage": {
                                                "type": "string"
                                            },
                                            "commission": {
                                                "type": "string"
                                            },
                                            "commissionSalesPartners": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/commissionSalesPartner"
                                                }
                                            },
                                            "createdDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "currencyConversionDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "currencyConversionRate": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "customAttributes": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/customAttribute"
                                                }
                                            },
                                            "customerHabitualExporterLetterOfIntentId": {
                                                "type": "string"
                                            },
                                            "customerId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "party",
                                                    "service": "party"
                                                }
                                            },
                                            "customerNumber": {
                                                "type": "string"
                                            },
                                            "defaultShippingCarrierId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "shippingCarrier",
                                                    "service": "shippingCarrier"
                                                }
                                            },
                                            "defaultShippingCarrierName": {
                                                "type": "string"
                                            },
                                            "defaultShippingReturnCarrierId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "shippingCarrier",
                                                    "service": "shippingCarrier"
                                                }
                                            },
                                            "defaultShippingReturnCarrierName": {
                                                "type": "string"
                                            },
                                            "deliveryAddress": {
                                                "$ref": "#/components/schemas/recordAddress"
                                            },
                                            "deliveryEmailAddresses": {
                                                "$ref": "#/components/schemas/emailAddresses"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "disableEmailTemplate": {
                                                "type": "boolean"
                                            },
                                            "dispatchCountryCode": {
                                                "type": "string"
                                            },
                                            "ecommerceOrder": {
                                                "$ref": "#/components/schemas/ecommerceOrder"
                                            },
                                            "factoring": {
                                                "type": "boolean"
                                            },
                                            "fulfillmentProviderId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "fulfillmentProvider",
                                                    "service": "fulfillmentProvider"
                                                }
                                            },
                                            "grossAmount": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "grossAmountInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "headerDiscount": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "headerSurcharge": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "invoiceAddress": {
                                                "$ref": "#/components/schemas/recordAddress"
                                            },
                                            "invoiceRecipientId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "party",
                                                    "service": "party"
                                                }
                                            },
                                            "invoiced": {
                                                "type": "boolean"
                                            },
                                            "lastModifiedDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "netAmount": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "netAmountInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "nonStandardTaxId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "tax",
                                                    "service": "tax"
                                                }
                                            },
                                            "nonStandardTaxName": {
                                                "type": "string"
                                            },
                                            "orderDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "orderItems": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/salesOrderItem"
                                                }
                                            },
                                            "orderNumber": {
                                                "type": "string"
                                            },
                                            "orderNumberAtCustomer": {
                                                "type": "string"
                                            },
                                            "paid": {
                                                "type": "boolean"
                                            },
                                            "paymentMethodId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "paymentMethod",
                                                    "service": "paymentMethod"
                                                }
                                            },
                                            "paymentMethodName": {
                                                "type": "string"
                                            },
                                            "plannedDeliveryDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "plannedShippingDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "pricingDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "quotationId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "quotation",
                                                    "service": "quotation"
                                                }
                                            },
                                            "quotationNumber": {
                                                "type": "string"
                                            },
                                            "recordAddress": {
                                                "$ref": "#/components/schemas/recordAddress"
                                            },
                                            "recordComment": {
                                                "type": "string"
                                            },
                                            "recordCurrencyId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "currency",
                                                    "service": "currency"
                                                }
                                            },
                                            "recordCurrencyName": {
                                                "type": "string"
                                            },
                                            "recordEmailAddresses": {
                                                "$ref": "#/components/schemas/emailAddresses"
                                            },
                                            "recordFreeText": {
                                                "type": "string"
                                            },
                                            "recordOpening": {
                                                "type": "string"
                                            },
                                            "responsibleUserId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "user",
                                                    "service": "user"
                                                }
                                            },
                                            "responsibleUserUsername": {
                                                "type": "string"
                                            },
                                            "salesChannel": {
                                                "$ref": "#/components/schemas/distributionChannel"
                                            },
                                            "salesInvoiceEmailAddresses": {
                                                "$ref": "#/components/schemas/emailAddresses"
                                            },
                                            "salesOrderPaymentType": {
                                                "$ref": "#/components/schemas/salesOrderPaymentType"
                                            },
                                            "sentToRecipient": {
                                                "type": "boolean"
                                            },
                                            "servicePeriodFrom": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "servicePeriodTo": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "shipmentMethodId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "shipmentMethod",
                                                    "service": "shipmentMethod"
                                                }
                                            },
                                            "shipmentMethodName": {
                                                "type": "string"
                                            },
                                            "shipped": {
                                                "type": "boolean"
                                            },
                                            "shippingCostItems": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/salesShippingCostItem"
                                                }
                                            },
                                            "shippingLabelsCount": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "status": {
                                                "$ref": "#/components/schemas/orderStatusType"
                                            },
                                            "statusHistory": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/salesOrderStatusHistory"
                                                }
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "termOfPaymentId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "termOfPayment",
                                                    "service": "termOfPayment"
                                                }
                                            },
                                            "termOfPaymentName": {
                                                "type": "string"
                                            },
                                            "warehouseId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "warehouse",
                                                    "service": "warehouse"
                                                }
                                            },
                                            "warehouseName": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "calculateSalesOrder response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/calculateTaxGroups": {
            "post": {
                "tags": ["salesOrder"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["salesOrder"],
                                "type": "object",
                                "properties": {
                                    "salesOrder": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "version": {
                                                "type": "string"
                                            },
                                            "advancePaymentStatus": {
                                                "$ref": "#/components/schemas/advancePaymentStatus"
                                            },
                                            "cashAccountId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "cashAccount",
                                                    "service": "cashAccount"
                                                }
                                            },
                                            "commercialLanguage": {
                                                "type": "string"
                                            },
                                            "commission": {
                                                "type": "string"
                                            },
                                            "commissionSalesPartners": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/commissionSalesPartner"
                                                }
                                            },
                                            "createdDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "currencyConversionDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "currencyConversionRate": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "customAttributes": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/customAttribute"
                                                }
                                            },
                                            "customerHabitualExporterLetterOfIntentId": {
                                                "type": "string"
                                            },
                                            "customerId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "party",
                                                    "service": "party"
                                                }
                                            },
                                            "customerNumber": {
                                                "type": "string"
                                            },
                                            "defaultShippingCarrierId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "shippingCarrier",
                                                    "service": "shippingCarrier"
                                                }
                                            },
                                            "defaultShippingCarrierName": {
                                                "type": "string"
                                            },
                                            "defaultShippingReturnCarrierId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "shippingCarrier",
                                                    "service": "shippingCarrier"
                                                }
                                            },
                                            "defaultShippingReturnCarrierName": {
                                                "type": "string"
                                            },
                                            "deliveryAddress": {
                                                "$ref": "#/components/schemas/recordAddress"
                                            },
                                            "deliveryEmailAddresses": {
                                                "$ref": "#/components/schemas/emailAddresses"
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "disableEmailTemplate": {
                                                "type": "boolean"
                                            },
                                            "dispatchCountryCode": {
                                                "type": "string"
                                            },
                                            "ecommerceOrder": {
                                                "$ref": "#/components/schemas/ecommerceOrder"
                                            },
                                            "factoring": {
                                                "type": "boolean"
                                            },
                                            "fulfillmentProviderId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "fulfillmentProvider",
                                                    "service": "fulfillmentProvider"
                                                }
                                            },
                                            "grossAmount": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "grossAmountInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "headerDiscount": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "headerSurcharge": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "invoiceAddress": {
                                                "$ref": "#/components/schemas/recordAddress"
                                            },
                                            "invoiceRecipientId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "party",
                                                    "service": "party"
                                                }
                                            },
                                            "invoiced": {
                                                "type": "boolean"
                                            },
                                            "lastModifiedDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "netAmount": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "netAmountInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "nonStandardTaxId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "tax",
                                                    "service": "tax"
                                                }
                                            },
                                            "nonStandardTaxName": {
                                                "type": "string"
                                            },
                                            "orderDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "orderItems": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/salesOrderItem"
                                                }
                                            },
                                            "orderNumber": {
                                                "type": "string"
                                            },
                                            "orderNumberAtCustomer": {
                                                "type": "string"
                                            },
                                            "paid": {
                                                "type": "boolean"
                                            },
                                            "paymentMethodId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "paymentMethod",
                                                    "service": "paymentMethod"
                                                }
                                            },
                                            "paymentMethodName": {
                                                "type": "string"
                                            },
                                            "plannedDeliveryDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "plannedShippingDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "pricingDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "quotationId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "quotation",
                                                    "service": "quotation"
                                                }
                                            },
                                            "quotationNumber": {
                                                "type": "string"
                                            },
                                            "recordAddress": {
                                                "$ref": "#/components/schemas/recordAddress"
                                            },
                                            "recordComment": {
                                                "type": "string"
                                            },
                                            "recordCurrencyId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "currency",
                                                    "service": "currency"
                                                }
                                            },
                                            "recordCurrencyName": {
                                                "type": "string"
                                            },
                                            "recordEmailAddresses": {
                                                "$ref": "#/components/schemas/emailAddresses"
                                            },
                                            "recordFreeText": {
                                                "type": "string"
                                            },
                                            "recordOpening": {
                                                "type": "string"
                                            },
                                            "responsibleUserId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "user",
                                                    "service": "user"
                                                }
                                            },
                                            "responsibleUserUsername": {
                                                "type": "string"
                                            },
                                            "salesChannel": {
                                                "$ref": "#/components/schemas/distributionChannel"
                                            },
                                            "salesInvoiceEmailAddresses": {
                                                "$ref": "#/components/schemas/emailAddresses"
                                            },
                                            "salesOrderPaymentType": {
                                                "$ref": "#/components/schemas/salesOrderPaymentType"
                                            },
                                            "sentToRecipient": {
                                                "type": "boolean"
                                            },
                                            "servicePeriodFrom": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "servicePeriodTo": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "shipmentMethodId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "shipmentMethod",
                                                    "service": "shipmentMethod"
                                                }
                                            },
                                            "shipmentMethodName": {
                                                "type": "string"
                                            },
                                            "shipped": {
                                                "type": "boolean"
                                            },
                                            "shippingCostItems": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/salesShippingCostItem"
                                                }
                                            },
                                            "shippingLabelsCount": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "status": {
                                                "$ref": "#/components/schemas/orderStatusType"
                                            },
                                            "statusHistory": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/salesOrderStatusHistory"
                                                }
                                            },
                                            "tags": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "termOfPaymentId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "termOfPayment",
                                                    "service": "termOfPayment"
                                                }
                                            },
                                            "termOfPaymentName": {
                                                "type": "string"
                                            },
                                            "warehouseId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "warehouse",
                                                    "service": "warehouse"
                                                }
                                            },
                                            "warehouseName": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "calculateTaxGroups response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/taxGroup"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/cancelSalesOrderByOrderNumber": {
            "post": {
                "tags": ["salesOrder"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["orderNumber"],
                                "type": "object",
                                "properties": {
                                    "orderNumber": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "cancelSalesOrderByOrderNumber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/defaultValuesForCreate": {
            "get": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "customerId",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "responsibleUserId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "defaultValuesForCreate response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}": {
            "get": {
                "tags": ["salesOrder"],
                "description": "query salesOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrder"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["salesOrder"],
                "description": "update salesOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/salesOrder"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "salesOrder update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesOrder"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["salesOrder"],
                "description": "delete a salesOrder",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "salesOrder delete response"
                    }
                }
            }
        },
        "/salesOrder/id/{id}/addItem": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["item"],
                                "type": "object",
                                "properties": {
                                    "item": {
                                        "type": "object",
                                        "properties": {
                                            "id": {
                                                "type": "string"
                                            },
                                            "version": {
                                                "type": "string"
                                            },
                                            "addPageBreakBefore": {
                                                "type": "boolean"
                                            },
                                            "articleId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "article",
                                                    "service": "article"
                                                }
                                            },
                                            "articleNumber": {
                                                "type": "string"
                                            },
                                            "createdDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "customAttributes": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/customAttribute"
                                                }
                                            },
                                            "description": {
                                                "type": "string"
                                            },
                                            "descriptionFixed": {
                                                "type": "boolean"
                                            },
                                            "discountPercentage": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "ecommerceOrderItemId": {
                                                "type": "string"
                                            },
                                            "freeTextItem": {
                                                "type": "boolean"
                                            },
                                            "grossAmount": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "grossAmountInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "groupName": {
                                                "type": "string"
                                            },
                                            "invoicedQuantity": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "invoicingType": {
                                                "$ref": "#/components/schemas/invoicingType"
                                            },
                                            "lastModifiedDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "manualUnitCost": {
                                                "type": "boolean"
                                            },
                                            "manualUnitPrice": {
                                                "type": "boolean"
                                            },
                                            "netAmount": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "netAmountForStatistics": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "netAmountForStatisticsInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "netAmountInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "note": {
                                                "type": "string"
                                            },
                                            "parentItemId": {
                                                "type": "string"
                                            },
                                            "plannedShippingDate": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "plannedWorkingTimePerUnit": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "positionNumber": {
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "quantity": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "reductionAdditionItems": {
                                                "type": "array",
                                                "items": {
                                                    "$ref": "#/components/schemas/reductionAdditionItem"
                                                }
                                            },
                                            "serviceItem": {
                                                "type": "boolean"
                                            },
                                            "servicePeriodFrom": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "servicePeriodTo": {
                                                "type": "integer",
                                                "format": "timestamp"
                                            },
                                            "shipped": {
                                                "type": "boolean"
                                            },
                                            "shippedQuantity": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "taxId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "tax",
                                                    "service": "tax"
                                                }
                                            },
                                            "taxName": {
                                                "type": "string"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "unitCost": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "unitCostInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "unitId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "unit",
                                                    "service": "unit"
                                                }
                                            },
                                            "unitName": {
                                                "type": "string"
                                            },
                                            "unitPrice": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "unitPriceInCompanyCurrency": {
                                                "type": "string",
                                                "format": "number"
                                            },
                                            "withdrawalBatchNumber": {
                                                "type": "string"
                                            },
                                            "withdrawalSerialNumbers": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            },
                                            "withdrawalWarehouseLevelId": {
                                                "type": "string",
                                                "x-weclapp": {
                                                    "entity": "warehouseLevel",
                                                    "service": "warehouseLevel"
                                                }
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "addItem response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/cancelOrManuallyClose": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "cancelOrManuallyClose response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/createAdvancePaymentRequest": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createAdvancePaymentRequest response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesInvoice"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/createCustomerReturn": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createCustomerReturn response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/incomingGoods"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/createDropshipping": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["supplierId"],
                                "type": "object",
                                "properties": {
                                    "supplierId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createDropshipping response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/purchaseOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/createPartPaymentInvoice": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createPartPaymentInvoice response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesInvoice"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/createPrepaymentFinalInvoice": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createPrepaymentFinalInvoice response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesInvoice"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/createPurchaseOrder": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["supplierId"],
                                "type": "object",
                                "properties": {
                                    "supplierId": {
                                        "type": "string"
                                    },
                                    "warehouseId": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createPurchaseOrder response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/purchaseOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/createSalesInvoice": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createSalesInvoice response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesInvoice"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/createShipment": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createShipment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/shipment"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/downloadLatestOrderConfirmationPdf": {
            "get": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestOrderConfirmationPdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/manuallyClose": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "manuallyClose response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/shipOrderForExternalFulfillment": {
            "post": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shipOrderForExternalFulfillment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesOrder"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesOrder/id/{id}/taxGroups": {
            "get": {
                "tags": ["salesOrder"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "taxGroups response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/taxGroup"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesPipeline": {
            "get": {
                "tags": ["salesPipeline"],
                "description": "query salesPipeline",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "salesPipeline response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesPipeline"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["salesPipeline"],
                "description": "create a salesPipeline",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/salesPipeline"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "salesPipeline create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesPipeline"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesPipeline/count": {
            "get": {
                "tags": ["salesPipeline"],
                "description": "count salesPipeline",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesPipeline/id/{id}": {
            "get": {
                "tags": ["salesPipeline"],
                "description": "query salesPipeline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesPipeline"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["salesPipeline"],
                "description": "update salesPipeline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/salesPipeline"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "salesPipeline update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesPipeline"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["salesPipeline"],
                "description": "delete a salesPipeline",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "salesPipeline delete response"
                    }
                }
            }
        },
        "/salesStage": {
            "get": {
                "tags": ["salesStage"],
                "description": "query salesStage",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "salesStage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/salesStage"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["salesStage"],
                "description": "create a salesStage",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/salesStage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "salesStage create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesStage"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesStage/count": {
            "get": {
                "tags": ["salesStage"],
                "description": "count salesStage",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/salesStage/id/{id}": {
            "get": {
                "tags": ["salesStage"],
                "description": "query salesStage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesStage"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["salesStage"],
                "description": "update salesStage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/salesStage"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "salesStage update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/salesStage"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["salesStage"],
                "description": "delete a salesStage",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "salesStage delete response"
                    }
                }
            }
        },
        "/search/search": {
            "get": {
                "tags": ["search"],
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "maxResults",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "entityName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeEntities",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "includeHiddenEndpoints",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "includeMissingEndpoints",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/searchResults"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sector": {
            "get": {
                "tags": ["sector"],
                "description": "query sector",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sector response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["sector"],
                "description": "create a sector",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "sector create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sector/count": {
            "get": {
                "tags": ["sector"],
                "description": "count sector",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sector/id/{id}": {
            "get": {
                "tags": ["sector"],
                "description": "query sector",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["sector"],
                "description": "update sector",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "sector update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["sector"],
                "description": "delete a sector",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "sector delete response"
                    }
                }
            }
        },
        "/sepaDirectDebitMandate": {
            "get": {
                "tags": ["sepaDirectDebitMandate"],
                "description": "query sepaDirectDebitMandate",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "sepaDirectDebitMandate response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/sepaDirectDebitMandate"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["sepaDirectDebitMandate"],
                "description": "create a sepaDirectDebitMandate",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sepaDirectDebitMandate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "sepaDirectDebitMandate create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sepaDirectDebitMandate"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sepaDirectDebitMandate/count": {
            "get": {
                "tags": ["sepaDirectDebitMandate"],
                "description": "count sepaDirectDebitMandate",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/sepaDirectDebitMandate/id/{id}": {
            "get": {
                "tags": ["sepaDirectDebitMandate"],
                "description": "query sepaDirectDebitMandate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sepaDirectDebitMandate"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["sepaDirectDebitMandate"],
                "description": "update sepaDirectDebitMandate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/sepaDirectDebitMandate"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "sepaDirectDebitMandate update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/sepaDirectDebitMandate"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["sepaDirectDebitMandate"],
                "description": "delete a sepaDirectDebitMandate",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "sepaDirectDebitMandate delete response"
                    }
                }
            }
        },
        "/serialNumber": {
            "get": {
                "tags": ["serialNumber"],
                "description": "query serialNumber",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "serialNumber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/serialNumber"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/serialNumber/count": {
            "get": {
                "tags": ["serialNumber"],
                "description": "count serialNumber",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/serialNumber/generateSerialNumbersFromNumberRange": {
            "post": {
                "tags": ["serialNumber"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["count"],
                                "type": "object",
                                "properties": {
                                    "count": {
                                        "type": "integer",
                                        "format": "int32"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "generateSerialNumbersFromNumberRange response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/serialNumber/id/{id}": {
            "get": {
                "tags": ["serialNumber"],
                "description": "query serialNumber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/serialNumber"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["serialNumber"],
                "description": "update serialNumber",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/serialNumber"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "serialNumber update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/serialNumber"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings/baseSettings": {
            "get": {
                "tags": ["settings"],
                "responses": {
                    "200": {
                        "description": "baseSettings response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings/configurableMandatoryFields": {
            "get": {
                "tags": ["settings"],
                "responses": {
                    "200": {
                        "description": "configurableMandatoryFields response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "type": "string"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/settings/salesSettings": {
            "get": {
                "tags": ["settings"],
                "responses": {
                    "200": {
                        "description": "salesSettings response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment": {
            "get": {
                "tags": ["shipment"],
                "description": "query shipment",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shipment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/shipment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["shipment"],
                "description": "create a shipment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "shipment create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/count": {
            "get": {
                "tags": ["shipment"],
                "description": "count shipment",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}": {
            "get": {
                "tags": ["shipment"],
                "description": "query shipment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["shipment"],
                "description": "update shipment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "shipment update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/createSalesInvoice": {
            "post": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "createSalesInvoice response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/salesInvoice"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/createShippingLabelPdf": {
            "post": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "name",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "description",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "createShippingLabelPdf response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/downloadLatestDeliveryNotePdf": {
            "get": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestDeliveryNotePdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/downloadLatestPickingListPdf": {
            "get": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestPickingListPdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/downloadLatestShippingLabelPdf": {
            "get": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadLatestShippingLabelPdf response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/getAvailableQuantitiesForOutgoingShipment": {
            "post": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "getAvailableQuantitiesForOutgoingShipment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/warehouseStock"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/getLevelForSerialNumber": {
            "post": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["serialNumber", "shipmentItemId"],
                                "type": "object",
                                "properties": {
                                    "shipmentItemId": {
                                        "type": "string"
                                    },
                                    "serialNumber": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "getLevelForSerialNumber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/warehouseLevel"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/getPickingSuggestionForSerialNumber": {
            "post": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["serialNumber", "shipmentItemId"],
                                "type": "object",
                                "properties": {
                                    "shipmentItemId": {
                                        "type": "string"
                                    },
                                    "serialNumber": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "getPickingSuggestionForSerialNumber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/serialNumberSuggestion"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/updateWithdrawals": {
            "post": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["removeUnconfirmed", "updateShipQuantity", "withdrawals"],
                                "type": "object",
                                "properties": {
                                    "withdrawals": {
                                        "type": "array",
                                        "items": {
                                            "type": "object",
                                            "properties": {
                                                "batchNumber": {
                                                    "type": "string"
                                                },
                                                "bookedDate": {
                                                    "type": "integer",
                                                    "format": "timestamp"
                                                },
                                                "confirmedDate": {
                                                    "type": "integer",
                                                    "format": "timestamp"
                                                },
                                                "confirmedQuantity": {
                                                    "type": "string",
                                                    "format": "number"
                                                },
                                                "levelId": {
                                                    "type": "string",
                                                    "x-weclapp": {
                                                        "entity": "warehouseLevel",
                                                        "service": "warehouseLevel"
                                                    }
                                                },
                                                "pickingUserId": {
                                                    "type": "string",
                                                    "x-weclapp": {
                                                        "entity": "user",
                                                        "service": "user"
                                                    }
                                                },
                                                "productionOrderItemId": {
                                                    "type": "string"
                                                },
                                                "serialNumbers": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string"
                                                    }
                                                },
                                                "shipmentItemId": {
                                                    "type": "string"
                                                },
                                                "withdrawalQuantity": {
                                                    "type": "string",
                                                    "format": "number"
                                                }
                                            }
                                        }
                                    },
                                    "updateShipQuantity": {
                                        "type": "boolean"
                                    },
                                    "removeUnconfirmed": {
                                        "type": "boolean"
                                    },
                                    "useReservedSerialNumbersFromOtherShipments": {
                                        "type": "boolean"
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "updateWithdrawals response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/withdrawal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipment/id/{id}/withdrawals": {
            "get": {
                "tags": ["shipment"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "withdrawals response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/withdrawal"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentMethod": {
            "get": {
                "tags": ["shipmentMethod"],
                "description": "query shipmentMethod",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shipmentMethod response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/shipmentMethod"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["shipmentMethod"],
                "description": "create a shipmentMethod",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentMethod"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "shipmentMethod create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentMethod"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentMethod/count": {
            "get": {
                "tags": ["shipmentMethod"],
                "description": "count shipmentMethod",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentMethod/id/{id}": {
            "get": {
                "tags": ["shipmentMethod"],
                "description": "query shipmentMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentMethod"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["shipmentMethod"],
                "description": "update shipmentMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentMethod"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "shipmentMethod update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentMethod"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["shipmentMethod"],
                "description": "delete a shipmentMethod",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "shipmentMethod delete response"
                    }
                }
            }
        },
        "/shipmentReturnAssessment": {
            "get": {
                "tags": ["shipmentReturnAssessment"],
                "description": "query shipmentReturnAssessment",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shipmentReturnAssessment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/shipmentReturnDescription"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["shipmentReturnAssessment"],
                "description": "create a shipmentReturnAssessment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentReturnDescription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "shipmentReturnAssessment create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentReturnAssessment/count": {
            "get": {
                "tags": ["shipmentReturnAssessment"],
                "description": "count shipmentReturnAssessment",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentReturnAssessment/id/{id}": {
            "get": {
                "tags": ["shipmentReturnAssessment"],
                "description": "query shipmentReturnAssessment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["shipmentReturnAssessment"],
                "description": "update shipmentReturnAssessment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentReturnDescription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "shipmentReturnAssessment update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["shipmentReturnAssessment"],
                "description": "delete a shipmentReturnAssessment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "shipmentReturnAssessment delete response"
                    }
                }
            }
        },
        "/shipmentReturnError": {
            "get": {
                "tags": ["shipmentReturnError"],
                "description": "query shipmentReturnError",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shipmentReturnError response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/shipmentReturnDescription"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["shipmentReturnError"],
                "description": "create a shipmentReturnError",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentReturnDescription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "shipmentReturnError create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentReturnError/count": {
            "get": {
                "tags": ["shipmentReturnError"],
                "description": "count shipmentReturnError",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentReturnError/id/{id}": {
            "get": {
                "tags": ["shipmentReturnError"],
                "description": "query shipmentReturnError",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["shipmentReturnError"],
                "description": "update shipmentReturnError",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentReturnDescription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "shipmentReturnError update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["shipmentReturnError"],
                "description": "delete a shipmentReturnError",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "shipmentReturnError delete response"
                    }
                }
            }
        },
        "/shipmentReturnReason": {
            "get": {
                "tags": ["shipmentReturnReason"],
                "description": "query shipmentReturnReason",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shipmentReturnReason response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/shipmentReturnDescription"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["shipmentReturnReason"],
                "description": "create a shipmentReturnReason",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentReturnDescription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "shipmentReturnReason create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentReturnReason/count": {
            "get": {
                "tags": ["shipmentReturnReason"],
                "description": "count shipmentReturnReason",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentReturnReason/id/{id}": {
            "get": {
                "tags": ["shipmentReturnReason"],
                "description": "query shipmentReturnReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["shipmentReturnReason"],
                "description": "update shipmentReturnReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentReturnDescription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "shipmentReturnReason update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["shipmentReturnReason"],
                "description": "delete a shipmentReturnReason",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "shipmentReturnReason delete response"
                    }
                }
            }
        },
        "/shipmentReturnRectification": {
            "get": {
                "tags": ["shipmentReturnRectification"],
                "description": "query shipmentReturnRectification",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shipmentReturnRectification response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/shipmentReturnDescription"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["shipmentReturnRectification"],
                "description": "create a shipmentReturnRectification",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentReturnDescription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "shipmentReturnRectification create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentReturnRectification/count": {
            "get": {
                "tags": ["shipmentReturnRectification"],
                "description": "count shipmentReturnRectification",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shipmentReturnRectification/id/{id}": {
            "get": {
                "tags": ["shipmentReturnRectification"],
                "description": "query shipmentReturnRectification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["shipmentReturnRectification"],
                "description": "update shipmentReturnRectification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shipmentReturnDescription"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "shipmentReturnRectification update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shipmentReturnDescription"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["shipmentReturnRectification"],
                "description": "delete a shipmentReturnRectification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "shipmentReturnRectification delete response"
                    }
                }
            }
        },
        "/shippingCarrier": {
            "get": {
                "tags": ["shippingCarrier"],
                "description": "query shippingCarrier",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "shippingCarrier response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/shippingCarrier"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["shippingCarrier"],
                "description": "create a shippingCarrier",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shippingCarrier"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "shippingCarrier create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shippingCarrier"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shippingCarrier/count": {
            "get": {
                "tags": ["shippingCarrier"],
                "description": "count shippingCarrier",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/shippingCarrier/id/{id}": {
            "get": {
                "tags": ["shippingCarrier"],
                "description": "query shippingCarrier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shippingCarrier"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["shippingCarrier"],
                "description": "update shippingCarrier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/shippingCarrier"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "shippingCarrier update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/shippingCarrier"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["shippingCarrier"],
                "description": "delete a shippingCarrier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "shippingCarrier delete response"
                    }
                }
            }
        },
        "/supplier": {
            "get": {
                "tags": ["supplier"],
                "description": "query supplier",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "supplier response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/supplier"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["supplier"],
                "description": "create a supplier",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/supplier"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "supplier create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/supplier"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/supplier/count": {
            "get": {
                "tags": ["supplier"],
                "description": "count supplier",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/supplier/id/{id}": {
            "get": {
                "tags": ["supplier"],
                "description": "query supplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/supplier"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["supplier"],
                "description": "update supplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/supplier"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "supplier update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/supplier"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["supplier"],
                "description": "delete a supplier",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "supplier delete response"
                    }
                }
            }
        },
        "/supplier/id/{id}/downloadImage": {
            "get": {
                "tags": ["supplier"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "downloadImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/supplier/id/{id}/uploadImage": {
            "post": {
                "tags": ["supplier"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "image/jpeg": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "image/png": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "application/pdf": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        },
                        "*/*": {
                            "schema": {
                                "type": "string",
                                "format": "binary"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "uploadImage response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task": {
            "get": {
                "tags": ["task"],
                "description": "query task",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "task response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/task"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["task"],
                "description": "create a task",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/task"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "task create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/task"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/count": {
            "get": {
                "tags": ["task"],
                "description": "count task",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/task/id/{id}": {
            "get": {
                "tags": ["task"],
                "description": "query task",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/task"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["task"],
                "description": "update task",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/task"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "task update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/task"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["task"],
                "description": "delete a task",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "task delete response"
                    }
                }
            }
        },
        "/taskTopic": {
            "get": {
                "tags": ["taskTopic"],
                "description": "query taskTopic",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "taskTopic response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["taskTopic"],
                "description": "create a taskTopic",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "taskTopic create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taskTopic/count": {
            "get": {
                "tags": ["taskTopic"],
                "description": "count taskTopic",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taskTopic/id/{id}": {
            "get": {
                "tags": ["taskTopic"],
                "description": "query taskTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["taskTopic"],
                "description": "update taskTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "taskTopic update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["taskTopic"],
                "description": "delete a taskTopic",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "taskTopic delete response"
                    }
                }
            }
        },
        "/taskType": {
            "get": {
                "tags": ["taskType"],
                "description": "query taskType",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "taskType response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["taskType"],
                "description": "create a taskType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "taskType create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taskType/count": {
            "get": {
                "tags": ["taskType"],
                "description": "count taskType",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/taskType/id/{id}": {
            "get": {
                "tags": ["taskType"],
                "description": "query taskType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["taskType"],
                "description": "update taskType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "taskType update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["taskType"],
                "description": "delete a taskType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "taskType delete response"
                    }
                }
            }
        },
        "/tax": {
            "get": {
                "tags": ["tax"],
                "description": "query tax",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "tax response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/tax"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["tax"],
                "description": "create a tax",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tax"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "tax create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tax"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tax/count": {
            "get": {
                "tags": ["tax"],
                "description": "count tax",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tax/findSalesTax": {
            "get": {
                "tags": ["tax"],
                "parameters": [
                    {
                        "name": "dispatchCountryCode",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "recipientCountryCode",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "taxRateType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["REDUCED", "SLIGHTLY_REDUCED", "STANDARD", "SUPER_REDUCED", "ZERO"]
                        }
                    }, {
                        "name": "partyType",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": ["ORGANIZATION", "PERSON"]
                        }
                    }, {
                        "name": "date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "timestamp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "findSalesTax response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/tax"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/tax/id/{id}": {
            "get": {
                "tags": ["tax"],
                "description": "query tax",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tax"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["tax"],
                "description": "update tax",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/tax"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "tax update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/tax"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["tax"],
                "description": "delete a tax",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "tax delete response"
                    }
                }
            }
        },
        "/termOfPayment": {
            "get": {
                "tags": ["termOfPayment"],
                "description": "query termOfPayment",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "termOfPayment response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/termOfPayment"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["termOfPayment"],
                "description": "create a termOfPayment",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/termOfPayment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "termOfPayment create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/termOfPayment"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/termOfPayment/count": {
            "get": {
                "tags": ["termOfPayment"],
                "description": "count termOfPayment",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/termOfPayment/id/{id}": {
            "get": {
                "tags": ["termOfPayment"],
                "description": "query termOfPayment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/termOfPayment"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["termOfPayment"],
                "description": "update termOfPayment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/termOfPayment"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "termOfPayment update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/termOfPayment"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["termOfPayment"],
                "description": "delete a termOfPayment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "termOfPayment delete response"
                    }
                }
            }
        },
        "/ticket": {
            "get": {
                "tags": ["ticket"],
                "description": "query ticket",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ticket response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ticket"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ticket"],
                "description": "create a ticket",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ticket"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "ticket create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticket"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket/count": {
            "get": {
                "tags": ["ticket"],
                "description": "count ticket",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket/configuration": {
            "get": {
                "tags": ["ticket"],
                "responses": {
                    "200": {
                        "description": "configuration response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/ticketConfiguration"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket/stateStatistic": {
            "get": {
                "tags": ["ticket"],
                "responses": {
                    "200": {
                        "description": "stateStatistic response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ticketGroupByStatusReport"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket/ticketingUsers": {
            "get": {
                "tags": ["ticket"],
                "responses": {
                    "200": {
                        "description": "ticketingUsers response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/onlyId"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticket/id/{id}": {
            "get": {
                "tags": ["ticket"],
                "description": "query ticket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticket"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["ticket"],
                "description": "update ticket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ticket"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "ticket update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticket"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ticket"],
                "description": "delete a ticket",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ticket delete response"
                    }
                }
            }
        },
        "/ticket/id/{id}/extraInfoForApp": {
            "get": {
                "tags": ["ticket"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "extraInfoForApp response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/ticketExtraInformation"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketCategory": {
            "get": {
                "tags": ["ticketCategory"],
                "description": "query ticketCategory",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ticketCategory response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ticketCategory"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketCategory/count": {
            "get": {
                "tags": ["ticketCategory"],
                "description": "count ticketCategory",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketCategory/id/{id}": {
            "get": {
                "tags": ["ticketCategory"],
                "description": "query ticketCategory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticketCategory"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketChannel": {
            "get": {
                "tags": ["ticketChannel"],
                "description": "query ticketChannel",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ticketChannel response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ticketChannel"],
                "description": "create a ticketChannel",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "ticketChannel create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketChannel/count": {
            "get": {
                "tags": ["ticketChannel"],
                "description": "count ticketChannel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketChannel/id/{id}": {
            "get": {
                "tags": ["ticketChannel"],
                "description": "query ticketChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["ticketChannel"],
                "description": "update ticketChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "ticketChannel update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ticketChannel"],
                "description": "delete a ticketChannel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ticketChannel delete response"
                    }
                }
            }
        },
        "/ticketFaq": {
            "get": {
                "tags": ["ticketFaq"],
                "description": "query ticketFaq",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ticketFaq response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ticketFaq"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ticketFaq"],
                "description": "create a ticketFaq",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ticketFaq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "ticketFaq create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticketFaq"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketFaq/count": {
            "get": {
                "tags": ["ticketFaq"],
                "description": "count ticketFaq",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketFaq/id/{id}": {
            "get": {
                "tags": ["ticketFaq"],
                "description": "query ticketFaq",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticketFaq"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["ticketFaq"],
                "description": "update ticketFaq",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ticketFaq"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "ticketFaq update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticketFaq"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ticketFaq"],
                "description": "delete a ticketFaq",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ticketFaq delete response"
                    }
                }
            }
        },
        "/ticketPriority": {
            "get": {
                "tags": ["ticketPriority"],
                "description": "query ticketPriority",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ticketPriority response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ticketPriority"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketPriority/count": {
            "get": {
                "tags": ["ticketPriority"],
                "description": "count ticketPriority",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketPriority/id/{id}": {
            "get": {
                "tags": ["ticketPriority"],
                "description": "query ticketPriority",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticketPriority"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketStatus": {
            "get": {
                "tags": ["ticketStatus"],
                "description": "query ticketStatus",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ticketStatus response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/ticketStatus"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ticketStatus"],
                "description": "create a ticketStatus",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ticketStatus"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "ticketStatus create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticketStatus"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketStatus/count": {
            "get": {
                "tags": ["ticketStatus"],
                "description": "count ticketStatus",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketStatus/id/{id}": {
            "get": {
                "tags": ["ticketStatus"],
                "description": "query ticketStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticketStatus"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["ticketStatus"],
                "description": "update ticketStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ticketStatus"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "ticketStatus update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ticketStatus"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ticketStatus"],
                "description": "delete a ticketStatus",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ticketStatus delete response"
                    }
                }
            }
        },
        "/ticketType": {
            "get": {
                "tags": ["ticketType"],
                "description": "query ticketType",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ticketType response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["ticketType"],
                "description": "create a ticketType",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "ticketType create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketType/count": {
            "get": {
                "tags": ["ticketType"],
                "description": "count ticketType",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/ticketType/id/{id}": {
            "get": {
                "tags": ["ticketType"],
                "description": "query ticketType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["ticketType"],
                "description": "update ticketType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "ticketType update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["ticketType"],
                "description": "delete a ticketType",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ticketType delete response"
                    }
                }
            }
        },
        "/timeRecord": {
            "get": {
                "tags": ["timeRecord"],
                "description": "query timeRecord",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "timeRecord response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/timeRecord"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["timeRecord"],
                "description": "create a timeRecord",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/timeRecord"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "timeRecord create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRecord"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/timeRecord/count": {
            "get": {
                "tags": ["timeRecord"],
                "description": "count timeRecord",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/timeRecord/configuration": {
            "get": {
                "tags": ["timeRecord"],
                "responses": {
                    "200": {
                        "description": "configuration response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/timeRecordConfiguration"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/timeRecord/id/{id}": {
            "get": {
                "tags": ["timeRecord"],
                "description": "query timeRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRecord"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["timeRecord"],
                "description": "update timeRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/timeRecord"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "timeRecord update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/timeRecord"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["timeRecord"],
                "description": "delete a timeRecord",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "timeRecord delete response"
                    }
                }
            }
        },
        "/title": {
            "get": {
                "tags": ["title"],
                "description": "query title",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "title response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/customValue"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["title"],
                "description": "create a title",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "title create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/title/count": {
            "get": {
                "tags": ["title"],
                "description": "count title",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/title/id/{id}": {
            "get": {
                "tags": ["title"],
                "description": "query title",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["title"],
                "description": "update title",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/customValue"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "title update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/customValue"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["title"],
                "description": "delete a title",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "title delete response"
                    }
                }
            }
        },
        "/unit": {
            "get": {
                "tags": ["unit"],
                "description": "query unit",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "unit response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/unit"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["unit"],
                "description": "create a unit",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/unit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "unit create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unit"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unit/count": {
            "get": {
                "tags": ["unit"],
                "description": "count unit",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/unit/id/{id}": {
            "get": {
                "tags": ["unit"],
                "description": "query unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unit"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["unit"],
                "description": "update unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/unit"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "unit update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/unit"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["unit"],
                "description": "delete a unit",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "unit delete response"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": ["user"],
                "description": "query user",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "user response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/user"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/count": {
            "get": {
                "tags": ["user"],
                "description": "count user",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/currentUser": {
            "get": {
                "tags": ["user"],
                "responses": {
                    "200": {
                        "description": "currentUser response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "$ref": "#/components/schemas/user"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/defaultUserImageThumbnailScaled": {
            "get": {
                "tags": ["user"],
                "parameters": [
                    {
                        "name": "size",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "defaultUserImageThumbnailScaled response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/id/{id}": {
            "get": {
                "tags": ["user"],
                "description": "query user",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/user"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/id/{id}/userImage": {
            "get": {
                "tags": ["user"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "imageId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "userImage response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/id/{id}/userImageThumbnail": {
            "get": {
                "tags": ["user"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "scaleWidth",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "scaleHeight",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "imageId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "userImageThumbnail response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/id/{id}/userImageThumbnailScaled": {
            "get": {
                "tags": ["user"],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "bid",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "size",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "userImageThumbnailScaled response",
                        "content": {
                            "image/jpeg": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "image/png": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "application/pdf": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            },
                            "*/*": {
                                "schema": {
                                    "type": "string",
                                    "format": "binary"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variantArticle": {
            "get": {
                "tags": ["variantArticle"],
                "description": "query variantArticle",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "variantArticle response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/variantArticle"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["variantArticle"],
                "description": "create a variantArticle",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/variantArticle"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "variantArticle create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/variantArticle"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variantArticle/count": {
            "get": {
                "tags": ["variantArticle"],
                "description": "count variantArticle",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variantArticle/id/{id}": {
            "get": {
                "tags": ["variantArticle"],
                "description": "query variantArticle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/variantArticle"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["variantArticle"],
                "description": "update variantArticle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/variantArticle"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "variantArticle update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/variantArticle"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["variantArticle"],
                "description": "delete a variantArticle",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "variantArticle delete response"
                    }
                }
            }
        },
        "/variantArticleAttribute": {
            "get": {
                "tags": ["variantArticleAttribute"],
                "description": "query variantArticleAttribute",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "variantArticleAttribute response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/variantArticleAttribute"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["variantArticleAttribute"],
                "description": "create a variantArticleAttribute",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/variantArticleAttribute"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "variantArticleAttribute create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/variantArticleAttribute"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variantArticleAttribute/count": {
            "get": {
                "tags": ["variantArticleAttribute"],
                "description": "count variantArticleAttribute",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variantArticleAttribute/id/{id}": {
            "get": {
                "tags": ["variantArticleAttribute"],
                "description": "query variantArticleAttribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/variantArticleAttribute"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["variantArticleAttribute"],
                "description": "update variantArticleAttribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/variantArticleAttribute"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "variantArticleAttribute update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/variantArticleAttribute"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["variantArticleAttribute"],
                "description": "delete a variantArticleAttribute",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "variantArticleAttribute delete response"
                    }
                }
            }
        },
        "/variantArticleVariant": {
            "get": {
                "tags": ["variantArticleVariant"],
                "description": "query variantArticleVariant",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "variantArticleVariant response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/variantArticleVariant"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variantArticleVariant/count": {
            "get": {
                "tags": ["variantArticleVariant"],
                "description": "count variantArticleVariant",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/variantArticleVariant/id/{id}": {
            "get": {
                "tags": ["variantArticleVariant"],
                "description": "query variantArticleVariant",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/variantArticleVariant"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouse": {
            "get": {
                "tags": ["warehouse"],
                "description": "query warehouse",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "warehouse response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/warehouse"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouse/count": {
            "get": {
                "tags": ["warehouse"],
                "description": "count warehouse",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouse/id/{id}": {
            "get": {
                "tags": ["warehouse"],
                "description": "query warehouse",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/warehouse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseLevel": {
            "get": {
                "tags": ["warehouseLevel"],
                "description": "query warehouseLevel",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "warehouseLevel response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/warehouseLevel"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseLevel/count": {
            "get": {
                "tags": ["warehouseLevel"],
                "description": "count warehouseLevel",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseLevel/id/{id}": {
            "get": {
                "tags": ["warehouseLevel"],
                "description": "query warehouseLevel",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/warehouseLevel"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStock": {
            "get": {
                "tags": ["warehouseStock"],
                "description": "query warehouseStock",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "warehouseStock response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/warehouseStock"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStock/count": {
            "get": {
                "tags": ["warehouseStock"],
                "description": "count warehouseStock",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStock/groupedBySerialNumber": {
            "get": {
                "tags": ["warehouseStock"],
                "parameters": [
                    {
                        "name": "articleNumber",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "articleName",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "warehouseLevelId",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "groupedBySerialNumber response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/warehouseStock"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStock/id/{id}": {
            "get": {
                "tags": ["warehouseStock"],
                "description": "query warehouseStock",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/warehouseStock"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStockMovement": {
            "get": {
                "tags": ["warehouseStockMovement"],
                "description": "query warehouseStockMovement",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "warehouseStockMovement response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/warehouseStockMovement"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStockMovement/count": {
            "get": {
                "tags": ["warehouseStockMovement"],
                "description": "count warehouseStockMovement",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStockMovement/bookIncomingMovement": {
            "post": {
                "tags": ["warehouseStockMovement"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["articleId", "quantity", "targetWarehouseLevelId"],
                                "type": "object",
                                "properties": {
                                    "articleId": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "string",
                                        "format": "number"
                                    },
                                    "articleValuationPrice": {
                                        "type": "string",
                                        "format": "number"
                                    },
                                    "targetWarehouseLevelId": {
                                        "type": "string"
                                    },
                                    "movementNote": {
                                        "type": "string"
                                    },
                                    "batchNumber": {
                                        "type": "string"
                                    },
                                    "batchNumberExpirationDate": {
                                        "type": "integer",
                                        "format": "timestamp"
                                    },
                                    "serialNumbers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "bookIncomingMovement response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStockMovement/bookOutgoingMovement": {
            "post": {
                "tags": ["warehouseStockMovement"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["articleId", "quantity", "sourceWarehouseLevelId"],
                                "type": "object",
                                "properties": {
                                    "articleId": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "string",
                                        "format": "number"
                                    },
                                    "sourceWarehouseLevelId": {
                                        "type": "string"
                                    },
                                    "movementNote": {
                                        "type": "string"
                                    },
                                    "batchNumber": {
                                        "type": "string"
                                    },
                                    "serialNumbers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "bookOutgoingMovement response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStockMovement/bookTransferMovement": {
            "post": {
                "tags": ["warehouseStockMovement"],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": ["articleId", "quantity", "sourceWarehouseLevelId", "targetWarehouseLevelId"],
                                "type": "object",
                                "properties": {
                                    "articleId": {
                                        "type": "string"
                                    },
                                    "quantity": {
                                        "type": "string",
                                        "format": "number"
                                    },
                                    "sourceWarehouseLevelId": {
                                        "type": "string"
                                    },
                                    "targetWarehouseLevelId": {
                                        "type": "string"
                                    },
                                    "movementNote": {
                                        "type": "string"
                                    },
                                    "batchNumber": {
                                        "type": "string"
                                    },
                                    "serialNumbers": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        }
                                    }
                                }
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "bookTransferMovement response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "object"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/warehouseStockMovement/id/{id}": {
            "get": {
                "tags": ["warehouseStockMovement"],
                "description": "query warehouseStockMovement",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/warehouseStockMovement"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhook": {
            "get": {
                "tags": ["webhook"],
                "description": "query webhook",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "webhook response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/webhook"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["webhook"],
                "description": "create a webhook",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/webhook"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "webhook create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/webhook"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhook/count": {
            "get": {
                "tags": ["webhook"],
                "description": "count webhook",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/webhook/id/{id}": {
            "get": {
                "tags": ["webhook"],
                "description": "query webhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/webhook"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["webhook"],
                "description": "update webhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/webhook"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "webhook update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/webhook"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["webhook"],
                "description": "delete a webhook",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "webhook delete response"
                    }
                }
            }
        },
        "/weclappOs": {
            "get": {
                "tags": ["weclappOs"],
                "description": "query weclappOs",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "pageSize",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }, {
                        "name": "serializeNulls",
                        "in": "query",
                        "schema": {
                            "type": "boolean"
                        }
                    }, {
                        "name": "sort",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "properties",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }, {
                        "name": "includeReferencedEntities",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "weclappOs response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/weclappOs"
                                            }
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": ["weclappOs"],
                "description": "create a weclappOs",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/weclappOs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "weclappOs create response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/weclappOs"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/weclappOs/count": {
            "get": {
                "tags": ["weclappOs"],
                "description": "count weclappOs",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "count",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "properties": {
                                        "result": {
                                            "type": "integer",
                                            "format": "int64"
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/weclappOs/id/{id}": {
            "get": {
                "tags": ["weclappOs"],
                "description": "query weclappOs",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get by id",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/weclappOs"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": ["weclappOs"],
                "description": "update weclappOs",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/weclappOs"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "weclappOs update response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/weclappOs"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": ["weclappOs"],
                "description": "delete a weclappOs",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "weclappOs delete response"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "abstractBillOfMaterial": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "quantity": {
                                "type": "string",
                                "format": "number"
                            }
                        }
                    }
                ]
            },
            "abstractEntity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/onlyId"
                    }, {
                        "type": "object",
                        "properties": {
                            "version": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "createdDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "readOnly": true,
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "lastModifiedDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "readOnly": true,
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "abstractEntityWithCustomAttributes": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "customAttributes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/customAttribute"
                                }
                            }
                        }
                    }
                ]
            },
            "abstractParty": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "addresses": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/address"
                                }
                            },
                            "birthDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "company": {
                                "type": "string"
                            },
                            "company2": {
                                "type": "string"
                            },
                            "deliveryAddressId": {
                                "type": "string"
                            },
                            "email": {
                                "type": "string"
                            },
                            "fax": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "invoiceAddressId": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "middleName": {
                                "type": "string"
                            },
                            "mobilePhone1": {
                                "type": "string"
                            },
                            "onlineAccounts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlineAccount"
                                }
                            },
                            "partyType": {
                                "$ref": "#/components/schemas/partyType"
                            },
                            "personCompany": {
                                "type": "string"
                            },
                            "personDepartment": {
                                "type": "string"
                            },
                            "personRole": {
                                "type": "string"
                            },
                            "phone": {
                                "type": "string"
                            },
                            "primaryAddressId": {
                                "type": "string"
                            },
                            "salutation": {
                                "$ref": "#/components/schemas/salutation"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "title": {
                                "type": "string"
                            },
                            "titleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "title"
                                }
                            },
                            "website": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "accountingTransaction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountingImportDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "conversionRate": {
                                "type": "string",
                                "format": "number"
                            },
                            "conversionRateDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "currencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "required": true,
                                    "service": "currency"
                                }
                            },
                            "currencyName": {
                                "type": "string"
                            },
                            "draft": {
                                "type": "boolean"
                            },
                            "externalRecordNumber": {
                                "type": "string"
                            },
                            "internalRecordNumber": {
                                "type": "string"
                            },
                            "reverseTransaction": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "status": {
                                "$ref": "#/components/schemas/accountingTransactionStatus"
                            },
                            "transactionDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "transactionDetails": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/accountingTransactionDetail"
                                }
                            },
                            "transactionEstablishDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "transactionNumber": {
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/bookingType"
                            }
                        }
                    }
                ]
            },
            "accountingTransactionDetail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "required": true,
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountNumber": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "currencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "service": "currency"
                                }
                            },
                            "currencyName": {
                                "type": "string"
                            },
                            "debitCredit": {
                                "$ref": "#/components/schemas/debitCreditIndicator"
                            },
                            "description": {
                                "type": "string"
                            },
                            "taxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "taxName": {
                                "type": "string"
                            },
                            "transactionDetailType": {
                                "$ref": "#/components/schemas/transactionDetailType"
                            }
                        }
                    }
                ]
            },
            "accountingTransactionStatus": {
                "type": "string",
                "enum": ["DRAFT", "ESTABLISHED", "PREBATCHBOOKING"]
            },
            "activityFeedEntry": {
                "type": "object",
                "properties": {
                    "createDate": {
                        "type": "integer",
                        "format": "timestamp"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "entityName": {
                        "type": "string"
                    },
                    "entityType": {
                        "type": "string"
                    },
                    "finalString": {
                        "type": "string"
                    },
                    "userName": {
                        "type": "string"
                    }
                }
            },
            "address": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "city": {
                                "type": "string"
                            },
                            "company": {
                                "type": "string"
                            },
                            "company2": {
                                "type": "string"
                            },
                            "countryCode": {
                                "type": "string"
                            },
                            "deliveryAddress": {
                                "type": "boolean"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "globalLocationNumber": {
                                "type": "string"
                            },
                            "invoiceAddress": {
                                "type": "boolean"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "phoneNumber": {
                                "type": "string"
                            },
                            "postOfficeBoxCity": {
                                "type": "string"
                            },
                            "postOfficeBoxNumber": {
                                "type": "string"
                            },
                            "postOfficeBoxZipCode": {
                                "type": "string"
                            },
                            "primeAddress": {
                                "type": "boolean"
                            },
                            "salutation": {
                                "$ref": "#/components/schemas/salutation"
                            },
                            "state": {
                                "type": "string"
                            },
                            "street1": {
                                "type": "string"
                            },
                            "street2": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "titleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "title"
                                }
                            },
                            "zipcode": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "advancePaymentStatus": {
                "type": "string",
                "enum": ["OPEN", "PAID"]
            },
            "appSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "settingsKey": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "value": {
                                "type": "object"
                            }
                        }
                    }
                ]
            },
            "appUserSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "settingsKey": {
                                "type": "string"
                            },
                            "value": {
                                "type": "object"
                            }
                        }
                    }
                ]
            },
            "archivedEmail": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "bccAddresses": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "body": {
                                "type": "string"
                            },
                            "ccAddresses": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "fromAddress": {
                                "type": "string"
                            },
                            "messageIdentifier": {
                                "type": "string"
                            },
                            "receivedDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "replyToAddress": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "subject": {
                                "type": "string"
                            },
                            "toAddresses": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "archivedEmailAttachment": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "mediaType": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "article": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseArticle"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountNumber": {
                                "type": "string"
                            },
                            "accountingCodeId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "articleAccountingCode"
                                }
                            },
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "applyCashDiscount": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "articleAlternativeQuantities": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/articleAlternativeQuantity"
                                }
                            },
                            "articleCalculationPrices": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/articleCalculationPrice"
                                }
                            },
                            "articleCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "articleCategory",
                                    "service": "articleCategory"
                                }
                            },
                            "articleGrossWeight": {
                                "type": "string",
                                "format": "number"
                            },
                            "articleHeight": {
                                "type": "string",
                                "format": "number"
                            },
                            "articleImages": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/articleImage"
                                }
                            },
                            "articleLength": {
                                "type": "string",
                                "format": "number"
                            },
                            "articleNetWeight": {
                                "type": "string",
                                "format": "number"
                            },
                            "articlePrices": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/articlePriceWithoutArticleReference"
                                }
                            },
                            "articleType": {
                                "$ref": "#/components/schemas/articleType"
                            },
                            "articleWidth": {
                                "type": "string",
                                "format": "number"
                            },
                            "availableForSalesChannels": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/distributionChannel"
                                }
                            },
                            "availableInSale": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "averageDeliveryTime": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "barcode": {
                                "type": "string"
                            },
                            "batchNumberRequired": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "billOfMaterialPartDeliveryPossible": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "catalogCode": {
                                "type": "string"
                            },
                            "countryOfOriginCode": {
                                "type": "string"
                            },
                            "customsDescription": {
                                "type": "string"
                            },
                            "customsTariffNumber": {
                                "type": "string"
                            },
                            "customsTariffNumberId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "customsTariffNumber"
                                }
                            },
                            "defaultWarehouseLevels": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "expenseAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "expenseAccountNumber": {
                                "type": "string"
                            },
                            "expirationDays": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "invoicingType": {
                                "$ref": "#/components/schemas/invoicingType"
                            },
                            "longText": {
                                "type": "string"
                            },
                            "lowLevelCode": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "manufacturerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "manufacturer"
                                }
                            },
                            "manufacturerName": {
                                "type": "string"
                            },
                            "marginCalculationPriceType": {
                                "$ref": "#/components/schemas/marginCalculationPriceTypeOption"
                            },
                            "minimumStockQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "plannedWorkingTimePerUnit": {
                                "type": "string",
                                "format": "number"
                            },
                            "priceCalculationParameters": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/priceCalculationParameter"
                                }
                            },
                            "procurementLeadDays": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "producerType": {
                                "type": "string"
                            },
                            "productionArticle": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "productionBillOfMaterialItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/billOfMaterial"
                                }
                            },
                            "purchaseCostCenterId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "costCenter",
                                    "service": "costCenter"
                                }
                            },
                            "purchaseCostCenterNumber": {
                                "type": "string"
                            },
                            "quantityConversions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/quantityConversion"
                                }
                            },
                            "ratingId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "articleRating"
                                }
                            },
                            "ratingName": {
                                "type": "string"
                            },
                            "recordItemGroupName": {
                                "type": "string"
                            },
                            "safetyStockDays": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "salesBillOfMaterialItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/salesBillOfMaterialArticleItem"
                                }
                            },
                            "salesCostCenterId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "costCenter",
                                    "service": "costCenter"
                                }
                            },
                            "salesCostCenterNumber": {
                                "type": "string"
                            },
                            "serialNumberRequired": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "showOnDeliveryNote": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "supplySources": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/supplySource"
                                }
                            },
                            "systemCode": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "targetStockQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "useAvailableForSalesChannels": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "useSalesBillOfMaterialItemPrices": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "useSalesBillOfMaterialItemPricesForPurchase": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "articleAlternativeQuantity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "minimumOrderQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "minimumStockQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "targetStockQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "required": true,
                                    "service": "warehouse"
                                }
                            },
                            "warehouseName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "articleCalculationPrice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleCalculationPriceType": {
                                "$ref": "#/components/schemas/articleCalculationPriceType"
                            },
                            "endDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "price": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp"
                            }
                        }
                    }
                ]
            },
            "articleCalculationPriceType": {
                "type": "string",
                "enum": ["CALCULATION_PRICE", "RECOMMENDED_RETAIL_PRICE"]
            },
            "articleCategory": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "imageId": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "parentCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "articleCategory",
                                    "service": "articleCategory"
                                }
                            }
                        }
                    }
                ]
            },
            "articleExtraInformation": {
                "type": "object",
                "properties": {
                    "amazonStockQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "confirmedOrderedQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "consignmentStockQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "currentYearRevenue": {
                        "type": "string",
                        "format": "number"
                    },
                    "currentYearSalesOrderVolume": {
                        "type": "string",
                        "format": "number"
                    },
                    "inventoryValuationAtAvgArticlePrice": {
                        "type": "string",
                        "format": "number"
                    },
                    "lastYearRevenue": {
                        "type": "string",
                        "format": "number"
                    },
                    "lastYearSalesOrderVolume": {
                        "type": "string",
                        "format": "number"
                    },
                    "openQuantityInShipments": {
                        "type": "string",
                        "format": "number"
                    },
                    "openShipmentQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "orderedQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "plannedSalesQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "productionPrice": {
                        "type": "string",
                        "format": "number"
                    },
                    "purchasePrice": {
                        "type": "string",
                        "format": "number"
                    },
                    "purchasePriceCurrencyId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "currency",
                            "service": "currency"
                        }
                    },
                    "reservedStockQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "salesPrice": {
                        "type": "string",
                        "format": "number"
                    },
                    "salesPriceCurrencyId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "currency",
                            "service": "currency"
                        }
                    },
                    "stockQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "stockQuantityWithoutOrder": {
                        "type": "string",
                        "format": "number"
                    },
                    "stockValuationPrice": {
                        "type": "string",
                        "format": "number"
                    },
                    "supplierStockQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "unconfirmedOrderedQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "unreservedStockQuantity": {
                        "type": "string",
                        "format": "number"
                    }
                }
            },
            "articleImage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "fileName": {
                                "type": "string"
                            },
                            "mainImage": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "articlePrice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/articlePriceWithoutArticleReference"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "required": true,
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "distributionChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            }
                        }
                    }
                ]
            },
            "articlePriceWithoutArticleReference": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/articlePriceWithoutSalesChannel"
                    }, {
                        "type": "object",
                        "properties": {
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            }
                        }
                    }
                ]
            },
            "articlePriceWithoutSalesChannel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "currencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "required": true,
                                    "service": "currency"
                                }
                            },
                            "currencyName": {
                                "type": "string"
                            },
                            "customerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "endDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "price": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "priceScaleType": {
                                "$ref": "#/components/schemas/priceScaleType"
                            },
                            "priceScaleValue": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "reductionAdditions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/reductionAddition"
                                }
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp"
                            }
                        }
                    }
                ]
            },
            "articleSupplySource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseArticle"
                    }, {
                        "type": "object",
                        "properties": {
                            "articlePrices": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/articlePriceWithoutSalesChannel"
                                }
                            },
                            "procurementLeadDays": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "supplierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "supplierNumber": {
                                "type": "string"
                            },
                            "supplierStockQuantity": {
                                "type": "string",
                                "format": "number"
                            }
                        }
                    }
                ]
            },
            "articleType": {
                "type": "string",
                "enum": ["BASIC", "SALES_BILL_OF_MATERIAL", "SERVICE", "SHIPPING_COST", "STORABLE"]
            },
            "balanceSheetItem": {
                "type": "string",
                "enum": [
                    "ABSCHREIBUNGEN_GWG_ACCOUNTS",
                    "ABSCHREIBUNGEN_UND_ANLAGEVERMOEGEN_ACCOUNTS",
                    "BESONDERE_AUFWENDUNGEN_ACCOUNTS",
                    "BUCHWERT_ANLAGENABGAENGE_ACCOUNTS",
                    "FREMDLEISTUNGEN_ACCOUNTS",
                    "GAS_STROM_ACCOUNTS",
                    "GELEISTETE_ANZAHLUNGEN_ACCOUNTS",
                    "GESETZLICHE_SOZIALE_AUFWENDUNGEN_ACCOUNTS",
                    "HEIZUNG_ACCOUNTS",
                    "INSTANDHALTUNG_ACCOUNTS",
                    "INSTANDHALTUNG_UND_WERKZEUGE_ACCOUNTS",
                    "KFZ_SONSTIGE_ACCOUNTS",
                    "KFZ_STEUER_ACCOUNTS",
                    "KFZ_VERSICHERUNG_ACCOUNTS",
                    "KOSTEN_DER_WARENABGABE_ACCOUNTS",
                    "LOEHENE_UND_GEHAELTER_ACCOUNTS",
                    "MIETE_PACHT_ACCOUNTS",
                    "NEUTRALE_AUFWENDUNGEN_ACCOUNTS",
                    "NEUTRALE_ERTRAEGE_ACCOUNTS",
                    "PRIVAT_ANTEILE_ACCOUNTS",
                    "REVENUE_ACCOUNTS",
                    "ROH_HILFS_UNDBETRIE_BSSTOFFE_ACCOUNTS",
                    "SALDO_DER_STATISTISCHEN_KONTEN_ACCOUNTS",
                    "SONSTIGE_ERLOESE_ACCOUNTS",
                    "SONSTIGE_KONTEN_ACCOUNTS",
                    "SONSTIGE_RAUMKOSTEN_ACCOUNTS",
                    "STEUERN_VERSICHERUNGEN_BEITRAEGE_ACCOUNTS",
                    "UMSATZSTEUER_ACCOUNTS",
                    "UMSATZSTEUER_ZAHLUNGEN_ACCOUNTS",
                    "VERSCHIEDENE_KOSTEN_ACCOUNTS",
                    "VORSTEUER_ACCOUNTS",
                    "WERBE_UND_REISEKOSTEN_ACCOUNTS"
                ]
            },
            "bankAccount": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountHolder": {
                                "type": "string"
                            },
                            "accountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountNumber": {
                                "type": "string"
                            },
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "autoSync": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "automaticProcessing": {
                                "$ref": "#/components/schemas/moneyTransactionProcessingStrategy"
                            },
                            "balance": {
                                "type": "string",
                                "format": "number"
                            },
                            "bankCode": {
                                "type": "string"
                            },
                            "connectionFailure": {
                                "type": "string"
                            },
                            "creditInstitute": {
                                "type": "string"
                            },
                            "creditInstituteCity": {
                                "type": "string"
                            },
                            "creditInstituteStreet": {
                                "type": "string"
                            },
                            "creditInstituteZip": {
                                "type": "string"
                            },
                            "creditLine": {
                                "type": "string",
                                "format": "number"
                            },
                            "currencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "service": "currency"
                                }
                            },
                            "differentSepaCreditorIdentifier": {
                                "type": "string"
                            },
                            "enabledForElectronicPaymentTransactions": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "iban": {
                                "type": "string"
                            },
                            "incidentalCostsOfMonetaryTrafficAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "incidentalCostsOfMonetaryTrafficTaxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "lastDownload": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "primary": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "qrIban": {
                                "type": "string"
                            },
                            "qrIdentifier": {
                                "type": "string"
                            },
                            "swiftBic": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "baossUserStatus": {
                "type": "string",
                "enum": ["ACTIVE", "BLOCKED", "DEPARTURE", "NOT_ACTIVE"]
            },
            "baseArticle": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "ean": {
                                "type": "string"
                            },
                            "fixedPurchaseQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "manufacturerPartNumber": {
                                "type": "string"
                            },
                            "matchCode": {
                                "type": "string"
                            },
                            "minimumPurchaseQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "shortDescription1": {
                                "type": "string"
                            },
                            "shortDescription2": {
                                "type": "string"
                            },
                            "taxRateType": {
                                "$ref": "#/components/schemas/taxRateType"
                            },
                            "unitId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "unit",
                                    "required": true,
                                    "service": "unit"
                                }
                            },
                            "unitName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "baseMinimalRecordItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "customAttributes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/customAttribute"
                                }
                            },
                            "note": {
                                "type": "string"
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "quantity": {
                                "type": "string",
                                "format": "number"
                            }
                        }
                    }
                ]
            },
            "basePurchaseRecord": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordWithMoney"
                    }, {
                        "type": "object",
                        "properties": {
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "responsibleUserUsername": {
                                "type": "string"
                            },
                            "servicePeriodFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "servicePeriodTo": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "shippingCostItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseShippingCostItem"
                                }
                            },
                            "supplierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "supplierNumber": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "baseRecord": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "commercialLanguage": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "disableEmailTemplate": {
                                "type": "boolean"
                            },
                            "recordComment": {
                                "type": "string"
                            },
                            "recordFreeText": {
                                "type": "string"
                            },
                            "recordOpening": {
                                "type": "string"
                            },
                            "sentToRecipient": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "baseRecordItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseMinimalRecordItem"
                    }, {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "descriptionFixed": {
                                "type": "boolean"
                            },
                            "parentItemId": {
                                "type": "string"
                            },
                            "title": {
                                "type": "string"
                            },
                            "unitId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "unit",
                                    "service": "unit"
                                }
                            },
                            "unitName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "baseRecordItemWithMoney": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItem"
                    }, {
                        "type": "object",
                        "properties": {
                            "discountPercentage": {
                                "type": "string",
                                "format": "number"
                            },
                            "grossAmount": {
                                "type": "string",
                                "format": "number"
                            },
                            "grossAmountInCompanyCurrency": {
                                "type": "string",
                                "format": "number"
                            },
                            "manualUnitPrice": {
                                "type": "boolean"
                            },
                            "netAmount": {
                                "type": "string",
                                "format": "number"
                            },
                            "netAmountForStatistics": {
                                "type": "string",
                                "format": "number"
                            },
                            "netAmountForStatisticsInCompanyCurrency": {
                                "type": "string",
                                "format": "number"
                            },
                            "netAmountInCompanyCurrency": {
                                "type": "string",
                                "format": "number"
                            },
                            "reductionAdditionItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/reductionAdditionItem"
                                }
                            },
                            "taxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "taxName": {
                                "type": "string"
                            },
                            "unitPrice": {
                                "type": "string",
                                "format": "number"
                            },
                            "unitPriceInCompanyCurrency": {
                                "type": "string",
                                "format": "number"
                            }
                        }
                    }
                ]
            },
            "baseRecordItemWithPrintSettings": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItemWithMoney"
                    }, {
                        "type": "object",
                        "properties": {
                            "addPageBreakBefore": {
                                "type": "boolean"
                            },
                            "freeTextItem": {
                                "type": "boolean"
                            },
                            "groupName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "baseRecordWithMoney": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecord"
                    }, {
                        "type": "object",
                        "properties": {
                            "currencyConversionDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "currencyConversionRate": {
                                "type": "string",
                                "format": "number"
                            },
                            "grossAmount": {
                                "type": "string",
                                "format": "number"
                            },
                            "grossAmountInCompanyCurrency": {
                                "type": "string",
                                "format": "number"
                            },
                            "headerDiscount": {
                                "type": "string",
                                "format": "number"
                            },
                            "headerSurcharge": {
                                "type": "string",
                                "format": "number"
                            },
                            "netAmount": {
                                "type": "string",
                                "format": "number"
                            },
                            "netAmountInCompanyCurrency": {
                                "type": "string",
                                "format": "number"
                            },
                            "nonStandardTaxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "nonStandardTaxName": {
                                "type": "string"
                            },
                            "paymentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "paymentMethod",
                                    "service": "paymentMethod"
                                }
                            },
                            "paymentMethodName": {
                                "type": "string"
                            },
                            "recordCurrencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "service": "currency"
                                }
                            },
                            "recordCurrencyName": {
                                "type": "string"
                            },
                            "termOfPaymentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "termOfPayment",
                                    "service": "termOfPayment"
                                }
                            },
                            "termOfPaymentName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "baseSalesRecord": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordWithMoney"
                    }, {
                        "type": "object",
                        "properties": {
                            "commission": {
                                "type": "string"
                            },
                            "customerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "customerNumber": {
                                "type": "string"
                            },
                            "dispatchCountryCode": {
                                "type": "string"
                            },
                            "factoring": {
                                "type": "boolean"
                            },
                            "pricingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "responsibleUserUsername": {
                                "type": "string"
                            },
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "servicePeriodFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "servicePeriodTo": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "shipmentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentMethod",
                                    "service": "shipmentMethod"
                                }
                            },
                            "shipmentMethodName": {
                                "type": "string"
                            },
                            "shippingCostItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/salesShippingCostItem"
                                }
                            }
                        }
                    }
                ]
            },
            "baseSalesRecordItemWithCost": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItemWithPrintSettings"
                    }, {
                        "type": "object",
                        "properties": {
                            "manualUnitCost": {
                                "type": "boolean"
                            },
                            "servicePeriodFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "servicePeriodTo": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "unitCost": {
                                "type": "string",
                                "format": "number"
                            },
                            "unitCostInCompanyCurrency": {
                                "type": "string",
                                "format": "number"
                            }
                        }
                    }
                ]
            },
            "baseSalesRecordItemWithService": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseSalesRecordItemWithCost"
                    }, {
                        "type": "object",
                        "properties": {
                            "invoicingType": {
                                "$ref": "#/components/schemas/invoicingType"
                            },
                            "plannedWorkingTimePerUnit": {
                                "type": "string",
                                "format": "number"
                            },
                            "serviceItem": {
                                "type": "boolean"
                            }
                        }
                    }
                ]
            },
            "baseSalesRecordWithAddresses": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseSalesRecord"
                    }, {
                        "type": "object",
                        "properties": {
                            "defaultShippingCarrierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shippingCarrier",
                                    "service": "shippingCarrier"
                                }
                            },
                            "defaultShippingCarrierName": {
                                "type": "string"
                            },
                            "deliveryAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "deliveryEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "invoiceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "plannedDeliveryDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "plannedShippingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "recordAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "salesInvoiceEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            }
                        }
                    }
                ]
            },
            "baseShipment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecord"
                    }, {
                        "type": "object",
                        "properties": {
                            "invoiceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "recipientAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "salesOrderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesOrder",
                                    "service": "salesOrder"
                                }
                            },
                            "salesOrderNumber": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#/components/schemas/shipmentStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/shipmentStatus"
                                }
                            }
                        }
                    }
                ]
            },
            "baseShippingCostItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "grossAmount": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "grossAmountInCompanyCurrency": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "manualUnitPrice": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "netAmount": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "netAmountInCompanyCurrency": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "taxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "required": true,
                                    "service": "tax"
                                }
                            },
                            "taxName": {
                                "type": "string"
                            },
                            "unitPrice": {
                                "type": "string",
                                "format": "number"
                            },
                            "unitPriceInCompanyCurrency": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "batchNumber": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "required": true,
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "batchNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "expirationDate": {
                                "type": "integer",
                                "format": "timestamp"
                            }
                        }
                    }
                ]
            },
            "billOfMaterial": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractBillOfMaterial"
                    }, {
                        "type": "object"
                    }
                ]
            },
            "billUntil": {
                "type": "string",
                "enum": [
                    "CURRENT_MONTH_1",
                    "CURRENT_MONTH_10",
                    "CURRENT_MONTH_11",
                    "CURRENT_MONTH_12",
                    "CURRENT_MONTH_13",
                    "CURRENT_MONTH_14",
                    "CURRENT_MONTH_15",
                    "CURRENT_MONTH_16",
                    "CURRENT_MONTH_17",
                    "CURRENT_MONTH_18",
                    "CURRENT_MONTH_19",
                    "CURRENT_MONTH_2",
                    "CURRENT_MONTH_20",
                    "CURRENT_MONTH_21",
                    "CURRENT_MONTH_22",
                    "CURRENT_MONTH_23",
                    "CURRENT_MONTH_24",
                    "CURRENT_MONTH_25",
                    "CURRENT_MONTH_26",
                    "CURRENT_MONTH_27",
                    "CURRENT_MONTH_28",
                    "CURRENT_MONTH_29",
                    "CURRENT_MONTH_3",
                    "CURRENT_MONTH_30",
                    "CURRENT_MONTH_31",
                    "CURRENT_MONTH_4",
                    "CURRENT_MONTH_5",
                    "CURRENT_MONTH_6",
                    "CURRENT_MONTH_7",
                    "CURRENT_MONTH_8",
                    "CURRENT_MONTH_9",
                    "NEXT_MONTH_1",
                    "NEXT_MONTH_10",
                    "NEXT_MONTH_11",
                    "NEXT_MONTH_12",
                    "NEXT_MONTH_13",
                    "NEXT_MONTH_14",
                    "NEXT_MONTH_15",
                    "NEXT_MONTH_16",
                    "NEXT_MONTH_17",
                    "NEXT_MONTH_18",
                    "NEXT_MONTH_19",
                    "NEXT_MONTH_2",
                    "NEXT_MONTH_20",
                    "NEXT_MONTH_21",
                    "NEXT_MONTH_22",
                    "NEXT_MONTH_23",
                    "NEXT_MONTH_24",
                    "NEXT_MONTH_25",
                    "NEXT_MONTH_26",
                    "NEXT_MONTH_27",
                    "NEXT_MONTH_28",
                    "NEXT_MONTH_29",
                    "NEXT_MONTH_3",
                    "NEXT_MONTH_30",
                    "NEXT_MONTH_31",
                    "NEXT_MONTH_4",
                    "NEXT_MONTH_5",
                    "NEXT_MONTH_6",
                    "NEXT_MONTH_7",
                    "NEXT_MONTH_8",
                    "NEXT_MONTH_9"
                ]
            },
            "blanketPurchaseOrder": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "required": true,
                                    "service": "article"
                                }
                            },
                            "blanketPurchaseOrderNumber": {
                                "type": "string"
                            },
                            "calculationMode": {
                                "$ref": "#/components/schemas/specialCalculationMode"
                            },
                            "comment": {
                                "type": "string"
                            },
                            "commercialLanguage": {
                                "type": "string"
                            },
                            "confirmationNumber": {
                                "type": "string"
                            },
                            "deliveryAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "description": {
                                "type": "string"
                            },
                            "discountPercentage": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "endDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "formSettingsFromDistributionChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "headerDiscount": {
                                "type": "string",
                                "format": "number"
                            },
                            "headerSurcharge": {
                                "type": "string",
                                "format": "number"
                            },
                            "invoiceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "nonStandardTaxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "orderDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "orderQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "paymentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "paymentMethod",
                                    "service": "paymentMethod"
                                }
                            },
                            "recipientCountryCode": {
                                "type": "string"
                            },
                            "recordAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "recordComment": {
                                "type": "string"
                            },
                            "recordCurrencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "service": "currency"
                                }
                            },
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "recordFreeText": {
                                "type": "string"
                            },
                            "recordOpening": {
                                "type": "string"
                            },
                            "releases": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/releases"
                                }
                            },
                            "residualQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "sentToRecipient": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "shipmentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentMethod",
                                    "service": "shipmentMethod"
                                }
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "status": {
                                "$ref": "#/components/schemas/blanketPurchaseOrderStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/blanketPurchaseOrderStatusHistory"
                                }
                            },
                            "supplierBlanketPurchaseOrderNumber": {
                                "type": "string"
                            },
                            "supplierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "required": true,
                                    "service": "party"
                                }
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "taxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "required": true,
                                    "service": "tax"
                                }
                            },
                            "termOfPaymentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "termOfPayment",
                                    "service": "termOfPayment"
                                }
                            },
                            "unitPrice": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "useManualUnitPrice": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            }
                        }
                    }
                ]
            },
            "blanketPurchaseOrderStatusHistory": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/blanketPurchaseOrderStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "blanketPurchaseOrderStatusType": {
                "type": "string",
                "enum": ["CANCELLED", "CLOSED", "CONFIRMED", "DOCUMENT_PRINTED", "NEW"]
            },
            "bookingType": {
                "type": "string",
                "enum": [
                    "IMPERSONAL",
                    "INCOMING_CREDIT_NOTE",
                    "INCOMING_INVOICE",
                    "INCOMING_PAYMENT",
                    "OUTGOING_CREDIT_NOTE",
                    "OUTGOING_INVOICE",
                    "OUTGOING_PAYMENT"
                ]
            },
            "cDBReminderType": {
                "type": "string",
                "enum": ["AUTOMATIC_REMINDER", "DATE_REMINDER", "NO_REMINDER"]
            },
            "calendar": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "caldavAccountId": {
                                "type": "string"
                            },
                            "calendarColor": {
                                "type": "string"
                            },
                            "calendarKey": {
                                "type": "string"
                            },
                            "calendarSharingPermissions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/calendarSharingPermissions"
                                }
                            },
                            "lastEventsSyncToken": {
                                "type": "string"
                            },
                            "mailAccountId": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "ownerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "sharePrivateEvents": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "synchronize": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "calendarEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "allDayEvent": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "attendees": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/calendarEventAttendee"
                                }
                            },
                            "calendarId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "calendar",
                                    "required": true,
                                    "service": "calendar"
                                }
                            },
                            "concerningId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "contactId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "deleted": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "endDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "location": {
                                "type": "string"
                            },
                            "privateEvent": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "recurringEvent": {
                                "$ref": "#/components/schemas/recurringEvent"
                            },
                            "references": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entityReference"
                                }
                            },
                            "reminderSendType": {
                                "$ref": "#/components/schemas/reminderSendType"
                            },
                            "reminderTime": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "showAs": {
                                "$ref": "#/components/schemas/followupBusyState"
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "subject": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            }
                        }
                    }
                ]
            },
            "calendarEventAttendee": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "attendeeStatus": {
                                "$ref": "#/components/schemas/eventInvitationStatus"
                            },
                            "calendarEventId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "calendarEvent",
                                    "service": "calendarEvent"
                                }
                            },
                            "eventPermission": {
                                "$ref": "#/components/schemas/eventRight"
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            }
                        }
                    }
                ]
            },
            "calendarSharingPermissionType": {
                "type": "string",
                "enum": ["ADMIN", "READ", "READ_WRITE"]
            },
            "calendarSharingPermissions": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "permissionType": {
                                "$ref": "#/components/schemas/calendarSharingPermissionType"
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            }
                        }
                    }
                ]
            },
            "campaign": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "campaignEndDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "campaignName": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "campaignNumber": {
                                "type": "string"
                            },
                            "campaignStartDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "campaignType": {
                                "$ref": "#/components/schemas/campaignType"
                            },
                            "description": {
                                "type": "string"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "responsibleUserUsername": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "campaignParticipant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "campaignId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "campaign",
                                    "required": true,
                                    "service": "campaign"
                                }
                            },
                            "campaignNumber": {
                                "type": "string"
                            },
                            "participation": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "partyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "required": true,
                                    "service": "party"
                                }
                            }
                        }
                    }
                ]
            },
            "campaignType": {
                "type": "string",
                "enum": ["ADVERTISEMENT", "BULKMAIL", "EMAIL", "EVENT", "EXPOSITION", "FAIR", "OTHER", "PUBLICRELATION", "TELEMARKETING", "WEBINAR"]
            },
            "cashAccount": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "currencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "required": true,
                                    "service": "currency"
                                }
                            },
                            "currencyName": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "openingBalance": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "cashAccountCashCountItem": {
                "type": "object",
                "properties": {
                    "quantity": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "value": {
                        "type": "string",
                        "format": "number"
                    }
                }
            },
            "cashAccountSheet": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "cashAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "cashAccount",
                                    "required": true,
                                    "service": "cashAccount"
                                }
                            },
                            "cashCountItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/cashAccountCashCountItem"
                                }
                            },
                            "closed": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "closingBalance": {
                                "type": "string",
                                "format": "number"
                            },
                            "openingBalance": {
                                "type": "string",
                                "format": "number"
                            },
                            "openingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "sheetNumber": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "comment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "authorName": {
                                "type": "string"
                            },
                            "authorUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "authorUserUsername": {
                                "type": "string"
                            },
                            "comment": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "entityId": {
                                "type": "string"
                            },
                            "entityName": {
                                "type": "string"
                            },
                            "htmlComment": {
                                "type": "string"
                            },
                            "lastEditDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "parentCommentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "comment",
                                    "service": "comment"
                                }
                            },
                            "privateComment": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "publicComment": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "recipientUsers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "solution": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "commercialLanguage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "countryCode": {
                                "type": "string"
                            },
                            "languageCode": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "commissionSalesPartner": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "commissionFix": {
                                "type": "string",
                                "format": "number"
                            },
                            "commissionPercentage": {
                                "type": "string",
                                "format": "number"
                            },
                            "commissionType": {
                                "$ref": "#/components/schemas/commissionType"
                            },
                            "salesPartnerCustomerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "required": true,
                                    "service": "party"
                                }
                            },
                            "salesPartnerCustomerNumber": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "commissionType": {
                "type": "string",
                "enum": ["FIX", "FIX_AND_MARGIN", "FIX_AND_REVENUE", "MARGIN", "NO_COMMISSION", "REVENUE"]
            },
            "contact": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractParty"
                    }, {
                        "type": "object",
                        "properties": {
                            "customerCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "customerCategory"
                                }
                            },
                            "customerCategoryName": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "fixPhone2": {
                                "type": "string"
                            },
                            "mobilePhone2": {
                                "type": "string"
                            },
                            "optIn": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInLetter": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInPhone": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInSms": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "phoneHome": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "contract": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "additionalAddresses": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/contractAdditionalAddress"
                                }
                            },
                            "authorizationUnitId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "contractAuthorizationUnit",
                                    "service": "contractAuthorizationUnit"
                                }
                            },
                            "automaticExtension": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "billUntil": {
                                "$ref": "#/components/schemas/billUntil"
                            },
                            "billingDay": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "billingTargetInvoiceStatus": {
                                "$ref": "#/components/schemas/desiredInvoiceStatusType"
                            },
                            "billingType": {
                                "$ref": "#/components/schemas/contractBillingType"
                            },
                            "cancellationDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "cancellationPeriodQuantity": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "cancellationPeriodSoftframe": {
                                "$ref": "#/components/schemas/contractSoftframe"
                            },
                            "cancellationPeriodUnit": {
                                "$ref": "#/components/schemas/contractUnitType"
                            },
                            "commercialLanguage": {
                                "type": "string"
                            },
                            "commission": {
                                "type": "string"
                            },
                            "contractDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "contractItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/contractItem"
                                }
                            },
                            "contractNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "contractNumberAtParty": {
                                "type": "string"
                            },
                            "contractStatus": {
                                "$ref": "#/components/schemas/contractStatus"
                            },
                            "correspondenceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "deliveryAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "deliveryEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "description": {
                                "type": "string"
                            },
                            "differingCorrespondenceAddress": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "differingDeliveryAddress": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "differingInvoiceAddress": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "endDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "extensionQuantity": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "extensionUnit": {
                                "$ref": "#/components/schemas/contractUnitType"
                            },
                            "factoring": {
                                "type": "boolean"
                            },
                            "invoiceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "invoiceRecipientId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "latestCancellationWarningQuantity": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "latestCancellationWarningUnit": {
                                "$ref": "#/components/schemas/contractUnitType"
                            },
                            "latestPossibleTerminationDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "name": {
                                "type": "string"
                            },
                            "nextContractBillingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "nonStandardInputTaxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "orderNumberAtCustomer": {
                                "type": "string"
                            },
                            "partyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "paymentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "paymentMethod",
                                    "service": "paymentMethod"
                                }
                            },
                            "pricingDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "purchaseEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "recordComment": {
                                "type": "string"
                            },
                            "recordCurrencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "service": "currency"
                                }
                            },
                            "recordCurrencyName": {
                                "type": "string"
                            },
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "recordFreeText": {
                                "type": "string"
                            },
                            "recordOpening": {
                                "type": "string"
                            },
                            "reminderDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "reminderSendType": {
                                "$ref": "#/components/schemas/reminderSendType"
                            },
                            "reminderType": {
                                "$ref": "#/components/schemas/cDBReminderType"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "salesInvoiceEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "salesOrderEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "template": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "termOfPaymentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "termOfPayment",
                                    "service": "termOfPayment"
                                }
                            },
                            "terminationReasonId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "contractTerminationReason"
                                }
                            },
                            "types": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "unlimited": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "contractAdditionalAddress": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "address": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "contractAuthorizationUnit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "contractBillingType": {
                "type": "string",
                "enum": ["INVOICE_AFTER", "INVOICE_BEFORE", "NONE", "NOT_INVOICEABLE", "SALES_ORDER"]
            },
            "contractChargeInterval": {
                "type": "string",
                "enum": ["DAILY", "FIVE_YEARLY", "FOUR_YEARLY", "HALF_YEARLY", "MONTHLY", "NONE", "QUARTER", "THREE_YEARLY", "TWO_YEARLY", "WEEKLY", "YEARLY"]
            },
            "contractChargeIntervalType": {
                "type": "string",
                "enum": ["NON_RECURRENT", "RECURRENT"]
            },
            "contractChargeType": {
                "type": "string",
                "enum": ["COST", "REVENUE"]
            },
            "contractItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItemWithPrintSettings"
                    }, {
                        "type": "object",
                        "properties": {
                            "billingGroupId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "contractBillingGroup"
                                }
                            },
                            "costTypeId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "costType",
                                    "service": "costType"
                                }
                            },
                            "interval": {
                                "$ref": "#/components/schemas/contractChargeInterval"
                            },
                            "intervalType": {
                                "$ref": "#/components/schemas/contractChargeIntervalType"
                            },
                            "nextContractBillingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "previousContractBillingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "type": {
                                "$ref": "#/components/schemas/contractChargeType"
                            },
                            "validFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "validTo": {
                                "type": "integer",
                                "format": "timestamp"
                            }
                        }
                    }
                ]
            },
            "contractSoftframe": {
                "type": "string",
                "enum": [
                    "CONTRACT_END",
                    "END_OF_CALENDAR_YEAR",
                    "END_OF_CONTRACT_YEAR",
                    "END_OF_MONTH",
                    "END_OF_QUARTER",
                    "FIFTEENTH_OF_MONTH",
                    "FIFTEENTH_OR_END_OF_MONTH",
                    "HALF_OF_CALENDAR_YEAR"
                ]
            },
            "contractStatus": {
                "type": "string",
                "enum": ["ACTIVE", "DRAFT", "INACTIVE"]
            },
            "contractUnitType": {
                "type": "string",
                "enum": ["DAY", "MONTH", "WEEK", "YEAR"]
            },
            "costCenter": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "costCenterGroupId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "costCenterGroup"
                                }
                            },
                            "costCenterNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "costCenterType": {
                                "$ref": "#/components/schemas/productionCostCenterType"
                            },
                            "description": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "costCenterWithDistributionPercentage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "costCenterId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "costCenter",
                                    "required": true,
                                    "service": "costCenter"
                                }
                            },
                            "costCenterNumber": {
                                "type": "string"
                            },
                            "distributionPercentage": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "costType": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "crmCallLogForApp": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "callCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "_app_crmCallCategory"
                                }
                            },
                            "callCategoryName": {
                                "type": "string"
                            },
                            "contactId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "creatorUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "customerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "customerNumber": {
                                "type": "string"
                            },
                            "dateFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "dateTo": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "description": {
                                "type": "string"
                            },
                            "eventCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "_app_crmEventCategory"
                                }
                            },
                            "eventCategoryName": {
                                "type": "string"
                            },
                            "inOut": {
                                "type": "string"
                            },
                            "leadId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "leadNumber": {
                                "type": "string"
                            },
                            "logType": {
                                "$ref": "#/components/schemas/logType"
                            },
                            "opportunityId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "opportunity",
                                    "service": "opportunity"
                                }
                            },
                            "opportunityNumber": {
                                "type": "string"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "supplierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "supplierNumber": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "currency": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "currencySymbol": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "customAttribute": {
                "type": "object",
                "properties": {
                    "attributeDefinitionId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "customAttributeDefinition",
                            "service": "customAttributeDefinition"
                        }
                    },
                    "booleanValue": {
                        "type": "boolean"
                    },
                    "dateValue": {
                        "type": "integer",
                        "format": "timestamp"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "entityReferences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/entityReference"
                        }
                    },
                    "numberValue": {
                        "type": "string",
                        "format": "number"
                    },
                    "selectedValueId": {
                        "type": "string"
                    },
                    "selectedValues": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/onlyId"
                        }
                    },
                    "stringValue": {
                        "type": "string"
                    }
                }
            },
            "customAttributeDefinition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "attributeDescription": {
                                "type": "string"
                            },
                            "attributeEntityType": {
                                "$ref": "#/components/schemas/customAttributeEntityType"
                            },
                            "attributeKey": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "attributeLabels": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/customAttributeDefinitionLabel"
                                }
                            },
                            "attributeType": {
                                "$ref": "#/components/schemas/customAttributeType"
                            },
                            "defaultBooleanValue": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "defaultDateValue": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "defaultNumberValue": {
                                "type": "string",
                                "format": "number"
                            },
                            "defaultStringValue": {
                                "type": "string"
                            },
                            "entities": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "groupName": {
                                "type": "string"
                            },
                            "legacyEntities": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "mandatory": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "publicPageTypes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/customAttributePublicPageType"
                                }
                            },
                            "readOnly": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "selectableValues": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/customAttributeDefinitionListValue"
                                }
                            },
                            "showInOverview": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "showOnCreationDialog": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "systemCustomAttribute": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "customAttributeDefinitionLabel": {
                "type": "object",
                "properties": {
                    "labelText": {
                        "type": "string"
                    },
                    "locale": {
                        "type": "string",
                        "x-weclapp": {
                            "required": true
                        }
                    }
                }
            },
            "customAttributeDefinitionListValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "defaultValue": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "value": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "customAttributeEntityType": {
                "type": "string",
                "enum": [
                    "article",
                    "blanketPurchaseOrder",
                    "campaign",
                    "contract",
                    "customer",
                    "incomingGoods",
                    "opportunity",
                    "party",
                    "performanceRecord",
                    "productionOrder",
                    "project",
                    "purchaseInvoice",
                    "purchaseOrder",
                    "quotation",
                    "recurringInvoice",
                    "salesInvoice",
                    "salesOrder",
                    "serialNumber",
                    "shipment",
                    "supplier",
                    "ticket",
                    "user"
                ]
            },
            "customAttributePublicPageType": {
                "type": "string",
                "enum": ["PURCHASE_ORDER_REQUEST", "QUOTATION"]
            },
            "customAttributeType": {
                "type": "string",
                "enum": ["BOOLEAN", "DATE", "DECIMAL", "ENTITY", "INTEGER", "LARGE_TEXT", "LIST", "MULTISELECT_LIST", "REFERENCE", "STRING", "URL"]
            },
            "customValue": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "customer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/customerOrLead"
                    }, {
                        "type": "object",
                        "properties": {
                            "amountInsured": {
                                "type": "string",
                                "format": "number"
                            },
                            "bankAccounts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/partyBankAccount"
                                }
                            },
                            "blockNotice": {
                                "type": "string"
                            },
                            "blocked": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "commissionSalesPartners": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/commissionSalesPartner"
                                }
                            },
                            "creditLimit": {
                                "type": "string",
                                "format": "number"
                            },
                            "customerNumber": {
                                "type": "string"
                            },
                            "customerRatingId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "partyRating"
                                }
                            },
                            "customerRatingName": {
                                "type": "string"
                            },
                            "customerSupplierNumber": {
                                "type": "string"
                            },
                            "customerTopics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entity"
                                }
                            },
                            "defaultHeaderDiscount": {
                                "type": "string",
                                "format": "number"
                            },
                            "defaultHeaderSurcharge": {
                                "type": "string",
                                "format": "number"
                            },
                            "deliveryBlock": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "insolvent": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "insured": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "invoiceBlock": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "invoiceRecipientId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "leadSourceId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "leadSource"
                                }
                            },
                            "leadSourceName": {
                                "type": "string"
                            },
                            "lossDescription": {
                                "type": "string"
                            },
                            "lossReasonId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "customerLeadLossReason"
                                }
                            },
                            "lossReasonName": {
                                "type": "string"
                            },
                            "nonStandardTaxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "oldCustomerNumber": {
                                "type": "string"
                            },
                            "optIn": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInLetter": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInPhone": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInSms": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "referenceNumber": {
                                "type": "string"
                            },
                            "responsibleUserFixed": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "salesPartner": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "salesPartnerDefaultCommissionFix": {
                                "type": "string",
                                "format": "number"
                            },
                            "salesPartnerDefaultCommissionPercentage": {
                                "type": "string",
                                "format": "number"
                            },
                            "salesPartnerDefaultCommissionType": {
                                "$ref": "#/components/schemas/commissionType"
                            },
                            "salesStageId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesStage",
                                    "service": "salesStage"
                                }
                            },
                            "salesStageName": {
                                "type": "string"
                            },
                            "satisfaction": {
                                "$ref": "#/components/schemas/customerSatisfaction"
                            },
                            "useCustomsTariffNumber": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "customerBusinessType": {
                "type": "string",
                "enum": ["B2B", "B2C", "B2G"]
            },
            "customerOperationalFigures": {
                "type": "object",
                "properties": {
                    "amountOpenItems": {
                        "type": "string",
                        "format": "number"
                    },
                    "amountOverdue": {
                        "type": "string",
                        "format": "number"
                    },
                    "quotationAcceptanceRate": {
                        "type": "string",
                        "format": "number"
                    },
                    "quotationAcceptanceTimeInDays": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "revenueCurrentYear": {
                        "type": "string",
                        "format": "number"
                    },
                    "revenuePreviousYear": {
                        "type": "string",
                        "format": "number"
                    },
                    "salesOrderVolumeCurrentYear": {
                        "type": "string",
                        "format": "number"
                    },
                    "salesOrderVolumePreviousYear": {
                        "type": "string",
                        "format": "number"
                    }
                }
            },
            "customerOrLead": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/partyButNotContact"
                    }, {
                        "type": "object",
                        "properties": {
                            "annualRevenue": {
                                "type": "string",
                                "format": "number"
                            },
                            "companySizeId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "companySize"
                                }
                            },
                            "companySizeName": {
                                "type": "string"
                            },
                            "customerCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "customerCategory"
                                }
                            },
                            "customerCategoryName": {
                                "type": "string"
                            },
                            "parentPartyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "paymentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "paymentMethod",
                                    "service": "paymentMethod"
                                }
                            },
                            "paymentMethodName": {
                                "type": "string"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "responsibleUserUsername": {
                                "type": "string"
                            },
                            "shipmentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentMethod",
                                    "service": "shipmentMethod"
                                }
                            },
                            "shipmentMethodName": {
                                "type": "string"
                            },
                            "termOfPaymentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "termOfPayment",
                                    "service": "termOfPayment"
                                }
                            },
                            "termOfPaymentName": {
                                "type": "string"
                            },
                            "vatRegistrationNumber": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "customerSatisfaction": {
                "type": "string",
                "enum": ["NEUTRAL", "SATISFIED", "UNSATISFIED"]
            },
            "debitCreditIndicator": {
                "type": "string",
                "enum": ["CREDIT", "DEBIT"]
            },
            "desiredInvoiceStatusType": {
                "type": "string",
                "enum": ["BOOKED", "DOCUMENT_CREATED", "NEW", "OPEN_ITEM_CREATED"]
            },
            "distributionChannel": {
                "type": "string",
                "enum": [
                    "GROSS1",
                    "GROSS10",
                    "GROSS100",
                    "GROSS101",
                    "GROSS102",
                    "GROSS103",
                    "GROSS104",
                    "GROSS105",
                    "GROSS106",
                    "GROSS107",
                    "GROSS108",
                    "GROSS109",
                    "GROSS11",
                    "GROSS110",
                    "GROSS111",
                    "GROSS112",
                    "GROSS113",
                    "GROSS114",
                    "GROSS115",
                    "GROSS116",
                    "GROSS117",
                    "GROSS118",
                    "GROSS119",
                    "GROSS12",
                    "GROSS120",
                    "GROSS121",
                    "GROSS122",
                    "GROSS123",
                    "GROSS124",
                    "GROSS125",
                    "GROSS126",
                    "GROSS127",
                    "GROSS128",
                    "GROSS129",
                    "GROSS13",
                    "GROSS130",
                    "GROSS131",
                    "GROSS132",
                    "GROSS133",
                    "GROSS134",
                    "GROSS135",
                    "GROSS136",
                    "GROSS137",
                    "GROSS138",
                    "GROSS139",
                    "GROSS14",
                    "GROSS140",
                    "GROSS141",
                    "GROSS142",
                    "GROSS143",
                    "GROSS144",
                    "GROSS145",
                    "GROSS146",
                    "GROSS147",
                    "GROSS148",
                    "GROSS149",
                    "GROSS15",
                    "GROSS150",
                    "GROSS151",
                    "GROSS152",
                    "GROSS153",
                    "GROSS154",
                    "GROSS155",
                    "GROSS156",
                    "GROSS157",
                    "GROSS158",
                    "GROSS159",
                    "GROSS16",
                    "GROSS160",
                    "GROSS161",
                    "GROSS162",
                    "GROSS163",
                    "GROSS164",
                    "GROSS165",
                    "GROSS166",
                    "GROSS167",
                    "GROSS168",
                    "GROSS169",
                    "GROSS17",
                    "GROSS170",
                    "GROSS171",
                    "GROSS172",
                    "GROSS173",
                    "GROSS174",
                    "GROSS175",
                    "GROSS176",
                    "GROSS177",
                    "GROSS178",
                    "GROSS179",
                    "GROSS18",
                    "GROSS180",
                    "GROSS181",
                    "GROSS182",
                    "GROSS183",
                    "GROSS184",
                    "GROSS185",
                    "GROSS186",
                    "GROSS187",
                    "GROSS188",
                    "GROSS189",
                    "GROSS19",
                    "GROSS190",
                    "GROSS191",
                    "GROSS192",
                    "GROSS193",
                    "GROSS194",
                    "GROSS195",
                    "GROSS196",
                    "GROSS197",
                    "GROSS198",
                    "GROSS199",
                    "GROSS2",
                    "GROSS20",
                    "GROSS200",
                    "GROSS201",
                    "GROSS202",
                    "GROSS203",
                    "GROSS204",
                    "GROSS205",
                    "GROSS206",
                    "GROSS207",
                    "GROSS208",
                    "GROSS209",
                    "GROSS21",
                    "GROSS210",
                    "GROSS211",
                    "GROSS212",
                    "GROSS213",
                    "GROSS214",
                    "GROSS215",
                    "GROSS216",
                    "GROSS217",
                    "GROSS218",
                    "GROSS219",
                    "GROSS22",
                    "GROSS220",
                    "GROSS221",
                    "GROSS222",
                    "GROSS223",
                    "GROSS224",
                    "GROSS225",
                    "GROSS226",
                    "GROSS227",
                    "GROSS228",
                    "GROSS229",
                    "GROSS23",
                    "GROSS230",
                    "GROSS231",
                    "GROSS232",
                    "GROSS233",
                    "GROSS234",
                    "GROSS235",
                    "GROSS236",
                    "GROSS237",
                    "GROSS238",
                    "GROSS239",
                    "GROSS24",
                    "GROSS240",
                    "GROSS241",
                    "GROSS242",
                    "GROSS243",
                    "GROSS244",
                    "GROSS245",
                    "GROSS246",
                    "GROSS247",
                    "GROSS248",
                    "GROSS249",
                    "GROSS25",
                    "GROSS250",
                    "GROSS251",
                    "GROSS252",
                    "GROSS253",
                    "GROSS254",
                    "GROSS255",
                    "GROSS256",
                    "GROSS257",
                    "GROSS258",
                    "GROSS259",
                    "GROSS26",
                    "GROSS260",
                    "GROSS261",
                    "GROSS262",
                    "GROSS263",
                    "GROSS264",
                    "GROSS265",
                    "GROSS266",
                    "GROSS267",
                    "GROSS268",
                    "GROSS269",
                    "GROSS27",
                    "GROSS270",
                    "GROSS271",
                    "GROSS272",
                    "GROSS273",
                    "GROSS274",
                    "GROSS275",
                    "GROSS276",
                    "GROSS277",
                    "GROSS278",
                    "GROSS279",
                    "GROSS28",
                    "GROSS280",
                    "GROSS281",
                    "GROSS282",
                    "GROSS283",
                    "GROSS284",
                    "GROSS285",
                    "GROSS286",
                    "GROSS287",
                    "GROSS288",
                    "GROSS289",
                    "GROSS29",
                    "GROSS290",
                    "GROSS291",
                    "GROSS292",
                    "GROSS293",
                    "GROSS294",
                    "GROSS295",
                    "GROSS296",
                    "GROSS297",
                    "GROSS298",
                    "GROSS299",
                    "GROSS3",
                    "GROSS30",
                    "GROSS300",
                    "GROSS31",
                    "GROSS32",
                    "GROSS33",
                    "GROSS34",
                    "GROSS35",
                    "GROSS36",
                    "GROSS37",
                    "GROSS38",
                    "GROSS39",
                    "GROSS4",
                    "GROSS40",
                    "GROSS41",
                    "GROSS42",
                    "GROSS43",
                    "GROSS44",
                    "GROSS45",
                    "GROSS46",
                    "GROSS47",
                    "GROSS48",
                    "GROSS49",
                    "GROSS5",
                    "GROSS50",
                    "GROSS51",
                    "GROSS52",
                    "GROSS53",
                    "GROSS54",
                    "GROSS55",
                    "GROSS56",
                    "GROSS57",
                    "GROSS58",
                    "GROSS59",
                    "GROSS6",
                    "GROSS60",
                    "GROSS61",
                    "GROSS62",
                    "GROSS63",
                    "GROSS64",
                    "GROSS65",
                    "GROSS66",
                    "GROSS67",
                    "GROSS68",
                    "GROSS69",
                    "GROSS7",
                    "GROSS70",
                    "GROSS71",
                    "GROSS72",
                    "GROSS73",
                    "GROSS74",
                    "GROSS75",
                    "GROSS76",
                    "GROSS77",
                    "GROSS78",
                    "GROSS79",
                    "GROSS8",
                    "GROSS80",
                    "GROSS81",
                    "GROSS82",
                    "GROSS83",
                    "GROSS84",
                    "GROSS85",
                    "GROSS86",
                    "GROSS87",
                    "GROSS88",
                    "GROSS89",
                    "GROSS9",
                    "GROSS90",
                    "GROSS91",
                    "GROSS92",
                    "GROSS93",
                    "GROSS94",
                    "GROSS95",
                    "GROSS96",
                    "GROSS97",
                    "GROSS98",
                    "GROSS99",
                    "NET1",
                    "NET10",
                    "NET100",
                    "NET101",
                    "NET102",
                    "NET103",
                    "NET104",
                    "NET105",
                    "NET106",
                    "NET107",
                    "NET108",
                    "NET109",
                    "NET11",
                    "NET110",
                    "NET111",
                    "NET112",
                    "NET113",
                    "NET114",
                    "NET115",
                    "NET116",
                    "NET117",
                    "NET118",
                    "NET119",
                    "NET12",
                    "NET120",
                    "NET121",
                    "NET122",
                    "NET123",
                    "NET124",
                    "NET125",
                    "NET126",
                    "NET127",
                    "NET128",
                    "NET129",
                    "NET13",
                    "NET130",
                    "NET131",
                    "NET132",
                    "NET133",
                    "NET134",
                    "NET135",
                    "NET136",
                    "NET137",
                    "NET138",
                    "NET139",
                    "NET14",
                    "NET140",
                    "NET141",
                    "NET142",
                    "NET143",
                    "NET144",
                    "NET145",
                    "NET146",
                    "NET147",
                    "NET148",
                    "NET149",
                    "NET15",
                    "NET150",
                    "NET151",
                    "NET152",
                    "NET153",
                    "NET154",
                    "NET155",
                    "NET156",
                    "NET157",
                    "NET158",
                    "NET159",
                    "NET16",
                    "NET160",
                    "NET161",
                    "NET162",
                    "NET163",
                    "NET164",
                    "NET165",
                    "NET166",
                    "NET167",
                    "NET168",
                    "NET169",
                    "NET17",
                    "NET170",
                    "NET171",
                    "NET172",
                    "NET173",
                    "NET174",
                    "NET175",
                    "NET176",
                    "NET177",
                    "NET178",
                    "NET179",
                    "NET18",
                    "NET180",
                    "NET181",
                    "NET182",
                    "NET183",
                    "NET184",
                    "NET185",
                    "NET186",
                    "NET187",
                    "NET188",
                    "NET189",
                    "NET19",
                    "NET190",
                    "NET191",
                    "NET192",
                    "NET193",
                    "NET194",
                    "NET195",
                    "NET196",
                    "NET197",
                    "NET198",
                    "NET199",
                    "NET2",
                    "NET20",
                    "NET200",
                    "NET201",
                    "NET202",
                    "NET203",
                    "NET204",
                    "NET205",
                    "NET206",
                    "NET207",
                    "NET208",
                    "NET209",
                    "NET21",
                    "NET210",
                    "NET211",
                    "NET212",
                    "NET213",
                    "NET214",
                    "NET215",
                    "NET216",
                    "NET217",
                    "NET218",
                    "NET219",
                    "NET22",
                    "NET220",
                    "NET221",
                    "NET222",
                    "NET223",
                    "NET224",
                    "NET225",
                    "NET226",
                    "NET227",
                    "NET228",
                    "NET229",
                    "NET23",
                    "NET230",
                    "NET231",
                    "NET232",
                    "NET233",
                    "NET234",
                    "NET235",
                    "NET236",
                    "NET237",
                    "NET238",
                    "NET239",
                    "NET24",
                    "NET240",
                    "NET241",
                    "NET242",
                    "NET243",
                    "NET244",
                    "NET245",
                    "NET246",
                    "NET247",
                    "NET248",
                    "NET249",
                    "NET25",
                    "NET250",
                    "NET251",
                    "NET252",
                    "NET253",
                    "NET254",
                    "NET255",
                    "NET256",
                    "NET257",
                    "NET258",
                    "NET259",
                    "NET26",
                    "NET260",
                    "NET261",
                    "NET262",
                    "NET263",
                    "NET264",
                    "NET265",
                    "NET266",
                    "NET267",
                    "NET268",
                    "NET269",
                    "NET27",
                    "NET270",
                    "NET271",
                    "NET272",
                    "NET273",
                    "NET274",
                    "NET275",
                    "NET276",
                    "NET277",
                    "NET278",
                    "NET279",
                    "NET28",
                    "NET280",
                    "NET281",
                    "NET282",
                    "NET283",
                    "NET284",
                    "NET285",
                    "NET286",
                    "NET287",
                    "NET288",
                    "NET289",
                    "NET29",
                    "NET290",
                    "NET291",
                    "NET292",
                    "NET293",
                    "NET294",
                    "NET295",
                    "NET296",
                    "NET297",
                    "NET298",
                    "NET299",
                    "NET3",
                    "NET30",
                    "NET300",
                    "NET31",
                    "NET32",
                    "NET33",
                    "NET34",
                    "NET35",
                    "NET36",
                    "NET37",
                    "NET38",
                    "NET39",
                    "NET4",
                    "NET40",
                    "NET41",
                    "NET42",
                    "NET43",
                    "NET44",
                    "NET45",
                    "NET46",
                    "NET47",
                    "NET48",
                    "NET49",
                    "NET5",
                    "NET50",
                    "NET51",
                    "NET52",
                    "NET53",
                    "NET54",
                    "NET55",
                    "NET56",
                    "NET57",
                    "NET58",
                    "NET59",
                    "NET6",
                    "NET60",
                    "NET61",
                    "NET62",
                    "NET63",
                    "NET64",
                    "NET65",
                    "NET66",
                    "NET67",
                    "NET68",
                    "NET69",
                    "NET7",
                    "NET70",
                    "NET71",
                    "NET72",
                    "NET73",
                    "NET74",
                    "NET75",
                    "NET76",
                    "NET77",
                    "NET78",
                    "NET79",
                    "NET8",
                    "NET80",
                    "NET81",
                    "NET82",
                    "NET83",
                    "NET84",
                    "NET85",
                    "NET86",
                    "NET87",
                    "NET88",
                    "NET89",
                    "NET9",
                    "NET90",
                    "NET91",
                    "NET92",
                    "NET93",
                    "NET94",
                    "NET95",
                    "NET96",
                    "NET97",
                    "NET98",
                    "NET99"
                ]
            },
            "document": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "versions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/documentVersion"
                                }
                            }
                        }
                    }
                ]
            },
            "documentVersion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "comment": {
                                "type": "string"
                            },
                            "documentVersion": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ecommerceOrder": {
                "type": "object",
                "properties": {
                    "ecommerceId": {
                        "type": "string",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "externalConnectionId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "externalConnection",
                            "required": true,
                            "service": "externalConnection"
                        }
                    }
                }
            },
            "emailAddresses": {
                "type": "object",
                "properties": {
                    "bccAddresses": {
                        "type": "string"
                    },
                    "ccAddresses": {
                        "type": "string"
                    },
                    "toAddresses": {
                        "type": "string"
                    }
                }
            },
            "entity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/onlyId"
                    }, {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "entityReference": {
                "type": "object",
                "properties": {
                    "entityId": {
                        "type": "string"
                    },
                    "entityName": {
                        "type": "string"
                    }
                }
            },
            "eventInvitationStatus": {
                "type": "string",
                "enum": ["ACCEPT", "CANCEL", "DECLINE", "INVITATION", "TENTATIVE", "UNDEFINED"]
            },
            "eventRight": {
                "type": "string",
                "enum": [
                    "CAN_MODIFY_EVERYTHING",
                    "CAN_MODIFY_EVERYTHING_BUT_NOT_PARTICIPIENT_LIST",
                    "CAN_MODIFY_ONLY_PARTICIPIENT_LIST",
                    "CAN_NOT_MODIFY_ANYTHING"
                ]
            },
            "externalConnection": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "connectionType": {
                                "$ref": "#/components/schemas/externalConnectionType"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "externalConnectionType": {
                "type": "string",
                "enum": [
                    "AMAZON",
                    "CLEVERREACH",
                    "DATEV_CONNECT_ONLINE_PROD",
                    "DATEV_CONNECT_ONLINE_STAGING",
                    "DHL",
                    "EBAY",
                    "FIGO_REG_SHIELD_PROD",
                    "FIGO_REG_SHIELD_STAGING",
                    "FINTEC_SYSTEMS",
                    "GOOGLEV3",
                    "ITSCOPE",
                    "JIRA",
                    "MAGENTO",
                    "MAGENTO2",
                    "MAILCHIMP",
                    "MAPBOX",
                    "MOLLIE_PROD",
                    "MOLLIE_STAGING",
                    "OPEN_ID_CONNECT",
                    "RAKUTEN",
                    "REAL",
                    "SENDINBLUE",
                    "SHIPCLOUD",
                    "SHOPIFY",
                    "SHOPWARE",
                    "SHOPWARE6",
                    "STRIPE_PROD",
                    "STRIPE_STAGING",
                    "SYNAXON",
                    "TEAMVIEWER",
                    "VERSACOMMERCE",
                    "WECLAPP2WECLAPP",
                    "WOOCOMMERCE",
                    "XTCOMMERCE",
                    "ZENDESK"
                ]
            },
            "fastProductionBookingResult": {
                "type": "object",
                "properties": {
                    "message": {
                        "$ref": "#/components/schemas/fastProductionBookingResultMessage"
                    },
                    "success": {
                        "type": "boolean"
                    }
                }
            },
            "fastProductionBookingResultMessage": {
                "type": "string",
                "enum": ["INVALID_ORDER", "INVALID_ORDER_NUMBER", "INVALID_QUANTITY", "SUCCESS"]
            },
            "followupBusyState": {
                "type": "string",
                "enum": ["BUSY", "FREE", "OUT_OF_OFFICE", "TENTATIVE"]
            },
            "fulfillmentProvider": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "fulfillmentProviderType": {
                                "$ref": "#/components/schemas/fulfillmentProviderType"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            }
                        }
                    }
                ]
            },
            "fulfillmentProviderType": {
                "type": "string",
                "enum": ["AMAZON", "EXTERNAL", "INTERNAL"]
            },
            "groupwareContact": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "addressBusiness": {
                                "$ref": "#/components/schemas/groupwareContactAddress"
                            },
                            "addressHome": {
                                "$ref": "#/components/schemas/groupwareContactAddress"
                            },
                            "birthDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "description": {
                                "type": "string"
                            },
                            "emailBusiness": {
                                "type": "string"
                            },
                            "emailHome": {
                                "type": "string"
                            },
                            "fax": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "middleName": {
                                "type": "string"
                            },
                            "mobileBusiness": {
                                "type": "string"
                            },
                            "mobileHome": {
                                "type": "string"
                            },
                            "personCompany": {
                                "type": "string"
                            },
                            "phoneBusiness": {
                                "type": "string"
                            },
                            "phoneHome": {
                                "type": "string"
                            },
                            "salutation": {
                                "$ref": "#/components/schemas/salutation"
                            },
                            "titleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "title"
                                }
                            },
                            "titleName": {
                                "type": "string"
                            },
                            "website": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "groupwareContactAddress": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "city": {
                                "type": "string"
                            },
                            "countryName": {
                                "type": "string"
                            },
                            "postOfficeBoxCity": {
                                "type": "string"
                            },
                            "postOfficeBoxNumber": {
                                "type": "string"
                            },
                            "postOfficeBoxZipCode": {
                                "type": "string"
                            },
                            "state": {
                                "type": "string"
                            },
                            "street1": {
                                "type": "string"
                            },
                            "street2": {
                                "type": "string"
                            },
                            "zipcode": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "headReductionAddition": {
                "type": "object",
                "properties": {
                    "amount": {
                        "type": "string",
                        "format": "number"
                    },
                    "amountInCompanyCurrency": {
                        "type": "string",
                        "format": "number"
                    },
                    "percent": {
                        "type": "string",
                        "format": "number"
                    },
                    "type": {
                        "$ref": "#/components/schemas/reductionAdditionType"
                    }
                }
            },
            "incomingBooking": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleValuationPrice": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "batchNumber": {
                                "type": "string"
                            },
                            "confirmedByUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "confirmedDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "confirmedQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "expirationDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "incomingGoodsItemId": {
                                "type": "string"
                            },
                            "levelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "required": true,
                                    "service": "warehouseLevel"
                                }
                            },
                            "quantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "serialNumbers": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "incomingGoods": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseShipment"
                    }, {
                        "type": "object",
                        "properties": {
                            "customerDeliveryAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "customerInvoiceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "deliveryNoteNumber": {
                                "type": "string"
                            },
                            "incomingGoodsItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/incomingGoodsItem"
                                }
                            },
                            "incomingGoodsNumber": {
                                "type": "string"
                            },
                            "incomingGoodsType": {
                                "$ref": "#/components/schemas/shipmentInType"
                            },
                            "invoiceRecipientId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "purchaseOrderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "purchaseOrder",
                                    "service": "purchaseOrder"
                                }
                            },
                            "purchaseOrderNumber": {
                                "type": "string"
                            },
                            "purchaseOrders": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "relatedShipmentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipment",
                                    "service": "shipment"
                                }
                            },
                            "returnAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "senderCustomerNumber": {
                                "type": "string"
                            },
                            "senderPartyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "senderSupplierNumber": {
                                "type": "string"
                            },
                            "sourceWarehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            },
                            "sourceWarehouseName": {
                                "type": "string"
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            },
                            "warehouseName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "incomingGoodsItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItem"
                    }, {
                        "type": "object",
                        "properties": {
                            "purchaseOrderItemId": {
                                "type": "string"
                            },
                            "returnAssessmentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentReturnDescription",
                                    "service": "shipmentReturnAssessment"
                                }
                            },
                            "returnAssessmentName": {
                                "type": "string"
                            },
                            "returnDescription": {
                                "type": "string"
                            },
                            "returnErrorId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentReturnDescription",
                                    "service": "shipmentReturnError"
                                }
                            },
                            "returnErrorName": {
                                "type": "string"
                            },
                            "returnReasonId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentReturnDescription",
                                    "service": "shipmentReturnReason"
                                }
                            },
                            "returnReasonName": {
                                "type": "string"
                            },
                            "returnRectificationId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentReturnDescription",
                                    "service": "shipmentReturnRectification"
                                }
                            },
                            "returnRectificationName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "internalShippingCarrier": {
                "type": "string",
                "enum": [
                    "ANGEL_DE",
                    "AUSTRIAN_POST_EMS",
                    "AUSTRIAN_POST_PLUS_INTERNATIONAL",
                    "AUSTRIAN_POST_PREMIUM",
                    "AUSTRIAN_POST_PREMIUM_SELECT",
                    "AUSTRIAN_POST_RETURNS",
                    "AUSTRIAN_POST_STANDARD",
                    "CARGO_INTERNATIONAL_EXPRESS",
                    "CARGO_INTERNATIONAL_STANDARD",
                    "DACHSER",
                    "DEUTSCHE_POST_STANDARD",
                    "DEUTSCHE_POST_WARENPOST",
                    "DEUTSCHE_POST_WARENPOST_SIGNATURE",
                    "DEUTSCHE_POST_WARENPOST_UNTRACKED",
                    "DHL_EUROPAKET",
                    "DHL_EUROPAKET_EV",
                    "DHL_EXPRESS_ONE_DAY",
                    "DHL_EXPRESS_ONE_DAY_EARLY",
                    "DHL_PAKET_CONNECT_EV",
                    "DHL_PAKET_EV",
                    "DHL_PAKET_INTERNATIONAL_EV",
                    "DHL_RETURNS",
                    "DHL_SAME_DAY",
                    "DHL_STANDARD",
                    "DHL_WARENPOST",
                    "DHL_WARENPOST_EV",
                    "DHL_WARENPOST_INTERNATIONAL_EV",
                    "DPD_EXPRESS_ONE_DAY",
                    "DPD_EXPRESS_ONE_DAY_EARLY",
                    "DPD_RETURNS",
                    "DPD_STANDARD",
                    "EKOL",
                    "FEDEX_EXPRESS_ONE_DAY_EARLY",
                    "FEDEX_INTERNATIONAL_ECONOMY",
                    "FEDEX_INTERNATIONAL_PRIORITY",
                    "FEDEX_STANDARD",
                    "GLS_EXPRESS_ONE_DAY",
                    "GLS_PICK_AND_SHIP",
                    "GLS_RETURNS",
                    "GLS_STANDARD",
                    "GO_ONE_DAY",
                    "HERMES_RETURNS",
                    "HERMES_STANDARD",
                    "ILOXX_STANDARD",
                    "LIEFERY_EXPRESS_ONE_DAY",
                    "MGH",
                    "PARCEL_ONE",
                    "SEVEN_SENDERS",
                    "SITTNAK",
                    "SWISS_POST",
                    "TNT_ONE_DAY",
                    "TNT_ONE_DAY_EARLY",
                    "UPS_EXPEDITED",
                    "UPS_EXPRESS_1200",
                    "UPS_EXPRESS_ONE_DAY",
                    "UPS_EXPRESS_ONE_DAY_EARLY",
                    "UPS_RETURNS",
                    "UPS_STANDARD",
                    "ZWECKFORM"
                ]
            },
            "internalTicketStatus": {
                "type": "string",
                "enum": ["CLOSED", "FIXED", "IN_PROGRESS", "UNASSIGNED", "WAITING"]
            },
            "invoiceStatusHistory": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/invoiceStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "invoiceStatusType": {
                "type": "string",
                "enum": [
                    "APPROVED",
                    "BOOKED",
                    "BOOKING_APPROVED",
                    "BOOKING_ERROR",
                    "DOCUMENT_CREATED",
                    "ENTRY_COMPLETED",
                    "INVOICE_CHECKED",
                    "INVOICE_VERIFICATION",
                    "NEW",
                    "QUERY_INVOICE",
                    "SENT",
                    "VOID"
                ]
            },
            "invoicingType": {
                "type": "string",
                "enum": ["EFFORT", "FIXED_PRICE"]
            },
            "lead": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/customerOrLead"
                    }, {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "leadNumber": {
                                "type": "string"
                            },
                            "leadRatingId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "leadRating"
                                }
                            },
                            "leadRatingName": {
                                "type": "string"
                            },
                            "leadSourceId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "leadSource"
                                }
                            },
                            "leadSourceName": {
                                "type": "string"
                            },
                            "leadStatus": {
                                "$ref": "#/components/schemas/leadStatus"
                            },
                            "leadTopics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entity"
                                }
                            },
                            "lossDescription": {
                                "type": "string"
                            },
                            "lossReasonId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "customerLeadLossReason"
                                }
                            },
                            "lossReasonName": {
                                "type": "string"
                            },
                            "oldLeadNumber": {
                                "type": "string"
                            },
                            "optIn": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInLetter": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInPhone": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInSms": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "responsibleUserFixed": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "salesStageId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesStage",
                                    "service": "salesStage"
                                }
                            },
                            "salesStageName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "leadStatus": {
                "type": "string",
                "enum": ["CONVERTED", "DISQUALIFIED", "NEW", "PREQUALIFIED", "QUALIFIED"]
            },
            "ledgerAccount": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "automatic": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "balanceSheetItem": {
                                "$ref": "#/components/schemas/balanceSheetItem"
                            },
                            "description": {
                                "type": "string"
                            },
                            "parentAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "parentAccountNumber": {
                                "type": "string"
                            },
                            "taxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "taxName": {
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/ledgerAccountType"
                            }
                        }
                    }
                ]
            },
            "ledgerAccountType": {
                "type": "string",
                "enum": ["CARRY_FORWARD_ACCOUNT", "IMPERSONAL_ACCOUNT", "PERSONAL_ACCOUNT"]
            },
            "logType": {
                "type": "string",
                "enum": ["LOG_CALL", "LOG_EVENT", "LOG_LETTER"]
            },
            "marginCalculationPriceTypeOption": {
                "type": "string",
                "enum": ["ARTICLE_CALCULATION_PRICE", "EMPLOYEE_COST", "MOVING_AVERAGE", "PURCHASE_PRICE_PRODUCTION_COST"]
            },
            "moneyTransaction": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountForCostsOfMonetaryTrafficId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountForCostsOfMonetaryTrafficNumber": {
                                "type": "string"
                            },
                            "accountForDunningFeeId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountForDunningFeeNumber": {
                                "type": "string"
                            },
                            "accountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountNumber": {
                                "type": "string"
                            },
                            "amount": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "amountDiscount": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "cashAccountSheetId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "cashAccountSheet",
                                    "service": "cashAccountSheet"
                                }
                            },
                            "createdById": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "currencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "required": true,
                                    "service": "currency"
                                }
                            },
                            "currencyName": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "effectiveDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "externalRecordNumber": {
                                "type": "string"
                            },
                            "partyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "paymentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "paymentMethod",
                                    "service": "paymentMethod"
                                }
                            },
                            "paymentMethodName": {
                                "type": "string"
                            },
                            "paymentToleranceAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "paymentToleranceAccountNumber": {
                                "type": "string"
                            },
                            "paymentType": {
                                "$ref": "#/components/schemas/paymentType"
                            },
                            "taxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "taxName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "moneyTransactionProcessingStrategy": {
                "type": "string",
                "enum": ["BOOK", "CLEAR", "NONE", "PROCESS"]
            },
            "notification": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "priority": {
                                "$ref": "#/components/schemas/notificationPriority"
                            },
                            "read": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "title": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "notificationPriority": {
                "type": "string",
                "enum": ["CRITICAL", "NORMAL"]
            },
            "offerOutType": {
                "type": "string",
                "enum": ["CONTRACT", "NONE", "PROJECT", "SALES_INVOICE", "SALES_ORDER"]
            },
            "offerStatusType": {
                "type": "string",
                "enum": ["ACCEPTED", "CLOSED", "INQUIRED", "OPEN", "REJECTED"]
            },
            "onlineAccount": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountName": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "accountType": {
                                "$ref": "#/components/schemas/onlineAccountType"
                            },
                            "url": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "onlineAccountType": {
                "type": "string",
                "enum": [
                    "AMAZON",
                    "BLOG",
                    "EBAY",
                    "FACEBOOK",
                    "GOOGLE_DRIVE",
                    "GOOGLE_PLUS",
                    "INSTAGRAM",
                    "LINKEDIN",
                    "OTHER",
                    "PINTEREST",
                    "SKYPE",
                    "SLIDESHARE",
                    "TWITTER",
                    "WIKIPEDIA",
                    "XING",
                    "YELP",
                    "YOUTUBE"
                ]
            },
            "onlyId": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "readOnly": true,
                        "x-weclapp": {
                            "required": true
                        }
                    }
                }
            },
            "openItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "amount": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "amountDiscount": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "amountOpen": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "amountPaid": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "cleared": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "openItemNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "openItemType": {
                                "$ref": "#/components/schemas/openItemType"
                            },
                            "paymentApplications": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/paymentApplication"
                                }
                            },
                            "salesInvoiceId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesInvoice",
                                    "service": "salesInvoice"
                                }
                            }
                        }
                    }
                ]
            },
            "openItemType": {
                "type": "string",
                "enum": [
                    "CREDITOR",
                    "CREDITOR_INVERTED",
                    "CREDIT_NOTE_CREDITOR",
                    "CREDIT_NOTE_CREDITOR_INVERTED",
                    "CREDIT_NOTE_DEBITOR",
                    "CREDIT_NOTE_DEBITOR_INVERTED",
                    "DEBTOR",
                    "DEBTOR_INVERTED"
                ]
            },
            "opportunity": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "contactId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "customerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "required": true,
                                    "service": "party"
                                }
                            },
                            "customerNumber": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "expectedDeliveryDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "expectedSignatureDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "hotLead": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "nextCallDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "opportunityNumber": {
                                "type": "string"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "responsibleUserUsername": {
                                "type": "string"
                            },
                            "revenue": {
                                "type": "string",
                                "format": "number"
                            },
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "salesProbability": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "salesStageHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/salesStageHistory"
                                }
                            },
                            "salesStageId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesStage",
                                    "required": true,
                                    "service": "salesStage"
                                }
                            },
                            "salesStageName": {
                                "type": "string"
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "topics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entity"
                                }
                            },
                            "winLossDescription": {
                                "type": "string"
                            },
                            "winLossReasonId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "opportunityWinLossReason"
                                }
                            },
                            "winLossReasonName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "orderStatusType": {
                "type": "string",
                "enum": ["CANCELLED", "CLOSED", "MANUALLY_CLOSED", "ORDER_CONFIRMATION_PRINTED", "ORDER_ENTRY_IN_PROGRESS"]
            },
            "pMRequirementItemPriority": {
                "type": "string",
                "enum": ["HIGH", "LOW", "MEDIUM"]
            },
            "party": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractParty"
                    }, {
                        "type": "object",
                        "properties": {
                            "bankAccounts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/partyBankAccount"
                                }
                            },
                            "commercialLanguageId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "commercialLanguage",
                                    "service": "commercialLanguage"
                                }
                            },
                            "commissionSalesPartners": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/commissionSalesPartner"
                                }
                            },
                            "companySizeId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "companySize"
                                }
                            },
                            "companySizeName": {
                                "type": "string"
                            },
                            "competitor": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "contacts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "currencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "service": "currency"
                                }
                            },
                            "currencyName": {
                                "type": "string"
                            },
                            "customer": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "customerAmountInsured": {
                                "type": "string",
                                "format": "number"
                            },
                            "customerAnnualRevenue": {
                                "type": "string",
                                "format": "number"
                            },
                            "customerBlockNotice": {
                                "type": "string"
                            },
                            "customerBlocked": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "customerBusinessType": {
                                "$ref": "#/components/schemas/customerBusinessType"
                            },
                            "customerCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "customerCategory"
                                }
                            },
                            "customerCategoryName": {
                                "type": "string"
                            },
                            "customerCreditLimit": {
                                "type": "string",
                                "format": "number"
                            },
                            "customerCurrentSalesStageId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesStage",
                                    "service": "salesStage"
                                }
                            },
                            "customerCurrentSalesStageName": {
                                "type": "string"
                            },
                            "customerDebtorAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "customerDebtorAccountNumber": {
                                "type": "string"
                            },
                            "customerDebtorAccountingCodeId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "personalAccountingCode"
                                }
                            },
                            "customerDefaultHeaderDiscount": {
                                "type": "string",
                                "format": "number"
                            },
                            "customerDefaultHeaderSurcharge": {
                                "type": "string",
                                "format": "number"
                            },
                            "customerDeliveryBlock": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "customerInsolvent": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "customerInsured": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "customerLossDescription": {
                                "type": "string"
                            },
                            "customerLossReasonId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "customerLeadLossReason"
                                }
                            },
                            "customerLossReasonName": {
                                "type": "string"
                            },
                            "customerNonStandardTaxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "customerNumber": {
                                "type": "string"
                            },
                            "customerNumberOld": {
                                "type": "string"
                            },
                            "customerPaymentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "paymentMethod",
                                    "service": "paymentMethod"
                                }
                            },
                            "customerPaymentMethodName": {
                                "type": "string"
                            },
                            "customerSalesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "customerSalesOrderPaymentType": {
                                "$ref": "#/components/schemas/salesOrderPaymentType"
                            },
                            "customerSalesPartner": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "customerSalesPartnerDefaultCommissionFix": {
                                "type": "string",
                                "format": "number"
                            },
                            "customerSalesPartnerDefaultCommissionPercentage": {
                                "type": "string",
                                "format": "number"
                            },
                            "customerSalesPartnerDefaultCommissionType": {
                                "$ref": "#/components/schemas/commissionType"
                            },
                            "customerSalesProbability": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "customerSalesStageHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/salesStageHistory"
                                }
                            },
                            "customerSatisfaction": {
                                "$ref": "#/components/schemas/customerSatisfaction"
                            },
                            "customerShipmentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentMethod",
                                    "service": "shipmentMethod"
                                }
                            },
                            "customerShipmentMethodName": {
                                "type": "string"
                            },
                            "customerSupplierNumber": {
                                "type": "string"
                            },
                            "customerTermOfPaymentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "termOfPayment",
                                    "service": "termOfPayment"
                                }
                            },
                            "customerTermOfPaymentName": {
                                "type": "string"
                            },
                            "customerUseCustomsTariffNumber": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "deliveryEmailAddressesId": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "dunningAddressId": {
                                "type": "string"
                            },
                            "dunningEmailAddressesId": {
                                "type": "string"
                            },
                            "eoriNumber": {
                                "type": "string"
                            },
                            "factoring": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "fixPhone2": {
                                "type": "string"
                            },
                            "fixedResponsibleUser": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "habitualExporter": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "imageId": {
                                "type": "string"
                            },
                            "invoiceBlock": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "invoiceRecipientId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "leadRatingId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "leadRating"
                                }
                            },
                            "leadRatingName": {
                                "type": "string"
                            },
                            "leadSourceId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "leadSource"
                                }
                            },
                            "leadSourceName": {
                                "type": "string"
                            },
                            "leadStatus": {
                                "$ref": "#/components/schemas/leadStatus"
                            },
                            "legalFormId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "legalForm"
                                }
                            },
                            "legalFormName": {
                                "type": "string"
                            },
                            "mobilePhone2": {
                                "type": "string"
                            },
                            "optInEmail": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInLetter": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInPhone": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optInSms": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "parentPartyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "partyEmailAddresses": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/partyEmailAddresses"
                                }
                            },
                            "partyHabitualExporterLettersOfIntent": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/partyHabitualExporterLetterOfIntent"
                                }
                            },
                            "phoneHome": {
                                "type": "string"
                            },
                            "primaryContactId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "purchaseEmailAddressesId": {
                                "type": "string"
                            },
                            "purchaseViaPlafond": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "quotationEmailAddressesId": {
                                "type": "string"
                            },
                            "ratingId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "partyRating"
                                }
                            },
                            "ratingName": {
                                "type": "string"
                            },
                            "referenceNumber": {
                                "type": "string"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "responsibleUserUsername": {
                                "type": "string"
                            },
                            "salesInvoiceEmailAddressesId": {
                                "type": "string"
                            },
                            "salesOrderEmailAddressesId": {
                                "type": "string"
                            },
                            "sectorId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "sector"
                                }
                            },
                            "sectorName": {
                                "type": "string"
                            },
                            "supplier": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "supplierCreditorAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "supplierCreditorAccountNumber": {
                                "type": "string"
                            },
                            "supplierCreditorAccountingCodeId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "personalAccountingCode"
                                }
                            },
                            "supplierCustomerNumberAtSupplier": {
                                "type": "string"
                            },
                            "supplierNonStandardTaxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "supplierNumber": {
                                "type": "string"
                            },
                            "supplierNumberOld": {
                                "type": "string"
                            },
                            "supplierOrderBlock": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "supplierPaymentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "paymentMethod",
                                    "service": "paymentMethod"
                                }
                            },
                            "supplierPaymentMethodName": {
                                "type": "string"
                            },
                            "supplierShipmentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentMethod",
                                    "service": "shipmentMethod"
                                }
                            },
                            "supplierShipmentMethodName": {
                                "type": "string"
                            },
                            "supplierTermOfPaymentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "termOfPayment",
                                    "service": "termOfPayment"
                                }
                            },
                            "supplierTermOfPaymentName": {
                                "type": "string"
                            },
                            "taxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "topics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entity"
                                }
                            },
                            "vatIdentificationNumber": {
                                "type": "string"
                            },
                            "xRechnungLeitwegId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "partyBankAccount": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountHolder": {
                                "type": "string"
                            },
                            "accountNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "bankCode": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "creditInstitute": {
                                "type": "string"
                            },
                            "partyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "required": true,
                                    "service": "party"
                                }
                            },
                            "primary": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "partyButNotContact": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractParty"
                    }, {
                        "type": "object",
                        "properties": {
                            "commercialLanguageId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "commercialLanguage",
                                    "service": "commercialLanguage"
                                }
                            },
                            "contacts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/contact"
                                }
                            },
                            "currencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "service": "currency"
                                }
                            },
                            "currencyName": {
                                "type": "string"
                            },
                            "primaryContactId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "sectorId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "sector"
                                }
                            },
                            "sectorName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "partyEmailAddresses": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "bccAddresses": {
                                "type": "string"
                            },
                            "ccAddresses": {
                                "type": "string"
                            },
                            "toAddresses": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "partyFeature": {
                "type": "string",
                "enum": ["COMPETITOR", "CUSTOMER", "LEAD", "NONE", "SUPPLIER"]
            },
            "partyHabitualExporterLetterOfIntent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "automaticallySuggestInInvoice": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "date": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "fromSupplier": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "invoices": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "numberDeclarer": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "numberSupplier": {
                                "type": "string"
                            },
                            "totalAmount": {
                                "type": "string",
                                "format": "number"
                            },
                            "type": {
                                "$ref": "#/components/schemas/partyHabitualExporterLetterOfIntentType"
                            }
                        }
                    }
                ]
            },
            "partyHabitualExporterLetterOfIntentType": {
                "type": "string",
                "enum": ["MULTIPLE_ACCOUNTING_EVENTS", "SINGLE_ACCOUNTING_EVENT"]
            },
            "partyType": {
                "type": "string",
                "enum": ["ORGANIZATION", "PERSON"]
            },
            "paymentApplication": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "amountApplied": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "amountAppliedOriginCurrency": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "amountCostsOfMonetaryTraffic": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "amountDiscountApplied": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "createdById": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "moneyTransactionId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "moneyTransaction",
                                    "service": "moneyTransaction"
                                }
                            }
                        }
                    }
                ]
            },
            "paymentMethod": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "autoClearingAccountTransaction": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "clearingAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "bankAccount",
                                    "service": "bankAccount"
                                }
                            },
                            "discountPercentage": {
                                "type": "string",
                                "format": "number"
                            },
                            "discountValue": {
                                "type": "string",
                                "format": "number"
                            },
                            "documentText": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "reference": {
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/paymentMethodTypeKey"
                            }
                        }
                    }
                ]
            },
            "paymentMethodTypeKey": {
                "type": "string",
                "enum": ["BANK", "CASH"]
            },
            "paymentStatus": {
                "type": "string",
                "enum": ["CLEARED_WITH_CREDIT_NOTE", "CREDIT_NOTE_CLEARED", "NO_OPEN_ITEM", "OPEN", "PAID", "UNKNOWN"]
            },
            "paymentType": {
                "type": "string",
                "enum": ["DISBURSEMENT", "RECEIPT"]
            },
            "performanceRecord": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "commercialLanguage": {
                                "type": "string"
                            },
                            "commission": {
                                "type": "string"
                            },
                            "customerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "required": true,
                                    "service": "party"
                                }
                            },
                            "customerSignatureDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "description": {
                                "type": "string"
                            },
                            "disableEmailTemplate": {
                                "type": "boolean"
                            },
                            "invoiceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "invoiceRecipientId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "orderNumberAtCustomer": {
                                "type": "string"
                            },
                            "performanceRecordItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/performanceRecordItem"
                                }
                            },
                            "performanceRecordNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "recordAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "recordComment": {
                                "type": "string"
                            },
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "recordFreeText": {
                                "type": "string"
                            },
                            "recordOpening": {
                                "type": "string"
                            },
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            },
                            "salesInvoiceEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "salesOrderId": {
                                "type": "string"
                            },
                            "sentToRecipient": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "servicePeriodFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "servicePeriodTo": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "serviceProviderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "serviceProviderSignatureDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "status": {
                                "$ref": "#/components/schemas/performanceRecordStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/performanceRecordStatusHistory"
                                }
                            }
                        }
                    }
                ]
            },
            "performanceRecordItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "addPageBreakBefore": {
                                "type": "boolean"
                            },
                            "articleId": {
                                "type": "string"
                            },
                            "customAttributes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/customAttribute"
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "descriptionFixed": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "groupName": {
                                "type": "string"
                            },
                            "note": {
                                "type": "string"
                            },
                            "orderItemId": {
                                "type": "string"
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "quantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "servicePeriodFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "servicePeriodTo": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "taskId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "task",
                                    "service": "task"
                                }
                            },
                            "timeRecords": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "title": {
                                "type": "string"
                            },
                            "unitId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "performanceRecordStatusHistory": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/performanceRecordStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string"
                    }
                }
            },
            "performanceRecordStatusType": {
                "type": "string",
                "enum": ["CANCELLED", "DOCUMENT_CREATED", "OPEN"]
            },
            "pmProjectExtraInformation": {
                "type": "object",
                "properties": {
                    "actualEffort": {
                        "type": "string"
                    },
                    "actualEffortByUser": {
                        "type": "string"
                    },
                    "differenceInEffort": {
                        "type": "string"
                    },
                    "differenceInEffortByUser": {
                        "type": "string"
                    },
                    "effortPlanned": {
                        "type": "string"
                    },
                    "effortPlannedForUser": {
                        "type": "string"
                    }
                }
            },
            "pmProjectStatus": {
                "type": "string",
                "enum": ["ABORTED", "DONE", "DRAFT", "HALTED", "OPEN", "STARTED", "WAITING"]
            },
            "pmRequirementItemStatus": {
                "type": "string",
                "enum": ["CLOSED", "IN_PROGRESS", "OPEN"]
            },
            "pmRole": {
                "type": "string",
                "enum": ["MISC", "PL", "SUBPL", "TM"]
            },
            "pmTaskType": {
                "type": "string",
                "enum": ["MILESTONE", "TASK"]
            },
            "priceCalculationParameter": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "articleCategory",
                                    "service": "articleCategory"
                                }
                            },
                            "fixSurcharge": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "fromScale": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "lowerPurchasePriceBound": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "percentSurcharge": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "salesChannel": {
                                "$ref": "#/components/schemas/distributionChannel"
                            }
                        }
                    }
                ]
            },
            "priceConditionType": {
                "type": "string",
                "enum": ["ADDITIONAL_ABS", "ADDITION_PERCENT", "REBATE_PERCENT", "REDUCTION_ABS", "REDUCTION_PERCENT"]
            },
            "priceScaleType": {
                "type": "string",
                "enum": ["SCALE_FROM", "SCALE_TO"]
            },
            "productionCostCenterType": {
                "type": "string",
                "enum": ["DIRECT_COST_CENTER", "INDIRECT_COST_CENTER", "SERVICE_COST_CENTER"]
            },
            "productionOrder": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "actualEndDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "actualQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "actualStartDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "allWithdrawalsConfirmed": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "required": true,
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "assignedPickingUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "assignedPickingUserUpdateDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "assignedPickingUserUsername": {
                                "type": "string"
                            },
                            "pickingInstructions": {
                                "type": "string"
                            },
                            "productionOrderItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/productionOrderItem"
                                }
                            },
                            "productionOrderNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "status": {
                                "$ref": "#/components/schemas/productionOrderStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/productionOrderStatusHistory"
                                }
                            },
                            "targetEndDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "targetQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "targetStartDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "required": true,
                                    "service": "warehouse"
                                }
                            },
                            "warehouseName": {
                                "type": "string"
                            },
                            "withdrawalsComplete": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "productionOrderItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseMinimalRecordItem"
                    }, {
                        "type": "object",
                        "properties": {
                            "actualWithdrawalDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "actualWithdrawalQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "targetWithdrawalDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "targetWithdrawalQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "productionOrderStatusHistory": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/productionOrderStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "productionOrderStatusType": {
                "type": "string",
                "enum": ["CANCELLED", "CLOSED", "DOCUMENTS_PRINTED", "ENTRY_IN_PROGRESS", "INTERRUPTED", "NEW", "STARTED"]
            },
            "project": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "billable": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "customerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "customerNumber": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "projectEndDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "projectNumber": {
                                "type": "string"
                            },
                            "projectStartDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "status": {
                                "$ref": "#/components/schemas/pmProjectStatus"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "teamMembers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/projectTeamMember"
                                }
                            }
                        }
                    }
                ]
            },
            "projectTask": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "allowTimeTracking": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "assignedTeamMemberId": {
                                "type": "string"
                            },
                            "assignedTeamMembers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "effortPlanned": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "endDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "hourlyRate": {
                                "type": "string",
                                "format": "number"
                            },
                            "name": {
                                "type": "string"
                            },
                            "parentProjectTaskId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "projectTask",
                                    "service": "projectTask"
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "priority": {
                                "$ref": "#/components/schemas/pMRequirementItemPriority"
                            },
                            "projectId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "project",
                                    "required": true,
                                    "service": "project"
                                }
                            },
                            "projectNumber": {
                                "type": "string"
                            },
                            "responsibleTeamMemberId": {
                                "type": "string"
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "status": {
                                "$ref": "#/components/schemas/pmRequirementItemStatus"
                            },
                            "type": {
                                "$ref": "#/components/schemas/pmTaskType"
                            }
                        }
                    }
                ]
            },
            "projectTeamMember": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "role": {
                                "$ref": "#/components/schemas/pmRole"
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "userUsername": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "purchaseInvoice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/basePurchaseRecord"
                    }, {
                        "type": "object",
                        "properties": {
                            "costCenterId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "costCenter",
                                    "service": "costCenter"
                                }
                            },
                            "costCenterNumber": {
                                "type": "string"
                            },
                            "dueDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "internalInvoiceNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "invoiceDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "invoiceNumber": {
                                "type": "string"
                            },
                            "paymentStatus": {
                                "$ref": "#/components/schemas/paymentStatus"
                            },
                            "pricingDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "purchaseInvoiceItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseInvoiceItem"
                                }
                            },
                            "purchaseInvoiceType": {
                                "$ref": "#/components/schemas/purchaseInvoiceType"
                            },
                            "purchaseOrders": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "recordAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "senderCountryCode": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#/components/schemas/invoiceStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/invoiceStatusHistory"
                                }
                            },
                            "supplierHabitualExporterLetterOfIntentId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "purchaseInvoiceItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItemWithMoney"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountNumber": {
                                "type": "string"
                            },
                            "costCenterItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/costCenterWithDistributionPercentage"
                                }
                            },
                            "creditedInvoiceItemId": {
                                "type": "string"
                            },
                            "purchaseInvoiceItemRelationship": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseInvoiceItemRelationship"
                                }
                            },
                            "supplierArticleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            }
                        }
                    }
                ]
            },
            "purchaseInvoiceItemRelationship": {
                "type": "object",
                "properties": {
                    "purchaseInvoiceItemId": {
                        "type": "string",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "quantity": {
                        "type": "string",
                        "format": "number",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "shipmentItemId": {
                        "type": "string"
                    },
                    "supplierOrderItemId": {
                        "type": "string"
                    }
                }
            },
            "purchaseInvoiceType": {
                "type": "string",
                "enum": ["CREDIT_NOTE", "STANDARD_INVOICE"]
            },
            "purchaseOrder": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/basePurchaseRecord"
                    }, {
                        "type": "object",
                        "properties": {
                            "deliveryAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "externalPurchaseOrderNumber": {
                                "type": "string"
                            },
                            "invoiceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "orderDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "packageTrackingNumber": {
                                "type": "string"
                            },
                            "packageTrackingUrl": {
                                "type": "string"
                            },
                            "plannedDeliveryDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "purchaseOrderItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseOrderItem"
                                }
                            },
                            "purchaseOrderNumber": {
                                "type": "string"
                            },
                            "purchaseOrderType": {
                                "$ref": "#/components/schemas/supplierOrderType"
                            },
                            "received": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "recordAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "salesOrderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesOrder",
                                    "service": "salesOrder"
                                }
                            },
                            "salesOrderNumber": {
                                "type": "string"
                            },
                            "shipmentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentMethod",
                                    "service": "shipmentMethod"
                                }
                            },
                            "shipmentMethodName": {
                                "type": "string"
                            },
                            "shippingCarrierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shippingCarrier",
                                    "service": "shippingCarrier"
                                }
                            },
                            "status": {
                                "$ref": "#/components/schemas/supplierOrderStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseOrderStatusHistory"
                                }
                            },
                            "supplierHabitualExporterLetterOfIntentId": {
                                "type": "string"
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            },
                            "warehouseName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "purchaseOrderItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItemWithPrintSettings"
                    }, {
                        "type": "object",
                        "properties": {
                            "blanketPurchaseOrderId": {
                                "type": "string"
                            },
                            "blanketPurchaseOrderReleaseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "blanketPurchaseOrder",
                                    "service": "blanketPurchaseOrder"
                                }
                            },
                            "invoicedQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "plannedDeliveryDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "plannedShippingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "receivedQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "supplierArticleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            }
                        }
                    }
                ]
            },
            "purchaseOrderRequest": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecord"
                    }, {
                        "type": "object",
                        "properties": {
                            "confirmationDeadline": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "deliveryAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "invoiceAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "plannedDeliveryDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "purchaseOrderRequestItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseOrderRequestItem"
                                }
                            },
                            "purchaseOrderRequestNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "purchaseOrderRequestOffers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseOrderRequestOffer"
                                }
                            },
                            "purchaseOrderRequestType": {
                                "$ref": "#/components/schemas/purchaseOrderRequestType"
                            },
                            "quotationId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "quotation",
                                    "service": "quotation"
                                }
                            },
                            "quotationNumber": {
                                "type": "string"
                            },
                            "recordAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "responsibleUserUsername": {
                                "type": "string"
                            },
                            "salesOrderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesOrder",
                                    "service": "salesOrder"
                                }
                            },
                            "salesOrderNumber": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#/components/schemas/purchaseOrderRequestStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseOrderRequestStatusHistory"
                                }
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "required": true,
                                    "service": "warehouse"
                                }
                            },
                            "warehouseName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "purchaseOrderRequestItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItem"
                    }, {
                        "type": "object",
                        "properties": {
                            "deleted": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "priceScaleType": {
                                "$ref": "#/components/schemas/priceScaleType"
                            },
                            "priceScaleValues": {
                                "type": "array",
                                "items": {
                                    "type": "string",
                                    "format": "number"
                                }
                            }
                        }
                    }
                ]
            },
            "purchaseOrderRequestOffer": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordWithMoney"
                    }, {
                        "type": "object",
                        "properties": {
                            "endDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "offerDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "plannedDeliveryDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "purchaseOrderRequestOfferItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseOrderRequestOfferItem"
                                }
                            },
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "replyDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "requestDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "status": {
                                "$ref": "#/components/schemas/purchaseOrderRequestSupplierStatusType"
                            },
                            "supplierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "required": true,
                                    "service": "party"
                                }
                            },
                            "supplierNumber": {
                                "type": "string"
                            },
                            "supplierReference": {
                                "type": "string"
                            },
                            "validFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "validTo": {
                                "type": "integer",
                                "format": "timestamp"
                            }
                        }
                    }
                ]
            },
            "purchaseOrderRequestOfferItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItemWithMoney"
                    }, {
                        "type": "object",
                        "properties": {
                            "accepted": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "containerQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "minQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "orderedQuantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "procurementLeadDays": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "purchaseOrderRequestItemId": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "scaleType": {
                                "$ref": "#/components/schemas/priceScaleType"
                            },
                            "scaleValues": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/purchaseOrderRequestOfferItemScaleValue"
                                }
                            },
                            "supplierArticleNumber": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "purchaseOrderRequestOfferItemScaleValue": {
                "type": "object",
                "properties": {
                    "price": {
                        "type": "string",
                        "format": "number"
                    },
                    "scale": {
                        "type": "string",
                        "format": "number"
                    }
                }
            },
            "purchaseOrderRequestStatusHistory": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/purchaseOrderRequestStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "purchaseOrderRequestStatusType": {
                "type": "string",
                "enum": ["CANCELLED", "CLOSED", "DOCUMENT_PRINTED", "NEW", "OFFER_RECEIVED"]
            },
            "purchaseOrderRequestSupplierStatusType": {
                "type": "string",
                "enum": ["ACCEPTED", "DECLINED", "OFFER_RECEIVED", "OPEN", "REQUESTED", "REVISED", "REVISED_REQUEST"]
            },
            "purchaseOrderRequestType": {
                "type": "string",
                "enum": ["BLANKET_ORDER_REQUEST", "DROP_SHIPPING_REQUEST", "PURCHASE_ORDER_REQUEST", "SALES_ORDER_COMMISSION_REQUEST"]
            },
            "purchaseOrderStatusHistory": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/supplierOrderStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "purchaseShippingCostItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseShippingCostItem"
                    }, {
                        "type": "object"
                    }
                ]
            },
            "quantityConversion": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "conversionQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "createdUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "lastEditedUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "oppositeDirection": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "unitId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "unit",
                                    "required": true,
                                    "service": "unit"
                                }
                            }
                        }
                    }
                ]
            },
            "quotation": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseSalesRecordWithAddresses"
                    }, {
                        "type": "object",
                        "properties": {
                            "activeVersion": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "invoiceRecipientId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "opportunityId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "opportunity",
                                    "service": "opportunity"
                                }
                            },
                            "opportunityNumber": {
                                "type": "string"
                            },
                            "quotationDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "quotationItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/quotationItem"
                                }
                            },
                            "quotationNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "quotationType": {
                                "$ref": "#/components/schemas/offerOutType"
                            },
                            "quotationVersion": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "requestDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "salesOrderEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "salesProbability": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "salesStageHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/salesStageHistory"
                                }
                            },
                            "salesStageId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesStage",
                                    "service": "salesStage"
                                }
                            },
                            "salesStageName": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#/components/schemas/offerStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/quotationStatusHistory"
                                }
                            },
                            "validFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "validTo": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            },
                            "warehouseName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "quotationItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseSalesRecordItemWithService"
                    }, {
                        "type": "object",
                        "properties": {
                            "alternative": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "optional": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "quotationStatusHistory": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/offerStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "rating": {
                "type": "string",
                "enum": ["STARS_1", "STARS_2", "STARS_3", "STARS_4", "STARS_5"]
            },
            "reasonOfAbsence": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "abbreviation": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "color": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "ignoreInResourceUtilization": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "recordAddress": {
                "type": "object",
                "properties": {
                    "city": {
                        "type": "string"
                    },
                    "company": {
                        "type": "string"
                    },
                    "company2": {
                        "type": "string"
                    },
                    "countryCode": {
                        "type": "string"
                    },
                    "firstName": {
                        "type": "string"
                    },
                    "globalLocationNumber": {
                        "type": "string"
                    },
                    "lastName": {
                        "type": "string"
                    },
                    "middleName": {
                        "type": "string"
                    },
                    "phoneNumber": {
                        "type": "string"
                    },
                    "postOfficeBoxCity": {
                        "type": "string"
                    },
                    "postOfficeBoxNumber": {
                        "type": "string"
                    },
                    "postOfficeBoxZipCode": {
                        "type": "string"
                    },
                    "salutation": {
                        "$ref": "#/components/schemas/salutation"
                    },
                    "state": {
                        "type": "string"
                    },
                    "street1": {
                        "type": "string"
                    },
                    "street2": {
                        "type": "string"
                    },
                    "title": {
                        "type": "string"
                    },
                    "titleId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "customValue",
                            "service": "title"
                        }
                    },
                    "zipcode": {
                        "type": "string"
                    }
                }
            },
            "recordItemReductionAdditionSource": {
                "type": "string",
                "enum": ["ARTICLE", "ARTICLE_AND_CUSTOMER", "ARTICLE_CATEGORY", "ARTICLE_CATEGORY_AND_CUSTOMER", "MANUAL"]
            },
            "recordItemReductionAdditionType": {
                "type": "string",
                "enum": ["ADDITION_ABSOLUTE", "ADDITION_PERCENT", "REBATE_PERCENT", "REDUCTION_ABSOLUTE", "REDUCTION_PERCENT"]
            },
            "recurringEvent": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "endsOn": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "eventInterval": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "eventOccurrenceCount": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "eventType": {
                                "$ref": "#/components/schemas/recurringEventType"
                            },
                            "repeatOn": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "recurringEventType": {
                "type": "string",
                "enum": ["DAILY", "MONTHLY", "WEEKLY", "YEARLY"]
            },
            "reductionAddition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "type": {
                                "$ref": "#/components/schemas/priceConditionType"
                            },
                            "value": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "reductionAdditionItem": {
                "type": "object",
                "properties": {
                    "position": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "source": {
                        "$ref": "#/components/schemas/recordItemReductionAdditionSource"
                    },
                    "type": {
                        "$ref": "#/components/schemas/recordItemReductionAdditionType"
                    },
                    "value": {
                        "type": "string",
                        "format": "number"
                    }
                }
            },
            "reductionAdditionType": {
                "type": "string",
                "enum": ["ADDITION_PERCENT", "REBATE_PERCENT", "REDUCTION_PERCENT"]
            },
            "releases": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "orderDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "plannedDeliveryDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "purchaseOrderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "purchaseOrder",
                                    "service": "purchaseOrder"
                                }
                            },
                            "releasedQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "reminderSendType": {
                "type": "string",
                "enum": ["MAIL", "NOTIFICATION"]
            },
            "remotePrintJob": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "documentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "printStatus": {
                                "$ref": "#/components/schemas/remotePrintJobStatus"
                            },
                            "printerName": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "quantity": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "weclappOsHardwareId": {
                                "type": "string"
                            },
                            "weclappOsId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "weclappOs",
                                    "required": true,
                                    "service": "weclappOs"
                                }
                            }
                        }
                    }
                ]
            },
            "remotePrintJobStatus": {
                "type": "string",
                "enum": ["DOCUMENT_NOT_FOUND", "ERROR", "NEW", "PRINTED", "SUBMITTED", "UNKNOWN_PRINTER"]
            },
            "salesBillOfMaterialArticleItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractBillOfMaterial"
                    }, {
                        "type": "object"
                    }
                ]
            },
            "salesChannel": {
                "type": "object",
                "properties": {
                    "key": {
                        "$ref": "#/components/schemas/distributionChannel"
                    },
                    "name": {
                        "type": "string"
                    }
                }
            },
            "salesInvoice": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseSalesRecord"
                    }, {
                        "type": "object",
                        "properties": {
                            "cancellationDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "cancellationNumber": {
                                "type": "string"
                            },
                            "commissionSalesPartners": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/commissionSalesPartner"
                                }
                            },
                            "customerHabitualExporterLetterOfIntentId": {
                                "type": "string"
                            },
                            "deliveryAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "deliveryDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "dueDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "invoiceDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "invoiceNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "orderNumberAtCustomer": {
                                "type": "string"
                            },
                            "paid": {
                                "type": "boolean"
                            },
                            "paymentStatus": {
                                "$ref": "#/components/schemas/paymentStatus"
                            },
                            "recordAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "salesInvoiceItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/salesInvoiceItem"
                                }
                            },
                            "salesInvoiceType": {
                                "$ref": "#/components/schemas/salesInvoiceType"
                            },
                            "salesOrderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesOrder",
                                    "service": "salesOrder"
                                }
                            },
                            "salesOrderNumber": {
                                "type": "string"
                            },
                            "salesOrders": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "shippingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "status": {
                                "$ref": "#/components/schemas/invoiceStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/invoiceStatusHistory"
                                }
                            },
                            "vatRegistrationNumber": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "salesInvoiceItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseSalesRecordItemWithCost"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountNumber": {
                                "type": "string"
                            },
                            "costCenterItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/costCenterWithDistributionPercentage"
                                }
                            },
                            "creditedInvoiceItemId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "salesInvoiceType": {
                "type": "string",
                "enum": ["ADVANCE_PAYMENT_INVOICE", "CREDIT_NOTE", "FINAL_INVOICE", "PART_PAYMENT_INVOICE", "PREPAYMENT_INVOICE", "STANDARD_INVOICE"]
            },
            "salesOrder": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseSalesRecordWithAddresses"
                    }, {
                        "type": "object",
                        "properties": {
                            "advancePaymentStatus": {
                                "$ref": "#/components/schemas/advancePaymentStatus"
                            },
                            "cashAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "cashAccount",
                                    "service": "cashAccount"
                                }
                            },
                            "commissionSalesPartners": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/commissionSalesPartner"
                                }
                            },
                            "customerHabitualExporterLetterOfIntentId": {
                                "type": "string"
                            },
                            "defaultShippingReturnCarrierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shippingCarrier",
                                    "service": "shippingCarrier"
                                }
                            },
                            "defaultShippingReturnCarrierName": {
                                "type": "string"
                            },
                            "ecommerceOrder": {
                                "$ref": "#/components/schemas/ecommerceOrder"
                            },
                            "fulfillmentProviderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "fulfillmentProvider",
                                    "service": "fulfillmentProvider"
                                }
                            },
                            "invoiceRecipientId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "invoiced": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "orderDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "orderItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/salesOrderItem"
                                }
                            },
                            "orderNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "orderNumberAtCustomer": {
                                "type": "string"
                            },
                            "paid": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "quotationId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "quotation",
                                    "service": "quotation"
                                }
                            },
                            "quotationNumber": {
                                "type": "string"
                            },
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "salesOrderPaymentType": {
                                "$ref": "#/components/schemas/salesOrderPaymentType"
                            },
                            "shipped": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "shippingLabelsCount": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "status": {
                                "$ref": "#/components/schemas/orderStatusType"
                            },
                            "statusHistory": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/salesOrderStatusHistory"
                                }
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            },
                            "warehouseName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "salesOrderItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseSalesRecordItemWithService"
                    }, {
                        "type": "object",
                        "properties": {
                            "ecommerceOrderItemId": {
                                "type": "string"
                            },
                            "invoicedQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "plannedShippingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "shipped": {
                                "type": "boolean"
                            },
                            "shippedQuantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "withdrawalBatchNumber": {
                                "type": "string"
                            },
                            "withdrawalSerialNumbers": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                },
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "withdrawalWarehouseLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "service": "warehouseLevel"
                                }
                            }
                        }
                    }
                ]
            },
            "salesOrderPaymentType": {
                "type": "string",
                "enum": ["ADVANCE_PAYMENT", "COUNTER_SALES", "PART_PAYMENT", "PREPAYMENT", "STANDARD"]
            },
            "salesOrderStatusHistory": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/orderStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "salesPipeline": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "salesChannels": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/distributionChannel"
                                }
                            },
                            "salesStages": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entity"
                                }
                            }
                        }
                    }
                ]
            },
            "salesShippingCostItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseShippingCostItem"
                    }, {
                        "type": "object",
                        "properties": {
                            "manualUnitCost": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "unitCost": {
                                "type": "string",
                                "format": "number"
                            },
                            "unitCostInCompanyCurrency": {
                                "type": "string",
                                "format": "number"
                            }
                        }
                    }
                ]
            },
            "salesStage": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "probability": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "salesStageHistory": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "salesStageId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesStage",
                                    "required": true,
                                    "service": "salesStage"
                                }
                            },
                            "salesStageName": {
                                "type": "string"
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            }
                        }
                    }
                ]
            },
            "salutation": {
                "type": "string",
                "enum": ["COMPANY", "FAMILY", "MR", "MRS", "NO_SALUTATION"]
            },
            "searchResult": {
                "type": "object",
                "properties": {
                    "entity": {
                        "$ref": "#/components/schemas/abstractEntity"
                    },
                    "entityId": {
                        "type": "string"
                    },
                    "entityName": {
                        "type": "string"
                    },
                    "matches": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                }
            },
            "searchResults": {
                "type": "object",
                "properties": {
                    "items": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/searchResult"
                        }
                    },
                    "originalResultCount": {
                        "type": "integer",
                        "format": "int64"
                    }
                }
            },
            "sepaDirectDebitMandate": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "bankAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "bankAccount",
                                    "service": "bankAccount"
                                }
                            },
                            "cancellationDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "description": {
                                "type": "string"
                            },
                            "firstDebit": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "mandateReference": {
                                "type": "string"
                            },
                            "partyBankAccountId": {
                                "type": "string"
                            },
                            "runtime": {
                                "$ref": "#/components/schemas/sepaDirectDebitRuntime"
                            },
                            "signatureDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "type": {
                                "$ref": "#/components/schemas/sepaDirectDebitType"
                            }
                        }
                    }
                ]
            },
            "sepaDirectDebitRuntime": {
                "type": "string",
                "enum": ["ONE_OFF_MANDATE", "RECURRING_MANDATE"]
            },
            "sepaDirectDebitType": {
                "type": "string",
                "enum": ["B2B", "CORE"]
            },
            "serialNumber": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "required": true,
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "serialNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "serialNumberSuggestion": {
                "type": "object",
                "properties": {
                    "articleId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "article",
                            "service": "article"
                        }
                    },
                    "batchNumber": {
                        "type": "string"
                    },
                    "serialNumber": {
                        "type": "string"
                    },
                    "warehouseLevelId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "warehouseLevel",
                            "service": "warehouseLevel"
                        }
                    }
                }
            },
            "shipment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseShipment"
                    }, {
                        "type": "object",
                        "properties": {
                            "additionalDeliveryInformation": {
                                "type": "string"
                            },
                            "allWithdrawalsConfirmed": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "assignedPickingUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "assignedPickingUserUpdateDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "assignedPickingUserUsername": {
                                "type": "string"
                            },
                            "customerPurchaseOrderNumber": {
                                "type": "string"
                            },
                            "declaredValueAmount": {
                                "type": "string",
                                "format": "number"
                            },
                            "declaredValueAmountCurrencyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "currency",
                                    "service": "currency"
                                }
                            },
                            "declaredValueAmountCurrencyName": {
                                "type": "string"
                            },
                            "deliveryDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "destinationWarehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            },
                            "destinationWarehouseLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "service": "warehouseLevel"
                                }
                            },
                            "destinationWarehouseName": {
                                "type": "string"
                            },
                            "invoiceRecipientId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "packageHeight": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "packageLength": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "packageReferenceNumber": {
                                "type": "string"
                            },
                            "packageReturnTrackingNumber": {
                                "type": "string"
                            },
                            "packageReturnTrackingUrl": {
                                "type": "string"
                            },
                            "packageTrackingNumber": {
                                "type": "string"
                            },
                            "packageTrackingUrl": {
                                "type": "string"
                            },
                            "packageWeight": {
                                "type": "string",
                                "format": "number"
                            },
                            "packageWidth": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "pickingInstructions": {
                                "type": "string"
                            },
                            "purchaseOrders": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "recipientCustomerNumber": {
                                "type": "string"
                            },
                            "recipientPartyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "recipientSupplierNumber": {
                                "type": "string"
                            },
                            "recordEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "salesInvoiceEmailAddresses": {
                                "$ref": "#/components/schemas/emailAddresses"
                            },
                            "shipmentItems": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/shipmentItem"
                                }
                            },
                            "shipmentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentMethod",
                                    "service": "shipmentMethod"
                                }
                            },
                            "shipmentMethodName": {
                                "type": "string"
                            },
                            "shipmentNumber": {
                                "type": "string"
                            },
                            "shipmentType": {
                                "$ref": "#/components/schemas/shipmentOutType"
                            },
                            "shippedFromAddress": {
                                "$ref": "#/components/schemas/recordAddress"
                            },
                            "shippingCarrierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shippingCarrier",
                                    "service": "shippingCarrier"
                                }
                            },
                            "shippingCarrierName": {
                                "type": "string"
                            },
                            "shippingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "shippingLabelsCount": {
                                "type": "integer",
                                "format": "int32"
                            },
                            "shippingReturnCarrierId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shippingCarrier",
                                    "service": "shippingCarrier"
                                }
                            },
                            "shippingReturnCarrierName": {
                                "type": "string"
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            },
                            "warehouseName": {
                                "type": "string"
                            },
                            "withdrawalsComplete": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "shipmentInType": {
                "type": "string",
                "enum": ["CUSTOMER_RETURN", "INTERNAL", "STANDARD", "SUPPLIER_COMPENSATION"]
            },
            "shipmentItem": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/baseRecordItem"
                    }, {
                        "type": "object",
                        "properties": {
                            "addPageBreakBefore": {
                                "type": "boolean"
                            },
                            "freeTextItem": {
                                "type": "boolean"
                            },
                            "groupName": {
                                "type": "string"
                            },
                            "returnAssessmentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentReturnDescription",
                                    "service": "shipmentReturnAssessment"
                                }
                            },
                            "returnAssessmentName": {
                                "type": "string"
                            },
                            "returnDescription": {
                                "type": "string"
                            },
                            "returnErrorId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentReturnDescription",
                                    "service": "shipmentReturnError"
                                }
                            },
                            "returnErrorName": {
                                "type": "string"
                            },
                            "returnReasonId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentReturnDescription",
                                    "service": "shipmentReturnReason"
                                }
                            },
                            "returnReasonName": {
                                "type": "string"
                            },
                            "returnRectificationId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentReturnDescription",
                                    "service": "shipmentReturnRectification"
                                }
                            },
                            "returnRectificationName": {
                                "type": "string"
                            },
                            "salesOrderItemId": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "shipmentMethod": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "shipmentOutType": {
                "type": "string",
                "enum": ["CONSIGNMENT", "CONSIGNMENT_RETURN", "CUSTOMER_COMPENSATION", "INTERNAL", "STANDARD", "SUPPLIER_RETURN"]
            },
            "shipmentReturnDescription": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "customerReturn": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "position": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "supplierReturn": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "shipmentStatus": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/shipmentStatusType"
                    },
                    "statusDate": {
                        "type": "integer",
                        "format": "timestamp",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "shipmentStatusType": {
                "type": "string",
                "enum": [
                    "CANCELLED",
                    "DELIVERED",
                    "DELIVERY_NOTE_PRINTED",
                    "INCOMING_CANCELLED",
                    "INCOMING_GOODS_MOVEMENT_PRINTED",
                    "INCOMING_MOVED_INTO_STORE",
                    "INCOMING_SHIPPED",
                    "IN_ROUTE",
                    "NEW",
                    "SHIPPED"
                ]
            },
            "shippingCarrier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "internalShippingCarrier": {
                                "$ref": "#/components/schemas/internalShippingCarrier"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "trackingUrl": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "specialCalculationMode": {
                "type": "string",
                "enum": ["ROUND_SUMS_TO_0_05"]
            },
            "stockMovementType": {
                "type": "string",
                "enum": [
                    "IN",
                    "IN_CUSTOMER_RETURN",
                    "IN_INVENTORY",
                    "IN_PRODUCTION_ORDER",
                    "IN_PURCHASE_ORDER",
                    "IN_SHIPMENT",
                    "IN_SHIPMENT_CANCELLATION",
                    "IN_SHIPMENT_CONSIGNMENT",
                    "IN_SHIPMENT_INTERNAL",
                    "IN_THIRD_PARTY_DEAL",
                    "OUT",
                    "OUT_INVENTORY",
                    "OUT_PRODUCTION_ORDER",
                    "OUT_SALES_ORDER",
                    "OUT_SHIPMENT",
                    "OUT_SHIPMENT_CANCELLATION",
                    "OUT_SHIPMENT_CONSIGNMENT",
                    "OUT_SHIPMENT_INTERNAL",
                    "OUT_THIRD_PARTY_DEAL",
                    "TRANSFER"
                ]
            },
            "storeType": {
                "type": "string",
                "enum": ["CONSIGNMENT", "CONTAINER", "DROP_SHIPPING", "STANDARD"]
            },
            "supplier": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/partyButNotContact"
                    }, {
                        "type": "object",
                        "properties": {
                            "bankAccounts": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/partyBankAccount"
                                }
                            },
                            "customerNumberAtSupplier": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "nonStandardTaxId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "tax",
                                    "service": "tax"
                                }
                            },
                            "orderBlock": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "paymentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "paymentMethod",
                                    "service": "paymentMethod"
                                }
                            },
                            "paymentMethodName": {
                                "type": "string"
                            },
                            "referenceNumber": {
                                "type": "string"
                            },
                            "shipmentMethodId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "shipmentMethod",
                                    "service": "shipmentMethod"
                                }
                            },
                            "shipmentMethodName": {
                                "type": "string"
                            },
                            "supplierNumber": {
                                "type": "string"
                            },
                            "supplierRatingId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "partyRating"
                                }
                            },
                            "supplierRatingName": {
                                "type": "string"
                            },
                            "termOfPaymentId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "termOfPayment",
                                    "service": "termOfPayment"
                                }
                            },
                            "termOfPaymentName": {
                                "type": "string"
                            },
                            "vatRegistrationNumber": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "supplierOrderStatusType": {
                "type": "string",
                "enum": ["CANCELLED", "CLOSED", "CONFIRMED", "NEW", "ORDER_DOCUMENTS_PRINTED", "ORDER_ENTRY_COMPLETED", "ORDER_ENTRY_IN_PROGRESS"]
            },
            "supplierOrderType": {
                "type": "string",
                "enum": ["AUTOMATIC", "BLANKET_PURCHASE_ORDER", "CREDIT", "EXEMPLAR", "NORMAL", "PROJECT", "SALES_ORDER", "TRIANGULAR"]
            },
            "supplySource": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleSupplySourceId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "articleSupplySource",
                                    "required": true,
                                    "service": "articleSupplySource"
                                }
                            }
                        }
                    }
                ]
            },
            "task": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "assignees": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/taskAssignee"
                                }
                            },
                            "creatorUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "dateFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "dateTo": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "description": {
                                "type": "string"
                            },
                            "entityReferences": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entityReference"
                                }
                            },
                            "lastReminderDateForOverdue": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "parentTaskId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "task",
                                    "service": "task"
                                }
                            },
                            "plannedEffort": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "previousTaskId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "task",
                                    "service": "task"
                                }
                            },
                            "subject": {
                                "type": "string"
                            },
                            "taskPriority": {
                                "$ref": "#/components/schemas/taskPriority"
                            },
                            "taskStatus": {
                                "$ref": "#/components/schemas/taskProgressStatus"
                            },
                            "taskTopics": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entity"
                                }
                            },
                            "taskTypes": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entity"
                                }
                            },
                            "taskVisibilityType": {
                                "$ref": "#/components/schemas/taskVisibilityType"
                            },
                            "watchers": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            }
                        }
                    }
                ]
            },
            "taskAssignee": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "plannedEffort": {
                                "type": "integer",
                                "format": "int64"
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "userName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "taskPriority": {
                "type": "string",
                "enum": ["HIGH", "LOW", "MEDIUM"]
            },
            "taskProgressStatus": {
                "type": "string",
                "enum": ["COMPLETED", "DEFERRED", "IN_PROGRESS", "NOT_STARTED"]
            },
            "taskVisibilityType": {
                "type": "string",
                "enum": ["ORGANIZATION", "PRIVATE"]
            },
            "tax": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "accountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "accountNumber": {
                                "type": "string"
                            },
                            "contraAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "contraAccountNumber": {
                                "type": "string"
                            },
                            "defaultDiscountAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "defaultDiscountAccountNumber": {
                                "type": "string"
                            },
                            "defaultNominalAccountId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ledgerAccount",
                                    "service": "ledgerAccount"
                                }
                            },
                            "defaultNominalAccountNumber": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "taxType": {
                                "$ref": "#/components/schemas/taxType"
                            },
                            "taxValue": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "taxGroup": {
                "type": "object",
                "properties": {
                    "finalGrossAmount": {
                        "type": "string",
                        "format": "number"
                    },
                    "finalGrossAmountInCompanyCurrency": {
                        "type": "string",
                        "format": "number"
                    },
                    "finalNetAmount": {
                        "type": "string",
                        "format": "number"
                    },
                    "finalNetAmountInCompanyCurrency": {
                        "type": "string",
                        "format": "number"
                    },
                    "finalVatAmount": {
                        "type": "string",
                        "format": "number"
                    },
                    "finalVatAmountInCompanyCurrency": {
                        "type": "string",
                        "format": "number"
                    },
                    "headReductionAdditions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/headReductionAddition"
                        }
                    },
                    "sumGrossAmount": {
                        "type": "string",
                        "format": "number"
                    },
                    "sumGrossAmountInCompanyCurrency": {
                        "type": "string",
                        "format": "number"
                    },
                    "sumNetAmount": {
                        "type": "string",
                        "format": "number"
                    },
                    "sumNetAmountInCompanyCurrency": {
                        "type": "string",
                        "format": "number"
                    },
                    "taxId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "tax",
                            "service": "tax"
                        }
                    }
                }
            },
            "taxRateType": {
                "type": "string",
                "enum": ["REDUCED", "SLIGHTLY_REDUCED", "STANDARD", "SUPER_REDUCED", "ZERO"]
            },
            "taxType": {
                "type": "string",
                "enum": ["IMPORT_SALES_TAX", "INPUT_VAT", "INPUT_VAT_REVERSED", "TAX_FREE", "VALUE_ADDED_TAX", "VAT_REVERSED"]
            },
            "termOfPayment": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "conditions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/termOfPaymentCondition"
                                }
                            },
                            "description": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string"
                            },
                            "reference": {
                                "type": "string"
                            },
                            "validFrom": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "validTo": {
                                "type": "integer",
                                "format": "timestamp"
                            }
                        }
                    }
                ]
            },
            "termOfPaymentCondition": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "discountPercentage": {
                                "type": "string",
                                "format": "number"
                            },
                            "name": {
                                "type": "string"
                            },
                            "numberOfDays": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "ticket": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "assignedUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "assignedUserUsername": {
                                "type": "string"
                            },
                            "billable": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "ccEmailAddresses": {
                                "type": "string"
                            },
                            "contactId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "contractId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "contract",
                                    "service": "contract"
                                }
                            },
                            "customerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "customerNumber": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "disableEmailTemplates": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "email": {
                                "type": "string"
                            },
                            "entityReferences": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/entityReference"
                                }
                            },
                            "finishedDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "mail2TicketId": {
                                "type": "string"
                            },
                            "mobilePhoneNumber": {
                                "type": "string"
                            },
                            "partyId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "phoneNumber": {
                                "type": "string"
                            },
                            "projectId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "project",
                                    "service": "project"
                                }
                            },
                            "resolvedYourIssue": {
                                "type": "boolean"
                            },
                            "responsibleUserId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            },
                            "responsibleUserUsername": {
                                "type": "string"
                            },
                            "solutionDueDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "subject": {
                                "type": "string"
                            },
                            "tags": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            },
                            "tasks": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "ticketCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ticketCategory",
                                    "service": "ticketCategory"
                                }
                            },
                            "ticketChannelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "required": true,
                                    "service": "ticketChannel"
                                }
                            },
                            "ticketChannelName": {
                                "type": "string"
                            },
                            "ticketNumber": {
                                "type": "string"
                            },
                            "ticketPriorityId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ticketPriority",
                                    "required": true,
                                    "service": "ticketPriority"
                                }
                            },
                            "ticketRating": {
                                "$ref": "#/components/schemas/rating"
                            },
                            "ticketRatingComment": {
                                "type": "string"
                            },
                            "ticketRatingDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "ticketStatusId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ticketStatus",
                                    "required": true,
                                    "service": "ticketStatus"
                                }
                            },
                            "ticketStatusName": {
                                "type": "string"
                            },
                            "ticketTypeId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "ticketType"
                                }
                            },
                            "ticketTypeName": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "ticketCategory": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "parentTicketCategoryId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "service": "user"
                                }
                            }
                        }
                    }
                ]
            },
            "ticketConfiguration": {
                "type": "object",
                "properties": {
                    "allowedContactFeaturesForTickets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/partyFeature"
                        }
                    },
                    "categoryRequired": {
                        "type": "boolean"
                    },
                    "createTimeRecordOnlyInprogress": {
                        "type": "boolean"
                    },
                    "defaultTicketChannelId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "customValue",
                            "service": "ticketChannel"
                        }
                    },
                    "reportProblemChannelId": {
                        "type": "string"
                    },
                    "showCreator": {
                        "type": "boolean"
                    },
                    "showTicketType": {
                        "type": "boolean"
                    },
                    "ticketTypeRequired": {
                        "type": "boolean"
                    }
                }
            },
            "ticketExtraInformation": {
                "type": "object",
                "properties": {
                    "assignmentTime": {
                        "type": "string"
                    },
                    "channel": {
                        "type": "string"
                    },
                    "progressTime": {
                        "type": "string"
                    },
                    "solutionTime": {
                        "type": "string"
                    },
                    "ticketHistory": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ticketProtocol"
                        }
                    }
                }
            },
            "ticketFaq": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "answer": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "question": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "ticketCategories": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "visibility": {
                                "$ref": "#/components/schemas/ticketFaqVisibility"
                            }
                        }
                    }
                ]
            },
            "ticketFaqVisibility": {
                "type": "string",
                "enum": ["INTERNAL", "PUBLIC"]
            },
            "ticketGroupByStatusReport": {
                "type": "object",
                "properties": {
                    "defaultOrder": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "internalTicketStatus": {
                        "$ref": "#/components/schemas/internalTicketStatus"
                    },
                    "ticketCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                }
            },
            "ticketPriority": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32"
                            }
                        }
                    }
                ]
            },
            "ticketProtocol": {
                "type": "object",
                "properties": {
                    "protocolActivity": {
                        "type": "string"
                    },
                    "protocolDate": {
                        "type": "string"
                    },
                    "userActivities": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ticketProtocolActivity"
                        }
                    },
                    "userId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    }
                }
            },
            "ticketProtocolActivity": {
                "type": "object",
                "properties": {
                    "nextValue": {
                        "type": "string"
                    },
                    "previousValue": {
                        "type": "string"
                    },
                    "whatWasChanged": {
                        "type": "string"
                    }
                }
            },
            "ticketStatus": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "color": {
                                "$ref": "#/components/schemas/ticketStatusColor"
                            },
                            "defaultForInternal": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "internalTicketStatus": {
                                "$ref": "#/components/schemas/internalTicketStatus"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "targetStatusId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ticketStatus",
                                    "service": "ticketStatus"
                                }
                            }
                        }
                    }
                ]
            },
            "ticketStatusColor": {
                "type": "string",
                "enum": [
                    "BLUE",
                    "BROWN",
                    "DARK_BLUE",
                    "DARK_GREEN",
                    "DARK_RED",
                    "GREEN",
                    "LIGHT_BLUE",
                    "ORANGE",
                    "PINK",
                    "PURPLE",
                    "RED",
                    "VIOLET",
                    "YELLOW",
                    "YELLOW_GREEN"
                ]
            },
            "timeRecord": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "billable": {
                                "type": "boolean"
                            },
                            "billableDurationSeconds": {
                                "type": "integer",
                                "format": "int64",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "customerId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "party",
                                    "service": "party"
                                }
                            },
                            "customerNumber": {
                                "type": "string"
                            },
                            "description": {
                                "type": "string"
                            },
                            "durationSeconds": {
                                "type": "integer",
                                "format": "int64",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "placeOfServiceId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "customValue",
                                    "service": "placeOfService"
                                }
                            },
                            "projectId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "project",
                                    "service": "project"
                                }
                            },
                            "projectNumber": {
                                "type": "string"
                            },
                            "projectTaskId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "projectTask",
                                    "service": "projectTask"
                                }
                            },
                            "salesInvoiceId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesInvoice",
                                    "service": "salesInvoice"
                                }
                            },
                            "salesOrderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "salesOrder",
                                    "service": "salesOrder"
                                }
                            },
                            "salesOrderNumber": {
                                "type": "string"
                            },
                            "startDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "taskId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "task",
                                    "service": "task"
                                }
                            },
                            "ticketId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "ticket",
                                    "service": "ticket"
                                }
                            },
                            "ticketNumber": {
                                "type": "string"
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "userUsername": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "timeRecordConfiguration": {
                "type": "object",
                "properties": {
                    "bookingOnCustomerAllowed": {
                        "type": "boolean"
                    },
                    "bookingOnLegacyTaskAllowed": {
                        "type": "boolean"
                    },
                    "bookingWithoutTaskAllowed": {
                        "type": "boolean"
                    },
                    "markAsBillableOnCreate": {
                        "type": "boolean"
                    },
                    "overbookingOnProjectAllowed": {
                        "type": "boolean"
                    }
                }
            },
            "transactionDetailType": {
                "type": "string",
                "enum": [
                    "DEFAULT",
                    "DISCOUNT",
                    "DUNNING_FEE",
                    "IMPORT_SALES_TAX",
                    "MONETARY_TRAFFIC",
                    "PAYMENT_TOLERANCE",
                    "REVERSE_CHARGE_TAX",
                    "REVERSE_CHARGE_TAX_CONTRA",
                    "TAX",
                    "TAXATION_ON_PAYMENT",
                    "TAXATION_ON_PAYMENT_CONTRA"
                ]
            },
            "unit": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "user": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "birthDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "email": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "faxNumber": {
                                "type": "string"
                            },
                            "firstName": {
                                "type": "string"
                            },
                            "imageId": {
                                "type": "string"
                            },
                            "lastName": {
                                "type": "string"
                            },
                            "mobilePhoneNumber": {
                                "type": "string"
                            },
                            "phoneNumber": {
                                "type": "string"
                            },
                            "status": {
                                "$ref": "#/components/schemas/baossUserStatus"
                            },
                            "username": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "variantArticle": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "primaryArticleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            },
                            "primaryArticleNumber": {
                                "type": "string"
                            },
                            "variantArticleNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "variants": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/variantArticleVariantWithoutReference"
                                }
                            }
                        }
                    }
                ]
            },
            "variantArticleAttribute": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "attributeOptions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/variantArticleAttributeOption"
                                }
                            },
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "variantArticleAttributeOption": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "variantArticleVariant": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/variantArticleVariantWithoutReference"
                    }, {
                        "type": "object",
                        "properties": {
                            "variantArticleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "variantArticle",
                                    "required": true,
                                    "service": "variantArticle"
                                }
                            },
                            "variantArticleNumber": {
                                "type": "string"
                            }
                        }
                    }
                ]
            },
            "variantArticleVariantWithoutReference": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "attributeOptions": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/onlyId"
                                }
                            },
                            "positionNumber": {
                                "type": "integer",
                                "format": "int32",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "warehouse": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "active": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "defaultLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "service": "warehouseLevel"
                                }
                            },
                            "defaultOutgoingGoodsLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "service": "warehouseLevel"
                                }
                            },
                            "defaultProductionLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "service": "warehouseLevel"
                                }
                            },
                            "defaultReturnsLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "service": "warehouseLevel"
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "warehouseType": {
                                "$ref": "#/components/schemas/storeType"
                            }
                        }
                    }
                ]
            },
            "warehouseLevel": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "barcode": {
                                "type": "string"
                            },
                            "deleted": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "forPicking": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "height": {
                                "type": "string",
                                "format": "number"
                            },
                            "length": {
                                "type": "string",
                                "format": "number"
                            },
                            "name": {
                                "type": "string"
                            },
                            "parentLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "service": "warehouseLevel"
                                }
                            },
                            "stockable": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "service": "warehouse"
                                }
                            },
                            "weight": {
                                "type": "string",
                                "format": "number"
                            },
                            "width": {
                                "type": "string",
                                "format": "number"
                            }
                        }
                    }
                ]
            },
            "warehouseStock": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "required": true,
                                    "service": "article"
                                }
                            },
                            "articleNumber": {
                                "type": "string"
                            },
                            "batchNumber": {
                                "type": "string"
                            },
                            "batchNumberId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "batchNumber",
                                    "service": "batchNumber"
                                }
                            },
                            "quantity": {
                                "type": "string",
                                "format": "number"
                            },
                            "reservations": {
                                "type": "array",
                                "items": {
                                    "$ref": "#/components/schemas/warehouseStockReservation"
                                }
                            },
                            "salesOrderItemId": {
                                "type": "string"
                            },
                            "serialNumber": {
                                "type": "string"
                            },
                            "serialNumberId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "serialNumber",
                                    "service": "serialNumber"
                                }
                            },
                            "warehouseId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouse",
                                    "required": true,
                                    "service": "warehouse"
                                }
                            },
                            "warehouseLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "required": true,
                                    "service": "warehouseLevel"
                                }
                            }
                        }
                    }
                ]
            },
            "warehouseStockMovement": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntityWithCustomAttributes"
                    }, {
                        "type": "object",
                        "properties": {
                            "articleId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "article",
                                    "required": true,
                                    "service": "article"
                                }
                            },
                            "batchNumber": {
                                "type": "string"
                            },
                            "batchNumberId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "batchNumber",
                                    "service": "batchNumber"
                                }
                            },
                            "incomingGoodsItemId": {
                                "type": "string"
                            },
                            "movementNote": {
                                "type": "string"
                            },
                            "movementNumber": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "postingDate": {
                                "type": "integer",
                                "format": "timestamp",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "productionOrderId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "productionOrder",
                                    "service": "productionOrder"
                                }
                            },
                            "quantity": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "salesOrderItemId": {
                                "type": "string"
                            },
                            "serialNumber": {
                                "type": "string"
                            },
                            "serialNumberId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "serialNumber",
                                    "service": "serialNumber"
                                }
                            },
                            "shipmentItemId": {
                                "type": "string"
                            },
                            "stockMovementType": {
                                "$ref": "#/components/schemas/stockMovementType"
                            },
                            "userId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "user",
                                    "required": true,
                                    "service": "user"
                                }
                            },
                            "valuationPrice": {
                                "type": "string",
                                "format": "number",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "warehouseLevelId": {
                                "type": "string",
                                "x-weclapp": {
                                    "entity": "warehouseLevel",
                                    "required": true,
                                    "service": "warehouseLevel"
                                }
                            }
                        }
                    }
                ]
            },
            "warehouseStockReservation": {
                "type": "object",
                "properties": {
                    "productionOrderItemId": {
                        "type": "string"
                    },
                    "reservedQuantity": {
                        "type": "string",
                        "format": "number",
                        "x-weclapp": {
                            "required": true
                        }
                    },
                    "shipmentItemId": {
                        "type": "string"
                    }
                }
            },
            "webhook": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "atCreate": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "atDelete": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "atUpdate": {
                                "type": "boolean",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "deactivatedDate": {
                                "type": "integer",
                                "format": "timestamp"
                            },
                            "entityName": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "errorMessage": {
                                "type": "string"
                            },
                            "requestMethod": {
                                "$ref": "#/components/schemas/webhookRequestMethod"
                            },
                            "url": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            }
                        }
                    }
                ]
            },
            "webhookRequestMethod": {
                "type": "string",
                "enum": ["GET", "POST"]
            },
            "weclappOs": {
                "allOf": [
                    {
                        "$ref": "#/components/schemas/abstractEntity"
                    }, {
                        "type": "object",
                        "properties": {
                            "description": {
                                "type": "string"
                            },
                            "hardwareId": {
                                "type": "string",
                                "x-weclapp": {
                                    "required": true
                                }
                            },
                            "name": {
                                "type": "string"
                            },
                            "printerNames": {
                                "type": "array",
                                "items": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ]
            },
            "withdrawal": {
                "type": "object",
                "properties": {
                    "batchNumber": {
                        "type": "string"
                    },
                    "bookedDate": {
                        "type": "integer",
                        "format": "timestamp"
                    },
                    "confirmedDate": {
                        "type": "integer",
                        "format": "timestamp"
                    },
                    "confirmedQuantity": {
                        "type": "string",
                        "format": "number"
                    },
                    "levelId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "warehouseLevel",
                            "service": "warehouseLevel"
                        }
                    },
                    "pickingUserId": {
                        "type": "string",
                        "x-weclapp": {
                            "entity": "user",
                            "service": "user"
                        }
                    },
                    "productionOrderItemId": {
                        "type": "string"
                    },
                    "serialNumbers": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "shipmentItemId": {
                        "type": "string"
                    },
                    "withdrawalQuantity": {
                        "type": "string",
                        "format": "number"
                    }
                }
            }
        },
        "securitySchemes": {
            "api-token": {
                "type": "apiKey",
                "name": "AuthenticationToken",
                "in": "header"
            }
        }
    }
}