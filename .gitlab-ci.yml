stages:
  - build
  - generate
  - publish

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - when: always

.npm:defaults:
  tags:
    - small
  image: $CI_REGISTRY/weclapp_ops/base_images/node:latest-16-alpine
  cache:
    key: node_modules_cache
    policy: pull
    paths:
      - node_modules/
  before_script:
    - npm install --unsafe-perm --prefer-offline --no-audit
    - npm prune

build:
  extends: .npm:defaults
  stage: build
  artifacts:
    expire_in: 4 weeks
    paths:
      - lib
  script:
    - npm run cli:build

generate:
  extends: .npm:defaults
  stage: generate
  dependencies:
    - build
  artifacts:
    expire_in: 4 weeks
    paths:
      - sdk
  variables:
    NODE_ENV: development
  script:
    - chmod +x ./bin/cli.js
    - ./bin/cli.js tests/openapi.json

publish:
  tags:
    - tiny
  stage: publish
  image: $CI_REGISTRY/weclapp_ops/base_images/node:latest-16-alpine
  rules:
    # Only allow publishing if tag matches semantic versioning (v1.0.0)
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+[.][0-9]+[.][0-9]+$/'
    - when: never
  dependencies:
    - build
  variables:
    GITLAB_AUTH_TOKEN: $CI_JOB_TOKEN
  script: npm publish

publish:snapshot:
  tags:
    - tiny
  stage: publish
  image: $CI_REGISTRY/weclapp_ops/base_images/node:latest-16-alpine
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
      allow_failure: true
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: never
  dependencies:
    - build
  variables:
    GITLAB_AUTH_TOKEN: $CI_JOB_TOKEN
  script: |
    LATEST_TAG=$(git describe --abbrev=0)
    LATEST_TAG_RAW=$(echo "$LATEST_TAG" | sed 's/v//')
    COMMITS_SINCE_LAST_TAG=$(git rev-list "$LATEST_TAG"..HEAD --count)
    VERSION="$LATEST_TAG_RAW-dev.$COMMITS_SINCE_LAST_TAG"
    echo "Publish version '$VERSION'..."
    npm version "$VERSION" --git-tag-version=false
    npm publish
