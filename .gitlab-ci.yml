stages:
  - generate
  - test
  - publish

.npm:defaults:
  tags: ['small']
  image: $CI_REGISTRY/weclapp_ops/base_images/node:latest-lts-alpine
  cache:
    key: node_modules_cache
    policy: pull
    paths:
    - node_modules/
  before_script:
    - npm install --unsafe-perm --prefer-offline --no-audit
    - npm prune

generate:
  extends: .npm:defaults
  stage: generate
  artifacts:
    expire_in: 4 weeks
    paths:
      - sdk
  variables:
    SRC_OPENAPI: "./openapi.json"
    SDK_VERSION: "1.0.0"
    SDK_REPOSITORY: "./sdk"
  script: |
    npm run import:swagger
    npm run gen:start
    npm run sdk:build

test:
  extends: .npm:defaults
  stage: test
  dependencies: [ 'generate' ]
  script: npm run test

lint:
  extends: .npm:defaults
  stage: test
  dependencies: [ 'generate' ]
  script: npm run lint:ts

publish:repository:
  tags: [ 'small' ]
  image: $CI_REGISTRY/weclapp_ops/base_images/docker:stable
  stage: publish
  dependencies: [ 'generate' ]
  variables:
    REPOSITORY_REMOTE: https://$SDK_GIT_USER:$SDK_GIT_PASS@gitlab.internal.weclapp.com/weclapp/frontend/sdk.git
  script: |
    git clone "$REPOSITORY_REMOTE" sdk-remote --depth 1
    mv sdk-remote/.git sdk
    cd sdk
    git config user.email "noreply@weclapp.com"
    git config user.name "$SDK_GIT_USER"
    git add .
    git commit -m "$CI_COMMIT_SHA"
    git push "$REPOSITORY_REMOTE" master

publish:package:
  extends: .npm:defaults
  allow_failure: true
  stage: publish
  dependencies: ['generate']
  rules:
    - when: manual
  script: |
    cd sdk
    echo "@weclapp:registry=${CI_API_V4_URL}/projects/153/packages/npm/">.npmrc
    echo "${CI_API_V4_URL#https?}/projects/153/packages/npm/:_authToken=\${CI_JOB_TOKEN}">>.npmrc
    npm publish

publish:image:
  extends: .npm:defaults
  stage: publish
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      when: manual
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: manual
  services:
    - name: $CI_REGISTRY/weclapp_ops/base_images/docker:stable-dind
      alias: docker
  variables:
    DOCKER_HOST: tcp://docker:2376
    DOCKER_TLS_CERTDIR: "/certs"
    DOCKER_IMAGE_REF: $CI_REGISTRY_IMAGE:${CI_COMMIT_REF_SLUG}
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script: |
    docker pull ${DOCKER_IMAGE_REF} || true
    docker --config ~/.docker_bi/ build --cache-from ${DOCKER_IMAGE_REF} -t ${DOCKER_IMAGE_REF} .
    docker push ${DOCKER_IMAGE_REF}
