stages:
  - build
  - generate
  - publish

workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - when: always

.npm:config: &npm_config
  - npm config set @weclapp:registry $CI_API_V4_URL/packages/npm/
  - npm config set //gitlab.internal.weclapp.com/api/v4/packages/npm/:_authToken $CI_JOB_TOKEN
  - npm config set //gitlab.internal.weclapp.com/api/v4/projects/$CI_PROJECT_ID/packages/npm/:_authToken $CI_JOB_TOKEN

.node:image:
  image: $CI_REGISTRY/weclapp_ops/base_images/node:latest-18-alpine

.npm:defaults:
  tags:
    - small
  extends: .node:image
  cache:
    key: node_modules_cache
    policy: pull
    paths:
      - node_modules/
  before_script:
    - *npm_config
    - npm install --unsafe-perm --prefer-offline --no-audit
    - npm prune

build:
  extends: .npm:defaults
  stage: build
  artifacts:
    expire_in: 4 weeks
    paths:
      - lib
  script:
    - npm run cli:build

generate:targets:
  extends: .npm:defaults
  stage: generate
  dependencies:
    - build
  artifacts:
    expire_in: 4 weeks
    paths:
      - sdk
  variables:
    NODE_ENV: development
  parallel:
    matrix:
      - TARGET: node
      - TARGET: node.rx
      - TARGET: browser
      - TARGET: browser.rx
  script:
    - chmod +x ./bin/cli.js
    - ./bin/cli.js tests/openapi.json --target $TARGET

generate:variants:
  extends: .npm:defaults
  stage: generate
  dependencies:
    - build
  artifacts:
    expire_in: 4 weeks
    paths:
      - sdk
  variables:
    NODE_ENV: development
  parallel:
    matrix:
      - FLAGS: --deprecated --target browser
      - FLAGS: --generate-unique --target browser
      - FLAGS: --deprecated --generate-unique --target browser
  script:
    - chmod +x ./bin/cli.js
    - ./bin/cli.js tests/openapi.json $FLAGS

publish:
  tags:
    - tiny
  stage: publish
  extends: .node:image
  rules:
    # Only allow publishing if tag matches semantic versioning (v1.0.0)
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+[.][0-9]+[.][0-9]+$/'
    - when: never
  dependencies:
    - build
  before_script:
    - *npm_config
  script:
    - npm publish

publish:snapshot:
  tags:
    - tiny
  stage: publish
  extends: .node:image
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_COMMIT_TAG !~ /^v[0-9]+[.][0-9]+[.][0-9]+$/'
      when: manual
      allow_failure: true
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: on_success
    - when: never
  dependencies:
    - build
  before_script:
    - *npm_config
  script:
    - LATEST_TAG=$(git describe --tags --abbrev=0)
    - LATEST_TAG_RAW=$(echo "$LATEST_TAG" | sed 's/v//')
    - COMMITS_SINCE_LAST_TAG=$(git rev-list "$LATEST_TAG"..HEAD --count)
    - VERSION="$LATEST_TAG_RAW-dev.$COMMITS_SINCE_LAST_TAG"
    - echo "Publish version '$VERSION'..."
    - npm version "$VERSION" --git-tag-version=false
    - npm publish
